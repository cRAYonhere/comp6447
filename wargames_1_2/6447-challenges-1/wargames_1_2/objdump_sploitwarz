
./sploitwarz:     file format elf32-i386


Disassembly of section .interp:

00000174 <.interp>:
 174:	2f                   	das    
 175:	6c                   	ins    BYTE PTR es:[edi],dx
 176:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 17d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 184:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

00000188 <.note.ABI-tag>:
 188:	04 00                	add    al,0x0
 18a:	00 00                	add    BYTE PTR [eax],al
 18c:	10 00                	adc    BYTE PTR [eax],al
 18e:	00 00                	add    BYTE PTR [eax],al
 190:	01 00                	add    DWORD PTR [eax],eax
 192:	00 00                	add    BYTE PTR [eax],al
 194:	47                   	inc    edi
 195:	4e                   	dec    esi
 196:	55                   	push   ebp
 197:	00 00                	add    BYTE PTR [eax],al
 199:	00 00                	add    BYTE PTR [eax],al
 19b:	00 03                	add    BYTE PTR [ebx],al
 19d:	00 00                	add    BYTE PTR [eax],al
 19f:	00 02                	add    BYTE PTR [edx],al
 1a1:	00 00                	add    BYTE PTR [eax],al
 1a3:	00 00                	add    BYTE PTR [eax],al
 1a5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

000001a8 <.note.gnu.build-id>:
 1a8:	04 00                	add    al,0x0
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	14 00                	adc    al,0x0
 1ae:	00 00                	add    BYTE PTR [eax],al
 1b0:	03 00                	add    eax,DWORD PTR [eax]
 1b2:	00 00                	add    BYTE PTR [eax],al
 1b4:	47                   	inc    edi
 1b5:	4e                   	dec    esi
 1b6:	55                   	push   ebp
 1b7:	00 1e                	add    BYTE PTR [esi],bl
 1b9:	21 06                	and    DWORD PTR [esi],eax
 1bb:	f6 d6                	not    dh
 1bd:	52                   	push   edx
 1be:	1d a4 e1 1e ff       	sbb    eax,0xff1ee1a4
 1c3:	de 6a 82             	fisubr WORD PTR [edx-0x7e]
 1c6:	2f                   	das    
 1c7:	00 2a                	add    BYTE PTR [edx],ch
 1c9:	ac                   	lods   al,BYTE PTR ds:[esi]
 1ca:	bd                   	.byte 0xbd
 1cb:	0d                   	.byte 0xd

Disassembly of section .gnu.hash:

000001cc <.gnu.hash>:
 1cc:	02 00                	add    al,BYTE PTR [eax]
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	17                   	pop    ss
 1d1:	00 00                	add    BYTE PTR [eax],al
 1d3:	00 01                	add    BYTE PTR [ecx],al
 1d5:	00 00                	add    BYTE PTR [eax],al
 1d7:	00 05 00 00 00 40    	add    BYTE PTR ds:0x40000000,al
 1dd:	20 00                	and    BYTE PTR [eax],al
 1df:	22 17                	and    dl,BYTE PTR [edi]
 1e1:	00 00                	add    BYTE PTR [eax],al
 1e3:	00 18                	add    BYTE PTR [eax],bl
 1e5:	00 00                	add    BYTE PTR [eax],al
 1e7:	00 27                	add    BYTE PTR [edi],ah
 1e9:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1ea:	e4 18                	in     al,0x18
 1ec:	ad                   	lods   eax,DWORD PTR ds:[esi]
 1ed:	4b                   	dec    ebx
 1ee:	e3 c0                	jecxz  1b0 <_init-0xe50>

Disassembly of section .dynsym:

000001f0 <.dynsym>:
	...
 200:	8d 00                	lea    eax,[eax]
	...
 20a:	00 00                	add    BYTE PTR [eax],al
 20c:	12 00                	adc    al,BYTE PTR [eax]
 20e:	00 00                	add    BYTE PTR [eax],al
 210:	d7                   	xlat   BYTE PTR ds:[ebx]
	...
 219:	00 00                	add    BYTE PTR [eax],al
 21b:	00 20                	add    BYTE PTR [eax],ah
 21d:	00 00                	add    BYTE PTR [eax],al
 21f:	00 20                	add    BYTE PTR [eax],ah
	...
 229:	00 00                	add    BYTE PTR [eax],al
 22b:	00 12                	add    BYTE PTR [edx],dl
 22d:	00 00                	add    BYTE PTR [eax],al
 22f:	00 5c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bl
	...
 23b:	00 12                	add    BYTE PTR [edx],dl
 23d:	00 00                	add    BYTE PTR [eax],al
 23f:	00 6b 00             	add    BYTE PTR [ebx+0x0],ch
	...
 24a:	00 00                	add    BYTE PTR [eax],al
 24c:	12 00                	adc    al,BYTE PTR [eax]
 24e:	00 00                	add    BYTE PTR [eax],al
 250:	4f                   	dec    edi
	...
 259:	00 00                	add    BYTE PTR [eax],al
 25b:	00 12                	add    BYTE PTR [edx],dl
 25d:	00 00                	add    BYTE PTR [eax],al
 25f:	00 7e 00             	add    BYTE PTR [esi+0x0],bh
	...
 26a:	00 00                	add    BYTE PTR [eax],al
 26c:	22 00                	and    al,BYTE PTR [eax]
 26e:	00 00                	add    BYTE PTR [eax],al
 270:	72 00                	jb     272 <_init-0xd8e>
	...
 27a:	00 00                	add    BYTE PTR [eax],al
 27c:	12 00                	adc    al,BYTE PTR [eax]
 27e:	00 00                	add    BYTE PTR [eax],al
 280:	4a                   	dec    edx
	...
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 12                	add    BYTE PTR [edx],dl
 28d:	00 00                	add    BYTE PTR [eax],al
 28f:	00 f3                	add    bl,dh
	...
 299:	00 00                	add    BYTE PTR [eax],al
 29b:	00 20                	add    BYTE PTR [eax],ah
 29d:	00 00                	add    BYTE PTR [eax],al
 29f:	00 1a                	add    BYTE PTR [edx],bl
	...
 2a9:	00 00                	add    BYTE PTR [eax],al
 2ab:	00 12                	add    BYTE PTR [edx],dl
 2ad:	00 00                	add    BYTE PTR [eax],al
 2af:	00 27                	add    BYTE PTR [edi],ah
	...
 2b9:	00 00                	add    BYTE PTR [eax],al
 2bb:	00 12                	add    BYTE PTR [edx],dl
 2bd:	00 00                	add    BYTE PTR [eax],al
 2bf:	00 94 00 00 00 00 00 	add    BYTE PTR [eax+eax*1+0x0],dl
 2c6:	00 00                	add    BYTE PTR [eax],al
 2c8:	00 00                	add    BYTE PTR [eax],al
 2ca:	00 00                	add    BYTE PTR [eax],al
 2cc:	12 00                	adc    al,BYTE PTR [eax]
 2ce:	00 00                	add    BYTE PTR [eax],al
 2d0:	2d 00 00 00 00       	sub    eax,0x0
 2d5:	00 00                	add    BYTE PTR [eax],al
 2d7:	00 00                	add    BYTE PTR [eax],al
 2d9:	00 00                	add    BYTE PTR [eax],al
 2db:	00 12                	add    BYTE PTR [edx],dl
 2dd:	00 00                	add    BYTE PTR [eax],al
 2df:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
	...
 2eb:	00 12                	add    BYTE PTR [edx],dl
 2ed:	00 00                	add    BYTE PTR [eax],al
 2ef:	00 42 00             	add    BYTE PTR [edx+0x0],al
	...
 2fa:	00 00                	add    BYTE PTR [eax],al
 2fc:	12 00                	adc    al,BYTE PTR [eax]
 2fe:	00 00                	add    BYTE PTR [eax],al
 300:	28 00                	sub    BYTE PTR [eax],al
	...
 30a:	00 00                	add    BYTE PTR [eax],al
 30c:	12 00                	adc    al,BYTE PTR [eax]
 30e:	00 00                	add    BYTE PTR [eax],al
 310:	64 00 00             	add    BYTE PTR fs:[eax],al
	...
 31b:	00 11                	add    BYTE PTR [ecx],dl
 31d:	00 00                	add    BYTE PTR [eax],al
 31f:	00 1f                	add    BYTE PTR [edi],bl
	...
 329:	00 00                	add    BYTE PTR [eax],al
 32b:	00 12                	add    BYTE PTR [edx],dl
 32d:	00 00                	add    BYTE PTR [eax],al
 32f:	00 33                	add    BYTE PTR [ebx],dh
	...
 339:	00 00                	add    BYTE PTR [eax],al
 33b:	00 12                	add    BYTE PTR [edx],dl
 33d:	00 00                	add    BYTE PTR [eax],al
 33f:	00 78 00             	add    BYTE PTR [eax+0x0],bh
	...
 34a:	00 00                	add    BYTE PTR [eax],al
 34c:	12 00                	adc    al,BYTE PTR [eax]
 34e:	00 00                	add    BYTE PTR [eax],al
 350:	02 01                	add    al,BYTE PTR [ecx]
	...
 35a:	00 00                	add    BYTE PTR [eax],al
 35c:	20 00                	and    BYTE PTR [eax],al
 35e:	00 00                	add    BYTE PTR [eax],al
 360:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
 361:	00 00                	add    BYTE PTR [eax],al
 363:	00 99 12 00 00 4f    	add    BYTE PTR [ecx+0x4f000012],bl
 369:	00 00                	add    BYTE PTR [eax],al
 36b:	00 12                	add    BYTE PTR [edx],dl
 36d:	00 0e                	add    BYTE PTR [esi],cl
 36f:	00 0b                	add    BYTE PTR [ebx],cl
 371:	00 00                	add    BYTE PTR [eax],al
 373:	00 04 30             	add    BYTE PTR [eax+esi*1],al
 376:	00 00                	add    BYTE PTR [eax],al
 378:	04 00                	add    al,0x0
 37a:	00 00                	add    BYTE PTR [eax],al
 37c:	11 00                	adc    DWORD PTR [eax],eax
 37e:	10 00                	adc    BYTE PTR [eax],al

Disassembly of section .dynstr:

00000380 <.dynstr>:
 380:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 384:	63 2e                	arpl   WORD PTR [esi],bp
 386:	73 6f                	jae    3f7 <_init-0xc09>
 388:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 38d:	4f                   	dec    edi
 38e:	5f                   	pop    edi
 38f:	73 74                	jae    405 <_init-0xbfb>
 391:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 398:	64 
 399:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 39c:	69 74 00 73 70 72 69 	imul   esi,DWORD PTR [eax+eax*1+0x73],0x6e697270
 3a3:	6e 
 3a4:	74 66                	je     40c <_init-0xbf4>
 3a6:	00 73 72             	add    BYTE PTR [ebx+0x72],dh
 3a9:	61                   	popa   
 3aa:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3ab:	64 00 66 6f          	add    BYTE PTR fs:[esi+0x6f],ah
 3af:	70 65                	jo     416 <_init-0xbea>
 3b1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3b2:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 3b5:	69 73 6f 63 39 39 5f 	imul   esi,DWORD PTR [ebx+0x6f],0x5f393963
 3bc:	73 63                	jae    421 <_init-0xbdf>
 3be:	61                   	popa   
 3bf:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3c0:	66 00 73 74          	data16 add BYTE PTR [ebx+0x74],dh
 3c4:	72 6e                	jb     434 <_init-0xbcc>
 3c6:	63 70 79             	arpl   WORD PTR [eax+0x79],si
 3c9:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 3cc:	74 73                	je     441 <_init-0xbbf>
 3ce:	00 74 69 6d          	add    BYTE PTR [ecx+ebp*2+0x6d],dh
 3d2:	65 00 70 75          	add    BYTE PTR gs:[eax+0x75],dh
 3d6:	74 63                	je     43b <_init-0xbc5>
 3d8:	68 61 72 00 67       	push   0x67007261
 3dd:	65 74 63             	gs je  443 <_init-0xbbd>
 3e0:	68 61 72 00 73       	push   0x73007261
 3e5:	74 64                	je     44b <_init-0xbb5>
 3e7:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3e8:	75 74                	jne    45e <_init-0xba2>
 3ea:	00 66 63             	add    BYTE PTR [esi+0x63],ah
 3ed:	6c                   	ins    BYTE PTR es:[edi],dx
 3ee:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3ef:	73 65                	jae    456 <_init-0xbaa>
 3f1:	00 66 72             	add    BYTE PTR [esi+0x72],ah
 3f4:	65 61                	gs popa 
 3f6:	64 00 71 73          	add    BYTE PTR fs:[ecx+0x73],dh
 3fa:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3fb:	72 74                	jb     471 <_init-0xb8f>
 3fd:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 400:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 403:	5f                   	pop    edi
 404:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 40a:	7a 65                	jp     471 <_init-0xb8f>
 40c:	00 73 65             	add    BYTE PTR [ebx+0x65],dh
 40f:	74 62                	je     473 <_init-0xb8d>
 411:	75 66                	jne    479 <_init-0xb87>
 413:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 416:	6c                   	ins    BYTE PTR es:[edi],dx
 417:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 41e:	72 74                	jb     494 <_init-0xb6c>
 420:	5f                   	pop    edi
 421:	6d                   	ins    DWORD PTR es:[edi],dx
 422:	61                   	popa   
 423:	69 6e 00 72 61 6e 64 	imul   ebp,DWORD PTR [esi+0x0],0x646e6172
 42a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 42b:	6d                   	ins    DWORD PTR es:[edi],dx
 42c:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 42f:	49                   	dec    ecx
 430:	42                   	inc    edx
 431:	43                   	inc    ebx
 432:	5f                   	pop    edi
 433:	32 2e                	xor    ch,BYTE PTR [esi]
 435:	37                   	aaa    
 436:	00 47 4c             	add    BYTE PTR [edi+0x4c],al
 439:	49                   	dec    ecx
 43a:	42                   	inc    edx
 43b:	43                   	inc    ebx
 43c:	5f                   	pop    edi
 43d:	32 2e                	xor    ch,BYTE PTR [esi]
 43f:	31 2e                	xor    DWORD PTR [esi],ebp
 441:	33 00                	xor    eax,DWORD PTR [eax]
 443:	47                   	inc    edi
 444:	4c                   	dec    esp
 445:	49                   	dec    ecx
 446:	42                   	inc    edx
 447:	43                   	inc    ebx
 448:	5f                   	pop    edi
 449:	32 2e                	xor    ch,BYTE PTR [esi]
 44b:	31 00                	xor    DWORD PTR [eax],eax
 44d:	47                   	inc    edi
 44e:	4c                   	dec    esp
 44f:	49                   	dec    ecx
 450:	42                   	inc    edx
 451:	43                   	inc    ebx
 452:	5f                   	pop    edi
 453:	32 2e                	xor    ch,BYTE PTR [esi]
 455:	30 00                	xor    BYTE PTR [eax],al
 457:	5f                   	pop    edi
 458:	49                   	dec    ecx
 459:	54                   	push   esp
 45a:	4d                   	dec    ebp
 45b:	5f                   	pop    edi
 45c:	64 65 72 65          	fs gs jb 4c5 <_init-0xb3b>
 460:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 467:	4d 
 468:	43                   	inc    ebx
 469:	6c                   	ins    BYTE PTR es:[edi],dx
 46a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 46b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 46c:	65 54                	gs push esp
 46e:	61                   	popa   
 46f:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 473:	5f                   	pop    edi
 474:	5f                   	pop    edi
 475:	67 6d                	ins    DWORD PTR es:[di],dx
 477:	6f                   	outs   dx,DWORD PTR ds:[esi]
 478:	6e                   	outs   dx,BYTE PTR ds:[esi]
 479:	5f                   	pop    edi
 47a:	73 74                	jae    4f0 <_init-0xb10>
 47c:	61                   	popa   
 47d:	72 74                	jb     4f3 <_init-0xb0d>
 47f:	5f                   	pop    edi
 480:	5f                   	pop    edi
 481:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 484:	54                   	push   esp
 485:	4d                   	dec    ebp
 486:	5f                   	pop    edi
 487:	72 65                	jb     4ee <_init-0xb12>
 489:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 490:	4d 
 491:	43                   	inc    ebx
 492:	6c                   	ins    BYTE PTR es:[edi],dx
 493:	6f                   	outs   dx,DWORD PTR ds:[esi]
 494:	6e                   	outs   dx,BYTE PTR ds:[esi]
 495:	65 54                	gs push esp
 497:	61                   	popa   
 498:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]

Disassembly of section .gnu.version:

0000049c <.gnu.version>:
 49c:	00 00                	add    BYTE PTR [eax],al
 49e:	02 00                	add    al,BYTE PTR [eax]
 4a0:	00 00                	add    BYTE PTR [eax],al
 4a2:	02 00                	add    al,BYTE PTR [eax]
 4a4:	02 00                	add    al,BYTE PTR [eax]
 4a6:	03 00                	add    eax,DWORD PTR [eax]
 4a8:	02 00                	add    al,BYTE PTR [eax]
 4aa:	04 00                	add    al,0x0
 4ac:	02 00                	add    al,BYTE PTR [eax]
 4ae:	02 00                	add    al,BYTE PTR [eax]
 4b0:	00 00                	add    BYTE PTR [eax],al
 4b2:	02 00                	add    al,BYTE PTR [eax]
 4b4:	02 00                	add    al,BYTE PTR [eax]
 4b6:	02 00                	add    al,BYTE PTR [eax]
 4b8:	03 00                	add    eax,DWORD PTR [eax]
 4ba:	02 00                	add    al,BYTE PTR [eax]
 4bc:	02 00                	add    al,BYTE PTR [eax]
 4be:	02 00                	add    al,BYTE PTR [eax]
 4c0:	02 00                	add    al,BYTE PTR [eax]
 4c2:	02 00                	add    al,BYTE PTR [eax]
 4c4:	05 00 02 00 00       	add    eax,0x200
 4c9:	00 01                	add    BYTE PTR [ecx],al
 4cb:	00 01                	add    BYTE PTR [ecx],al
	...

Disassembly of section .gnu.version_r:

000004d0 <.gnu.version_r>:
 4d0:	01 00                	add    DWORD PTR [eax],eax
 4d2:	04 00                	add    al,0x0
 4d4:	01 00                	add    DWORD PTR [eax],eax
 4d6:	00 00                	add    BYTE PTR [eax],al
 4d8:	10 00                	adc    BYTE PTR [eax],al
 4da:	00 00                	add    BYTE PTR [eax],al
 4dc:	00 00                	add    BYTE PTR [eax],al
 4de:	00 00                	add    BYTE PTR [eax],al
 4e0:	17                   	pop    ss
 4e1:	69 69 0d 00 00 05 00 	imul   ebp,DWORD PTR [ecx+0xd],0x50000
 4e8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 4e9:	00 00                	add    BYTE PTR [eax],al
 4eb:	00 10                	add    BYTE PTR [eax],dl
 4ed:	00 00                	add    BYTE PTR [eax],al
 4ef:	00 73 1f             	add    BYTE PTR [ebx+0x1f],dh
 4f2:	69 09 00 00 04 00    	imul   ecx,DWORD PTR [ecx],0x40000
 4f8:	b7 00                	mov    bh,0x0
 4fa:	00 00                	add    BYTE PTR [eax],al
 4fc:	10 00                	adc    BYTE PTR [eax],al
 4fe:	00 00                	add    BYTE PTR [eax],al
 500:	11 69 69             	adc    DWORD PTR [ecx+0x69],ebp
 503:	0d 00 00 03 00       	or     eax,0x30000
 508:	c3                   	ret    
 509:	00 00                	add    BYTE PTR [eax],al
 50b:	00 10                	add    BYTE PTR [eax],dl
 50d:	00 00                	add    BYTE PTR [eax],al
 50f:	00 10                	add    BYTE PTR [eax],dl
 511:	69 69 0d 00 00 02 00 	imul   ebp,DWORD PTR [ecx+0xd],0x20000
 518:	cd 00                	int    0x0
 51a:	00 00                	add    BYTE PTR [eax],al
 51c:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

00000520 <.rel.dyn>:
 520:	98                   	cwde   
 521:	4b                   	dec    ebx
 522:	00 00                	add    BYTE PTR [eax],al
 524:	08 00                	or     BYTE PTR [eax],al
 526:	00 00                	add    BYTE PTR [eax],al
 528:	9c                   	pushf  
 529:	4b                   	dec    ebx
 52a:	00 00                	add    BYTE PTR [eax],al
 52c:	08 00                	or     BYTE PTR [eax],al
 52e:	00 00                	add    BYTE PTR [eax],al
 530:	a0 4c 00 00 08       	mov    al,ds:0x800004c
 535:	00 00                	add    BYTE PTR [eax],al
 537:	00 fc                	add    ah,bh
 539:	4c                   	dec    esp
 53a:	00 00                	add    BYTE PTR [eax],al
 53c:	08 00                	or     BYTE PTR [eax],al
 53e:	00 00                	add    BYTE PTR [eax],al
 540:	00 4d 00             	add    BYTE PTR [ebp+0x0],cl
 543:	00 08                	add    BYTE PTR [eax],cl
 545:	00 00                	add    BYTE PTR [eax],al
 547:	00 04 4d 00 00 08 00 	add    BYTE PTR [ecx*2+0x80000],al
 54e:	00 00                	add    BYTE PTR [eax],al
 550:	08 4d 00             	or     BYTE PTR [ebp+0x0],cl
 553:	00 08                	add    BYTE PTR [eax],cl
 555:	00 00                	add    BYTE PTR [eax],al
 557:	00 0c 4d 00 00 08 00 	add    BYTE PTR [ecx*2+0x80000],cl
 55e:	00 00                	add    BYTE PTR [eax],al
 560:	10 4d 00             	adc    BYTE PTR [ebp+0x0],cl
 563:	00 08                	add    BYTE PTR [eax],cl
 565:	00 00                	add    BYTE PTR [eax],al
 567:	00 14 4d 00 00 08 00 	add    BYTE PTR [ecx*2+0x80000],dl
 56e:	00 00                	add    BYTE PTR [eax],al
 570:	18 4d 00             	sbb    BYTE PTR [ebp+0x0],cl
 573:	00 08                	add    BYTE PTR [eax],cl
 575:	00 00                	add    BYTE PTR [eax],al
 577:	00 1c 4d 00 00 08 00 	add    BYTE PTR [ecx*2+0x80000],bl
 57e:	00 00                	add    BYTE PTR [eax],al
 580:	20 4d 00             	and    BYTE PTR [ebp+0x0],cl
 583:	00 08                	add    BYTE PTR [eax],cl
 585:	00 00                	add    BYTE PTR [eax],al
 587:	00 90 4c 00 00 06    	add    BYTE PTR [eax+0x600004c],dl
 58d:	02 00                	add    al,BYTE PTR [eax]
 58f:	00 94 4c 00 00 06 07 	add    BYTE PTR [esp+ecx*2+0x7060000],dl
 596:	00 00                	add    BYTE PTR [eax],al
 598:	98                   	cwde   
 599:	4c                   	dec    esp
 59a:	00 00                	add    BYTE PTR [eax],al
 59c:	06                   	push   es
 59d:	0a 00                	or     al,BYTE PTR [eax]
 59f:	00 9c 4c 00 00 06 12 	add    BYTE PTR [esp+ecx*2+0x12060000],bl
 5a6:	00 00                	add    BYTE PTR [eax],al
 5a8:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 5a9:	4c                   	dec    esp
 5aa:	00 00                	add    BYTE PTR [eax],al
 5ac:	06                   	push   es
 5ad:	16                   	push   ss
	...

Disassembly of section .rel.plt:

000005b0 <.rel.plt>:
 5b0:	b4 4c                	mov    ah,0x4c
 5b2:	00 00                	add    BYTE PTR [eax],al
 5b4:	07                   	pop    es
 5b5:	01 00                	add    DWORD PTR [eax],eax
 5b7:	00 b8 4c 00 00 07    	add    BYTE PTR [eax+0x700004c],bh
 5bd:	03 00                	add    eax,DWORD PTR [eax]
 5bf:	00 bc 4c 00 00 07 04 	add    BYTE PTR [esp+ecx*2+0x4070000],bh
 5c6:	00 00                	add    BYTE PTR [eax],al
 5c8:	c0 4c 00 00 07       	ror    BYTE PTR [eax+eax*1+0x0],0x7
 5cd:	05 00 00 c4 4c       	add    eax,0x4cc40000
 5d2:	00 00                	add    BYTE PTR [eax],al
 5d4:	07                   	pop    es
 5d5:	06                   	push   es
 5d6:	00 00                	add    BYTE PTR [eax],al
 5d8:	c8 4c 00 00          	enter  0x4c,0x0
 5dc:	07                   	pop    es
 5dd:	08 00                	or     BYTE PTR [eax],al
 5df:	00 cc                	add    ah,cl
 5e1:	4c                   	dec    esp
 5e2:	00 00                	add    BYTE PTR [eax],al
 5e4:	07                   	pop    es
 5e5:	09 00                	or     DWORD PTR [eax],eax
 5e7:	00 d0                	add    al,dl
 5e9:	4c                   	dec    esp
 5ea:	00 00                	add    BYTE PTR [eax],al
 5ec:	07                   	pop    es
 5ed:	0b 00                	or     eax,DWORD PTR [eax]
 5ef:	00 d4                	add    ah,dl
 5f1:	4c                   	dec    esp
 5f2:	00 00                	add    BYTE PTR [eax],al
 5f4:	07                   	pop    es
 5f5:	0c 00                	or     al,0x0
 5f7:	00 d8                	add    al,bl
 5f9:	4c                   	dec    esp
 5fa:	00 00                	add    BYTE PTR [eax],al
 5fc:	07                   	pop    es
 5fd:	0d 00 00 dc 4c       	or     eax,0x4cdc0000
 602:	00 00                	add    BYTE PTR [eax],al
 604:	07                   	pop    es
 605:	0e                   	push   cs
 606:	00 00                	add    BYTE PTR [eax],al
 608:	e0 4c                	loopne 656 <_init-0x9aa>
 60a:	00 00                	add    BYTE PTR [eax],al
 60c:	07                   	pop    es
 60d:	0f 00 00             	sldt   WORD PTR [eax]
 610:	e4 4c                	in     al,0x4c
 612:	00 00                	add    BYTE PTR [eax],al
 614:	07                   	pop    es
 615:	10 00                	adc    BYTE PTR [eax],al
 617:	00 e8                	add    al,ch
 619:	4c                   	dec    esp
 61a:	00 00                	add    BYTE PTR [eax],al
 61c:	07                   	pop    es
 61d:	11 00                	adc    DWORD PTR [eax],eax
 61f:	00 ec                	add    ah,ch
 621:	4c                   	dec    esp
 622:	00 00                	add    BYTE PTR [eax],al
 624:	07                   	pop    es
 625:	13 00                	adc    eax,DWORD PTR [eax]
 627:	00 f0                	add    al,dh
 629:	4c                   	dec    esp
 62a:	00 00                	add    BYTE PTR [eax],al
 62c:	07                   	pop    es
 62d:	14 00                	adc    al,0x0
 62f:	00 f4                	add    ah,dh
 631:	4c                   	dec    esp
 632:	00 00                	add    BYTE PTR [eax],al
 634:	07                   	pop    es
 635:	15                   	.byte 0x15
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	53                   	push   ebx
    1001:	83 ec 08             	sub    esp,0x8
    1004:	e8 97 01 00 00       	call   11a0 <__x86.get_pc_thunk.bx>
    1009:	81 c3 9f 3c 00 00    	add    ebx,0x3c9f
    100f:	8b 83 f0 ff ff ff    	mov    eax,DWORD PTR [ebx-0x10]
    1015:	85 c0                	test   eax,eax
    1017:	74 05                	je     101e <_init+0x1e>
    1019:	e8 3a 01 00 00       	call   1158 <__gmon_start__@plt>
    101e:	83 c4 08             	add    esp,0x8
    1021:	5b                   	pop    ebx
    1022:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1036:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    103c:	00 00                	add    BYTE PTR [eax],al
	...

00001040 <setbuf@plt>:
    1040:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    1046:	68 00 00 00 00       	push   0x0
    104b:	e9 e0 ff ff ff       	jmp    1030 <.plt>

00001050 <printf@plt>:
    1050:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
    1056:	68 08 00 00 00       	push   0x8
    105b:	e9 d0 ff ff ff       	jmp    1030 <.plt>

00001060 <getchar@plt>:
    1060:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    1066:	68 10 00 00 00       	push   0x10
    106b:	e9 c0 ff ff ff       	jmp    1030 <.plt>

00001070 <fclose@plt>:
    1070:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
    1076:	68 18 00 00 00       	push   0x18
    107b:	e9 b0 ff ff ff       	jmp    1030 <.plt>

00001080 <time@plt>:
    1080:	ff a3 1c 00 00 00    	jmp    DWORD PTR [ebx+0x1c]
    1086:	68 20 00 00 00       	push   0x20
    108b:	e9 a0 ff ff ff       	jmp    1030 <.plt>

00001090 <fread@plt>:
    1090:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
    1096:	68 28 00 00 00       	push   0x28
    109b:	e9 90 ff ff ff       	jmp    1030 <.plt>

000010a0 <puts@plt>:
    10a0:	ff a3 24 00 00 00    	jmp    DWORD PTR [ebx+0x24]
    10a6:	68 30 00 00 00       	push   0x30
    10ab:	e9 80 ff ff ff       	jmp    1030 <.plt>

000010b0 <exit@plt>:
    10b0:	ff a3 28 00 00 00    	jmp    DWORD PTR [ebx+0x28]
    10b6:	68 38 00 00 00       	push   0x38
    10bb:	e9 70 ff ff ff       	jmp    1030 <.plt>

000010c0 <srand@plt>:
    10c0:	ff a3 2c 00 00 00    	jmp    DWORD PTR [ebx+0x2c]
    10c6:	68 40 00 00 00       	push   0x40
    10cb:	e9 60 ff ff ff       	jmp    1030 <.plt>

000010d0 <__libc_start_main@plt>:
    10d0:	ff a3 30 00 00 00    	jmp    DWORD PTR [ebx+0x30]
    10d6:	68 48 00 00 00       	push   0x48
    10db:	e9 50 ff ff ff       	jmp    1030 <.plt>

000010e0 <fopen@plt>:
    10e0:	ff a3 34 00 00 00    	jmp    DWORD PTR [ebx+0x34]
    10e6:	68 50 00 00 00       	push   0x50
    10eb:	e9 40 ff ff ff       	jmp    1030 <.plt>

000010f0 <putchar@plt>:
    10f0:	ff a3 38 00 00 00    	jmp    DWORD PTR [ebx+0x38]
    10f6:	68 58 00 00 00       	push   0x58
    10fb:	e9 30 ff ff ff       	jmp    1030 <.plt>

00001100 <strncpy@plt>:
    1100:	ff a3 3c 00 00 00    	jmp    DWORD PTR [ebx+0x3c]
    1106:	68 60 00 00 00       	push   0x60
    110b:	e9 20 ff ff ff       	jmp    1030 <.plt>

00001110 <rand@plt>:
    1110:	ff a3 40 00 00 00    	jmp    DWORD PTR [ebx+0x40]
    1116:	68 68 00 00 00       	push   0x68
    111b:	e9 10 ff ff ff       	jmp    1030 <.plt>

00001120 <sprintf@plt>:
    1120:	ff a3 44 00 00 00    	jmp    DWORD PTR [ebx+0x44]
    1126:	68 70 00 00 00       	push   0x70
    112b:	e9 00 ff ff ff       	jmp    1030 <.plt>

00001130 <__isoc99_scanf@plt>:
    1130:	ff a3 48 00 00 00    	jmp    DWORD PTR [ebx+0x48]
    1136:	68 78 00 00 00       	push   0x78
    113b:	e9 f0 fe ff ff       	jmp    1030 <.plt>

00001140 <qsort@plt>:
    1140:	ff a3 4c 00 00 00    	jmp    DWORD PTR [ebx+0x4c]
    1146:	68 80 00 00 00       	push   0x80
    114b:	e9 e0 fe ff ff       	jmp    1030 <.plt>

Disassembly of section .plt.got:

00001150 <__cxa_finalize@plt>:
    1150:	ff a3 ec ff ff ff    	jmp    DWORD PTR [ebx-0x14]
    1156:	66 90                	xchg   ax,ax

00001158 <__gmon_start__@plt>:
    1158:	ff a3 f0 ff ff ff    	jmp    DWORD PTR [ebx-0x10]
    115e:	66 90                	xchg   ax,ax

Disassembly of section .text:

00001160 <_start>:
    1160:	31 ed                	xor    ebp,ebp
    1162:	5e                   	pop    esi
    1163:	89 e1                	mov    ecx,esp
    1165:	83 e4 f0             	and    esp,0xfffffff0
    1168:	50                   	push   eax
    1169:	54                   	push   esp
    116a:	52                   	push   edx
    116b:	e8 22 00 00 00       	call   1192 <_start+0x32>
    1170:	81 c3 38 3b 00 00    	add    ebx,0x3b38
    1176:	8d 83 28 d7 ff ff    	lea    eax,[ebx-0x28d8]
    117c:	50                   	push   eax
    117d:	8d 83 c8 d6 ff ff    	lea    eax,[ebx-0x2938]
    1183:	50                   	push   eax
    1184:	51                   	push   ecx
    1185:	56                   	push   esi
    1186:	ff b3 f8 ff ff ff    	push   DWORD PTR [ebx-0x8]
    118c:	e8 3f ff ff ff       	call   10d0 <__libc_start_main@plt>
    1191:	f4                   	hlt    
    1192:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1195:	c3                   	ret    
    1196:	66 90                	xchg   ax,ax
    1198:	66 90                	xchg   ax,ax
    119a:	66 90                	xchg   ax,ax
    119c:	66 90                	xchg   ax,ax
    119e:	66 90                	xchg   ax,ax

000011a0 <__x86.get_pc_thunk.bx>:
    11a0:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    11a3:	c3                   	ret    
    11a4:	66 90                	xchg   ax,ax
    11a6:	66 90                	xchg   ax,ax
    11a8:	66 90                	xchg   ax,ax
    11aa:	66 90                	xchg   ax,ax
    11ac:	66 90                	xchg   ax,ax
    11ae:	66 90                	xchg   ax,ax

000011b0 <deregister_tm_clones>:
    11b0:	e8 e0 00 00 00       	call   1295 <__x86.get_pc_thunk.dx>
    11b5:	81 c2 f3 3a 00 00    	add    edx,0x3af3
    11bb:	8d 8a 7c 00 00 00    	lea    ecx,[edx+0x7c]
    11c1:	8d 82 7c 00 00 00    	lea    eax,[edx+0x7c]
    11c7:	39 c8                	cmp    eax,ecx
    11c9:	74 1d                	je     11e8 <deregister_tm_clones+0x38>
    11cb:	8b 82 e8 ff ff ff    	mov    eax,DWORD PTR [edx-0x18]
    11d1:	85 c0                	test   eax,eax
    11d3:	74 13                	je     11e8 <deregister_tm_clones+0x38>
    11d5:	55                   	push   ebp
    11d6:	89 e5                	mov    ebp,esp
    11d8:	83 ec 14             	sub    esp,0x14
    11db:	51                   	push   ecx
    11dc:	ff d0                	call   eax
    11de:	83 c4 10             	add    esp,0x10
    11e1:	c9                   	leave  
    11e2:	c3                   	ret    
    11e3:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    11e7:	90                   	nop
    11e8:	c3                   	ret    
    11e9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

000011f0 <register_tm_clones>:
    11f0:	e8 a0 00 00 00       	call   1295 <__x86.get_pc_thunk.dx>
    11f5:	81 c2 b3 3a 00 00    	add    edx,0x3ab3
    11fb:	55                   	push   ebp
    11fc:	89 e5                	mov    ebp,esp
    11fe:	53                   	push   ebx
    11ff:	8d 8a 7c 00 00 00    	lea    ecx,[edx+0x7c]
    1205:	8d 82 7c 00 00 00    	lea    eax,[edx+0x7c]
    120b:	83 ec 04             	sub    esp,0x4
    120e:	29 c8                	sub    eax,ecx
    1210:	c1 f8 02             	sar    eax,0x2
    1213:	89 c3                	mov    ebx,eax
    1215:	c1 eb 1f             	shr    ebx,0x1f
    1218:	01 d8                	add    eax,ebx
    121a:	d1 f8                	sar    eax,1
    121c:	74 14                	je     1232 <register_tm_clones+0x42>
    121e:	8b 92 fc ff ff ff    	mov    edx,DWORD PTR [edx-0x4]
    1224:	85 d2                	test   edx,edx
    1226:	74 0a                	je     1232 <register_tm_clones+0x42>
    1228:	83 ec 08             	sub    esp,0x8
    122b:	50                   	push   eax
    122c:	51                   	push   ecx
    122d:	ff d2                	call   edx
    122f:	83 c4 10             	add    esp,0x10
    1232:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1235:	c9                   	leave  
    1236:	c3                   	ret    
    1237:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    123e:	66 90                	xchg   ax,ax

00001240 <__do_global_dtors_aux>:
    1240:	55                   	push   ebp
    1241:	89 e5                	mov    ebp,esp
    1243:	53                   	push   ebx
    1244:	e8 57 ff ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1249:	81 c3 5f 3a 00 00    	add    ebx,0x3a5f
    124f:	83 ec 04             	sub    esp,0x4
    1252:	80 bb 98 00 00 00 00 	cmp    BYTE PTR [ebx+0x98],0x0
    1259:	75 27                	jne    1282 <__do_global_dtors_aux+0x42>
    125b:	8b 83 ec ff ff ff    	mov    eax,DWORD PTR [ebx-0x14]
    1261:	85 c0                	test   eax,eax
    1263:	74 11                	je     1276 <__do_global_dtors_aux+0x36>
    1265:	83 ec 0c             	sub    esp,0xc
    1268:	ff b3 54 00 00 00    	push   DWORD PTR [ebx+0x54]
    126e:	e8 dd fe ff ff       	call   1150 <__cxa_finalize@plt>
    1273:	83 c4 10             	add    esp,0x10
    1276:	e8 35 ff ff ff       	call   11b0 <deregister_tm_clones>
    127b:	c6 83 98 00 00 00 01 	mov    BYTE PTR [ebx+0x98],0x1
    1282:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1285:	c9                   	leave  
    1286:	c3                   	ret    
    1287:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    128e:	66 90                	xchg   ax,ax

00001290 <frame_dummy>:
    1290:	e9 5b ff ff ff       	jmp    11f0 <register_tm_clones>

00001295 <__x86.get_pc_thunk.dx>:
    1295:	8b 14 24             	mov    edx,DWORD PTR [esp]
    1298:	c3                   	ret    

00001299 <random>:
    1299:	55                   	push   ebp
    129a:	89 e5                	mov    ebp,esp
    129c:	53                   	push   ebx
    129d:	83 ec 14             	sub    esp,0x14
    12a0:	e8 fb fe ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    12a5:	81 c3 03 3a 00 00    	add    ebx,0x3a03
    12ab:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    12ae:	2b 45 08             	sub    eax,DWORD PTR [ebp+0x8]
    12b1:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    12b4:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    12b7:	8d 48 01             	lea    ecx,[eax+0x1]
    12ba:	b8 ff ff ff 7f       	mov    eax,0x7fffffff
    12bf:	99                   	cdq    
    12c0:	f7 f9                	idiv   ecx
    12c2:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    12c5:	e8 46 fe ff ff       	call   1110 <rand@plt>
    12ca:	99                   	cdq    
    12cb:	f7 7d f0             	idiv   DWORD PTR [ebp-0x10]
    12ce:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    12d1:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    12d4:	3b 45 f4             	cmp    eax,DWORD PTR [ebp-0xc]
    12d7:	7f ec                	jg     12c5 <random+0x2c>
    12d9:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    12dc:	01 45 ec             	add    DWORD PTR [ebp-0x14],eax
    12df:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    12e2:	83 c4 14             	add    esp,0x14
    12e5:	5b                   	pop    ebx
    12e6:	5d                   	pop    ebp
    12e7:	c3                   	ret    

000012e8 <frandom>:
    12e8:	55                   	push   ebp
    12e9:	89 e5                	mov    ebp,esp
    12eb:	53                   	push   ebx
    12ec:	83 ec 34             	sub    esp,0x34
    12ef:	e8 ac fe ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    12f4:	81 c3 b4 39 00 00    	add    ebx,0x39b4
    12fa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    12fd:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
    1300:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    1303:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1306:	8b 45 10             	mov    eax,DWORD PTR [ebp+0x10]
    1309:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    130c:	8b 45 14             	mov    eax,DWORD PTR [ebp+0x14]
    130f:	89 45 dc             	mov    DWORD PTR [ebp-0x24],eax
    1312:	e8 f9 fd ff ff       	call   1110 <rand@plt>
    1317:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
    131a:	db 45 cc             	fild   DWORD PTR [ebp-0x34]
    131d:	db ab 38 ea ff ff    	fld    TBYTE PTR [ebx-0x15c8]
    1323:	de f9                	fdivrp st(1),st
    1325:	dd 5d f0             	fstp   QWORD PTR [ebp-0x10]
    1328:	dd 45 e0             	fld    QWORD PTR [ebp-0x20]
    132b:	dd 45 f0             	fld    QWORD PTR [ebp-0x10]
    132e:	dd 45 d8             	fld    QWORD PTR [ebp-0x28]
    1331:	dd 45 e0             	fld    QWORD PTR [ebp-0x20]
    1334:	de e9                	fsubrp st(1),st
    1336:	de c9                	fmulp  st(1),st
    1338:	de c1                	faddp  st(1),st
    133a:	dd 5d d0             	fstp   QWORD PTR [ebp-0x30]
    133d:	dd 45 d0             	fld    QWORD PTR [ebp-0x30]
    1340:	83 c4 34             	add    esp,0x34
    1343:	5b                   	pop    ebx
    1344:	5d                   	pop    ebp
    1345:	c3                   	ret    

00001346 <int_cmp>:
    1346:	55                   	push   ebp
    1347:	89 e5                	mov    ebp,esp
    1349:	83 ec 10             	sub    esp,0x10
    134c:	e8 1a 10 00 00       	call   236b <__x86.get_pc_thunk.ax>
    1351:	05 57 39 00 00       	add    eax,0x3957
    1356:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1359:	89 45 fc             	mov    DWORD PTR [ebp-0x4],eax
    135c:	8b 45 0c             	mov    eax,DWORD PTR [ebp+0xc]
    135f:	89 45 f8             	mov    DWORD PTR [ebp-0x8],eax
    1362:	8b 45 fc             	mov    eax,DWORD PTR [ebp-0x4]
    1365:	8b 10                	mov    edx,DWORD PTR [eax]
    1367:	8b 45 f8             	mov    eax,DWORD PTR [ebp-0x8]
    136a:	8b 00                	mov    eax,DWORD PTR [eax]
    136c:	29 c2                	sub    edx,eax
    136e:	89 d0                	mov    eax,edx
    1370:	c9                   	leave  
    1371:	c3                   	ret    

00001372 <get_input>:
    1372:	55                   	push   ebp
    1373:	89 e5                	mov    ebp,esp
    1375:	53                   	push   ebx
    1376:	83 ec 14             	sub    esp,0x14
    1379:	e8 22 fe ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    137e:	81 c3 2a 39 00 00    	add    ebx,0x392a
    1384:	e8 d7 fc ff ff       	call   1060 <getchar@plt>
    1389:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    138c:	90                   	nop
    138d:	e8 ce fc ff ff       	call   1060 <getchar@plt>
    1392:	88 45 f6             	mov    BYTE PTR [ebp-0xa],al
    1395:	80 7d f6 00          	cmp    BYTE PTR [ebp-0xa],0x0
    1399:	74 0c                	je     13a7 <get_input+0x35>
    139b:	80 7d f6 ff          	cmp    BYTE PTR [ebp-0xa],0xff
    139f:	74 06                	je     13a7 <get_input+0x35>
    13a1:	80 7d f6 0a          	cmp    BYTE PTR [ebp-0xa],0xa
    13a5:	75 e6                	jne    138d <get_input+0x1b>
    13a7:	0f b6 45 f7          	movzx  eax,BYTE PTR [ebp-0x9]
    13ab:	83 c4 14             	add    esp,0x14
    13ae:	5b                   	pop    ebx
    13af:	5d                   	pop    ebp
    13b0:	c3                   	ret    

000013b1 <get_str>:
    13b1:	55                   	push   ebp
    13b2:	89 e5                	mov    ebp,esp
    13b4:	53                   	push   ebx
    13b5:	81 ec 14 04 00 00    	sub    esp,0x414
    13bb:	e8 e0 fd ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    13c0:	81 c3 e8 38 00 00    	add    ebx,0x38e8
    13c6:	83 ec 04             	sub    esp,0x4
    13c9:	ff 75 0c             	push   DWORD PTR [ebp+0xc]
    13cc:	8d 83 da e3 ff ff    	lea    eax,[ebx-0x1c26]
    13d2:	50                   	push   eax
    13d3:	8d 85 f7 fb ff ff    	lea    eax,[ebp-0x409]
    13d9:	50                   	push   eax
    13da:	e8 41 fd ff ff       	call   1120 <sprintf@plt>
    13df:	83 c4 10             	add    esp,0x10
    13e2:	83 ec 08             	sub    esp,0x8
    13e5:	ff 75 08             	push   DWORD PTR [ebp+0x8]
    13e8:	8d 85 f7 fb ff ff    	lea    eax,[ebp-0x409]
    13ee:	50                   	push   eax
    13ef:	e8 3c fd ff ff       	call   1130 <__isoc99_scanf@plt>
    13f4:	83 c4 10             	add    esp,0x10
    13f7:	90                   	nop
    13f8:	e8 63 fc ff ff       	call   1060 <getchar@plt>
    13fd:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    1400:	80 7d f7 00          	cmp    BYTE PTR [ebp-0x9],0x0
    1404:	74 0c                	je     1412 <get_str+0x61>
    1406:	80 7d f7 ff          	cmp    BYTE PTR [ebp-0x9],0xff
    140a:	74 06                	je     1412 <get_str+0x61>
    140c:	80 7d f7 0a          	cmp    BYTE PTR [ebp-0x9],0xa
    1410:	75 e6                	jne    13f8 <get_str+0x47>
    1412:	90                   	nop
    1413:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1416:	c9                   	leave  
    1417:	c3                   	ret    

00001418 <get_int>:
    1418:	55                   	push   ebp
    1419:	89 e5                	mov    ebp,esp
    141b:	53                   	push   ebx
    141c:	83 ec 14             	sub    esp,0x14
    141f:	e8 7c fd ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1424:	81 c3 84 38 00 00    	add    ebx,0x3884
    142a:	83 ec 08             	sub    esp,0x8
    142d:	8d 45 f0             	lea    eax,[ebp-0x10]
    1430:	50                   	push   eax
    1431:	8d 83 e0 e3 ff ff    	lea    eax,[ebx-0x1c20]
    1437:	50                   	push   eax
    1438:	e8 f3 fc ff ff       	call   1130 <__isoc99_scanf@plt>
    143d:	83 c4 10             	add    esp,0x10
    1440:	90                   	nop
    1441:	e8 1a fc ff ff       	call   1060 <getchar@plt>
    1446:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    1449:	80 7d f7 00          	cmp    BYTE PTR [ebp-0x9],0x0
    144d:	74 0c                	je     145b <get_int+0x43>
    144f:	80 7d f7 ff          	cmp    BYTE PTR [ebp-0x9],0xff
    1453:	74 06                	je     145b <get_int+0x43>
    1455:	80 7d f7 0a          	cmp    BYTE PTR [ebp-0x9],0xa
    1459:	75 e6                	jne    1441 <get_int+0x29>
    145b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    145e:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1461:	c9                   	leave  
    1462:	c3                   	ret    

00001463 <get_float>:
    1463:	55                   	push   ebp
    1464:	89 e5                	mov    ebp,esp
    1466:	53                   	push   ebx
    1467:	83 ec 14             	sub    esp,0x14
    146a:	e8 31 fd ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    146f:	81 c3 39 38 00 00    	add    ebx,0x3839
    1475:	83 ec 08             	sub    esp,0x8
    1478:	8d 45 e8             	lea    eax,[ebp-0x18]
    147b:	50                   	push   eax
    147c:	8d 83 e3 e3 ff ff    	lea    eax,[ebx-0x1c1d]
    1482:	50                   	push   eax
    1483:	e8 a8 fc ff ff       	call   1130 <__isoc99_scanf@plt>
    1488:	83 c4 10             	add    esp,0x10
    148b:	90                   	nop
    148c:	e8 cf fb ff ff       	call   1060 <getchar@plt>
    1491:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    1494:	80 7d f7 00          	cmp    BYTE PTR [ebp-0x9],0x0
    1498:	74 0c                	je     14a6 <get_float+0x43>
    149a:	80 7d f7 ff          	cmp    BYTE PTR [ebp-0x9],0xff
    149e:	74 06                	je     14a6 <get_float+0x43>
    14a0:	80 7d f7 0a          	cmp    BYTE PTR [ebp-0x9],0xa
    14a4:	75 e6                	jne    148c <get_float+0x29>
    14a6:	dd 45 e8             	fld    QWORD PTR [ebp-0x18]
    14a9:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    14ac:	c9                   	leave  
    14ad:	c3                   	ret    

000014ae <get_digit>:
    14ae:	55                   	push   ebp
    14af:	89 e5                	mov    ebp,esp
    14b1:	53                   	push   ebx
    14b2:	83 ec 14             	sub    esp,0x14
    14b5:	e8 e6 fc ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    14ba:	81 c3 ee 37 00 00    	add    ebx,0x37ee
    14c0:	e8 9b fb ff ff       	call   1060 <getchar@plt>
    14c5:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    14c8:	90                   	nop
    14c9:	e8 92 fb ff ff       	call   1060 <getchar@plt>
    14ce:	88 45 f6             	mov    BYTE PTR [ebp-0xa],al
    14d1:	80 7d f6 00          	cmp    BYTE PTR [ebp-0xa],0x0
    14d5:	74 0c                	je     14e3 <get_digit+0x35>
    14d7:	80 7d f6 ff          	cmp    BYTE PTR [ebp-0xa],0xff
    14db:	74 06                	je     14e3 <get_digit+0x35>
    14dd:	80 7d f6 0a          	cmp    BYTE PTR [ebp-0xa],0xa
    14e1:	75 e6                	jne    14c9 <get_digit+0x1b>
    14e3:	0f be 45 f7          	movsx  eax,BYTE PTR [ebp-0x9]
    14e7:	83 e8 30             	sub    eax,0x30
    14ea:	83 c4 14             	add    esp,0x14
    14ed:	5b                   	pop    ebx
    14ee:	5d                   	pop    ebp
    14ef:	c3                   	ret    

000014f0 <nonfib>:
    14f0:	55                   	push   ebp
    14f1:	89 e5                	mov    ebp,esp
    14f3:	53                   	push   ebx
    14f4:	83 ec 14             	sub    esp,0x14
    14f7:	e8 a4 fc ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    14fc:	81 c3 ac 37 00 00    	add    ebx,0x37ac
    1502:	8b 93 04 01 00 00    	mov    edx,DWORD PTR [ebx+0x104]
    1508:	8b 83 b8 00 00 00    	mov    eax,DWORD PTR [ebx+0xb8]
    150e:	83 ec 08             	sub    esp,0x8
    1511:	52                   	push   edx
    1512:	50                   	push   eax
    1513:	e8 81 fd ff ff       	call   1299 <random>
    1518:	83 c4 10             	add    esp,0x10
    151b:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    151e:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
    1525:	eb 1c                	jmp    1543 <nonfib+0x53>
    1527:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    152a:	8b 84 83 b8 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0xb8]
    1531:	39 45 f4             	cmp    DWORD PTR [ebp-0xc],eax
    1534:	75 09                	jne    153f <nonfib+0x4f>
    1536:	c7 45 f4 ff ff ff ff 	mov    DWORD PTR [ebp-0xc],0xffffffff
    153d:	eb 0c                	jmp    154b <nonfib+0x5b>
    153f:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
    1543:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1546:	83 f8 13             	cmp    eax,0x13
    1549:	76 dc                	jbe    1527 <nonfib+0x37>
    154b:	83 7d f4 ff          	cmp    DWORD PTR [ebp-0xc],0xffffffff
    154f:	75 02                	jne    1553 <nonfib+0x63>
    1551:	eb af                	jmp    1502 <nonfib+0x12>
    1553:	90                   	nop
    1554:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1557:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    155a:	c9                   	leave  
    155b:	c3                   	ret    

0000155c <win>:
    155c:	55                   	push   ebp
    155d:	89 e5                	mov    ebp,esp
    155f:	57                   	push   edi
    1560:	53                   	push   ebx
    1561:	81 ec 10 02 00 00    	sub    esp,0x210
    1567:	e8 34 fc ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    156c:	81 c3 3c 37 00 00    	add    ebx,0x373c
    1572:	8d 95 f4 fd ff ff    	lea    edx,[ebp-0x20c]
    1578:	b8 00 00 00 00       	mov    eax,0x0
    157d:	b9 80 00 00 00       	mov    ecx,0x80
    1582:	89 d7                	mov    edi,edx
    1584:	f3 ab                	rep stos DWORD PTR es:[edi],eax
    1586:	83 ec 08             	sub    esp,0x8
    1589:	8d 83 e7 e3 ff ff    	lea    eax,[ebx-0x1c19]
    158f:	50                   	push   eax
    1590:	8d 83 ea e3 ff ff    	lea    eax,[ebx-0x1c16]
    1596:	50                   	push   eax
    1597:	e8 44 fb ff ff       	call   10e0 <fopen@plt>
    159c:	83 c4 10             	add    esp,0x10
    159f:	89 45 f4             	mov    DWORD PTR [ebp-0xc],eax
    15a2:	83 7d f4 00          	cmp    DWORD PTR [ebp-0xc],0x0
    15a6:	75 14                	jne    15bc <win+0x60>
    15a8:	83 ec 0c             	sub    esp,0xc
    15ab:	8d 83 f0 e3 ff ff    	lea    eax,[ebx-0x1c10]
    15b1:	50                   	push   eax
    15b2:	e8 e9 fa ff ff       	call   10a0 <puts@plt>
    15b7:	83 c4 10             	add    esp,0x10
    15ba:	eb 43                	jmp    15ff <win+0xa3>
    15bc:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    15bf:	68 00 02 00 00       	push   0x200
    15c4:	6a 01                	push   0x1
    15c6:	8d 85 f4 fd ff ff    	lea    eax,[ebp-0x20c]
    15cc:	50                   	push   eax
    15cd:	e8 be fa ff ff       	call   1090 <fread@plt>
    15d2:	83 c4 10             	add    esp,0x10
    15d5:	83 ec 0c             	sub    esp,0xc
    15d8:	8d 85 f4 fd ff ff    	lea    eax,[ebp-0x20c]
    15de:	50                   	push   eax
    15df:	e8 bc fa ff ff       	call   10a0 <puts@plt>
    15e4:	83 c4 10             	add    esp,0x10
    15e7:	83 ec 0c             	sub    esp,0xc
    15ea:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    15ed:	e8 7e fa ff ff       	call   1070 <fclose@plt>
    15f2:	83 c4 10             	add    esp,0x10
    15f5:	83 ec 0c             	sub    esp,0xc
    15f8:	6a 00                	push   0x0
    15fa:	e8 b1 fa ff ff       	call   10b0 <exit@plt>
    15ff:	8d 65 f8             	lea    esp,[ebp-0x8]
    1602:	5b                   	pop    ebx
    1603:	5f                   	pop    edi
    1604:	5d                   	pop    ebp
    1605:	c3                   	ret    

00001606 <restock>:
    1606:	55                   	push   ebp
    1607:	89 e5                	mov    ebp,esp
    1609:	57                   	push   edi
    160a:	56                   	push   esi
    160b:	53                   	push   ebx
    160c:	83 ec 4c             	sub    esp,0x4c
    160f:	e8 8c fb ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1614:	81 c3 94 36 00 00    	add    ebx,0x3694
    161a:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
    1621:	e9 00 01 00 00       	jmp    1726 <restock+0x120>
    1626:	c7 45 e0 01 00 00 00 	mov    DWORD PTR [ebp-0x20],0x1
    162d:	e9 e4 00 00 00       	jmp    1716 <restock+0x110>
    1632:	dd 83 48 ea ff ff    	fld    QWORD PTR [ebx-0x15b8]
    1638:	8d 64 24 f8          	lea    esp,[esp-0x8]
    163c:	dd 1c 24             	fstp   QWORD PTR [esp]
    163f:	dd 83 50 ea ff ff    	fld    QWORD PTR [ebx-0x15b0]
    1645:	8d 64 24 f8          	lea    esp,[esp-0x8]
    1649:	dd 1c 24             	fstp   QWORD PTR [esp]
    164c:	e8 97 fc ff ff       	call   12e8 <frandom>
    1651:	83 c4 10             	add    esp,0x10
    1654:	dd 5d d8             	fstp   QWORD PTR [ebp-0x28]
    1657:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    165a:	0f af 45 e0          	imul   eax,DWORD PTR [ebp-0x20]
    165e:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
    1661:	db 45 ac             	fild   DWORD PTR [ebp-0x54]
    1664:	dd 45 d8             	fld    QWORD PTR [ebp-0x28]
    1667:	de c9                	fmulp  st(1),st
    1669:	dd 5d d0             	fstp   QWORD PTR [ebp-0x30]
    166c:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    166f:	0f af 45 e0          	imul   eax,DWORD PTR [ebp-0x20]
    1673:	0f af 45 e0          	imul   eax,DWORD PTR [ebp-0x20]
    1677:	89 45 ac             	mov    DWORD PTR [ebp-0x54],eax
    167a:	db 45 ac             	fild   DWORD PTR [ebp-0x54]
    167d:	dd 45 d8             	fld    QWORD PTR [ebp-0x28]
    1680:	de c9                	fmulp  st(1),st
    1682:	dd 5d c8             	fstp   QWORD PTR [ebp-0x38]
    1685:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    1688:	ba 06 00 00 00       	mov    edx,0x6
    168d:	29 c2                	sub    edx,eax
    168f:	89 d0                	mov    eax,edx
    1691:	89 45 c4             	mov    DWORD PTR [ebp-0x3c],eax
    1694:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    1697:	8d 70 ff             	lea    esi,[eax-0x1]
    169a:	ff 75 cc             	push   DWORD PTR [ebp-0x34]
    169d:	ff 75 c8             	push   DWORD PTR [ebp-0x38]
    16a0:	ff 75 d4             	push   DWORD PTR [ebp-0x2c]
    16a3:	ff 75 d0             	push   DWORD PTR [ebp-0x30]
    16a6:	e8 3d fc ff ff       	call   12e8 <frandom>
    16ab:	83 c4 10             	add    esp,0x10
    16ae:	8d 83 18 01 00 00    	lea    eax,[ebx+0x118]
    16b4:	8d 4e 02             	lea    ecx,[esi+0x2]
    16b7:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
    16ba:	c1 e1 03             	shl    ecx,0x3
    16bd:	6b d2 3c             	imul   edx,edx,0x3c
    16c0:	01 ca                	add    edx,ecx
    16c2:	01 d0                	add    eax,edx
    16c4:	dd 58 04             	fstp   QWORD PTR [eax+0x4]
    16c7:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
    16ca:	0f af 45 c4          	imul   eax,DWORD PTR [ebp-0x3c]
    16ce:	8d 14 00             	lea    edx,[eax+eax*1]
    16d1:	8b 45 c4             	mov    eax,DWORD PTR [ebp-0x3c]
    16d4:	0f af 45 c4          	imul   eax,DWORD PTR [ebp-0x3c]
    16d8:	83 ec 08             	sub    esp,0x8
    16db:	52                   	push   edx
    16dc:	50                   	push   eax
    16dd:	e8 b7 fb ff ff       	call   1299 <random>
    16e2:	83 c4 10             	add    esp,0x10
    16e5:	89 c2                	mov    edx,eax
    16e7:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    16ea:	8d 70 ff             	lea    esi,[eax-0x1]
    16ed:	83 ec 08             	sub    esp,0x8
    16f0:	52                   	push   edx
    16f1:	6a 00                	push   0x0
    16f3:	e8 a1 fb ff ff       	call   1299 <random>
    16f8:	83 c4 10             	add    esp,0x10
    16fb:	89 c7                	mov    edi,eax
    16fd:	8d 8b 18 01 00 00    	lea    ecx,[ebx+0x118]
    1703:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
    1706:	89 d0                	mov    eax,edx
    1708:	c1 e0 04             	shl    eax,0x4
    170b:	29 d0                	sub    eax,edx
    170d:	01 f0                	add    eax,esi
    170f:	89 3c 81             	mov    DWORD PTR [ecx+eax*4],edi
    1712:	83 45 e0 01          	add    DWORD PTR [ebp-0x20],0x1
    1716:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    1719:	83 f8 05             	cmp    eax,0x5
    171c:	0f 86 10 ff ff ff    	jbe    1632 <restock+0x2c>
    1722:	83 45 e4 01          	add    DWORD PTR [ebp-0x1c],0x1
    1726:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1729:	83 f8 03             	cmp    eax,0x3
    172c:	0f 86 f4 fe ff ff    	jbe    1626 <restock+0x20>
    1732:	90                   	nop
    1733:	8d 65 f4             	lea    esp,[ebp-0xc]
    1736:	5b                   	pop    ebx
    1737:	5e                   	pop    esi
    1738:	5f                   	pop    edi
    1739:	5d                   	pop    ebp
    173a:	c3                   	ret    

0000173b <run_game>:
    173b:	55                   	push   ebp
    173c:	89 e5                	mov    ebp,esp
    173e:	53                   	push   ebx
    173f:	83 ec 24             	sub    esp,0x24
    1742:	e8 59 fa ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1747:	81 c3 61 35 00 00    	add    ebx,0x3561
    174d:	83 ec 0c             	sub    esp,0xc
    1750:	6a 00                	push   0x0
    1752:	e8 29 f9 ff ff       	call   1080 <time@plt>
    1757:	83 c4 10             	add    esp,0x10
    175a:	83 ec 0c             	sub    esp,0xc
    175d:	50                   	push   eax
    175e:	e8 5d f9 ff ff       	call   10c0 <srand@plt>
    1763:	83 c4 10             	add    esp,0x10
    1766:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    176c:	c7 00 00 00 00 00    	mov    DWORD PTR [eax],0x0
    1772:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    1778:	c7 40 08 0a 00 00 00 	mov    DWORD PTR [eax+0x8],0xa
    177f:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    1785:	dd 83 58 ea ff ff    	fld    QWORD PTR [ebx-0x15a8]
    178b:	dd 58 0c             	fstp   QWORD PTR [eax+0xc]
    178e:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    1794:	c7 80 14 01 00 00 01 	mov    DWORD PTR [eax+0x114],0x1
    179b:	00 00 00 
    179e:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    17a4:	c7 40 04 00 00 00 00 	mov    DWORD PTR [eax+0x4],0x0
    17ab:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    17b2:	eb 18                	jmp    17cc <run_game+0x91>
    17b4:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    17ba:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    17bd:	83 c2 44             	add    edx,0x44
    17c0:	c7 44 90 04 00 00 00 	mov    DWORD PTR [eax+edx*4+0x4],0x0
    17c7:	00 
    17c8:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    17cc:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    17cf:	83 f8 04             	cmp    eax,0x4
    17d2:	76 e0                	jbe    17b4 <run_game+0x79>
    17d4:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
    17db:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [ebp-0x14],0x1
    17e2:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [ebp-0x1c],0x0
    17e9:	c7 45 e8 01 00 00 00 	mov    DWORD PTR [ebp-0x18],0x1
    17f0:	eb 23                	jmp    1815 <run_game+0xda>
    17f2:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    17f5:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    17f8:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    17fb:	01 45 ec             	add    DWORD PTR [ebp-0x14],eax
    17fe:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1801:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1804:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1807:	8b 55 e4             	mov    edx,DWORD PTR [ebp-0x1c]
    180a:	89 94 83 b8 00 00 00 	mov    DWORD PTR [ebx+eax*4+0xb8],edx
    1811:	83 45 e8 01          	add    DWORD PTR [ebp-0x18],0x1
    1815:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1818:	83 f8 13             	cmp    eax,0x13
    181b:	76 d5                	jbe    17f2 <run_game+0xb7>
    181d:	83 ec 0c             	sub    esp,0xc
    1820:	8d 83 1a e4 ff ff    	lea    eax,[ebx-0x1be6]
    1826:	50                   	push   eax
    1827:	e8 74 f8 ff ff       	call   10a0 <puts@plt>
    182c:	83 c4 10             	add    esp,0x10
    182f:	83 ec 0c             	sub    esp,0xc
    1832:	8d 83 38 e4 ff ff    	lea    eax,[ebx-0x1bc8]
    1838:	50                   	push   eax
    1839:	e8 62 f8 ff ff       	call   10a0 <puts@plt>
    183e:	83 c4 10             	add    esp,0x10
    1841:	83 ec 0c             	sub    esp,0xc
    1844:	8d 83 74 e4 ff ff    	lea    eax,[ebx-0x1b8c]
    184a:	50                   	push   eax
    184b:	e8 50 f8 ff ff       	call   10a0 <puts@plt>
    1850:	83 c4 10             	add    esp,0x10
    1853:	83 ec 0c             	sub    esp,0xc
    1856:	8d 83 ac e4 ff ff    	lea    eax,[ebx-0x1b54]
    185c:	50                   	push   eax
    185d:	e8 3e f8 ff ff       	call   10a0 <puts@plt>
    1862:	83 c4 10             	add    esp,0x10
    1865:	83 ec 04             	sub    esp,0x4
    1868:	dd 83 60 ea ff ff    	fld    QWORD PTR [ebx-0x15a0]
    186e:	8d 64 24 f8          	lea    esp,[esp-0x8]
    1872:	dd 1c 24             	fstp   QWORD PTR [esp]
    1875:	8d 83 e4 e4 ff ff    	lea    eax,[ebx-0x1b1c]
    187b:	50                   	push   eax
    187c:	e8 cf f7 ff ff       	call   1050 <printf@plt>
    1881:	83 c4 10             	add    esp,0x10
    1884:	83 ec 0c             	sub    esp,0xc
    1887:	8d 83 08 e5 ff ff    	lea    eax,[ebx-0x1af8]
    188d:	50                   	push   eax
    188e:	e8 0d f8 ff ff       	call   10a0 <puts@plt>
    1893:	83 c4 10             	add    esp,0x10
    1896:	83 ec 0c             	sub    esp,0xc
    1899:	8d 83 34 e5 ff ff    	lea    eax,[ebx-0x1acc]
    189f:	50                   	push   eax
    18a0:	e8 fb f7 ff ff       	call   10a0 <puts@plt>
    18a5:	83 c4 10             	add    esp,0x10
    18a8:	83 ec 0c             	sub    esp,0xc
    18ab:	8d 83 74 e5 ff ff    	lea    eax,[ebx-0x1a8c]
    18b1:	50                   	push   eax
    18b2:	e8 e9 f7 ff ff       	call   10a0 <puts@plt>
    18b7:	83 c4 10             	add    esp,0x10
    18ba:	83 ec 0c             	sub    esp,0xc
    18bd:	8d 83 b0 e5 ff ff    	lea    eax,[ebx-0x1a50]
    18c3:	50                   	push   eax
    18c4:	e8 d7 f7 ff ff       	call   10a0 <puts@plt>
    18c9:	83 c4 10             	add    esp,0x10
    18cc:	83 ec 0c             	sub    esp,0xc
    18cf:	8d 83 f4 e5 ff ff    	lea    eax,[ebx-0x1a0c]
    18d5:	50                   	push   eax
    18d6:	e8 75 f7 ff ff       	call   1050 <printf@plt>
    18db:	83 c4 10             	add    esp,0x10
    18de:	83 ec 08             	sub    esp,0x8
    18e1:	68 ff 00 00 00       	push   0xff
    18e6:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    18ec:	8d 40 14             	lea    eax,[eax+0x14]
    18ef:	50                   	push   eax
    18f0:	e8 bc fa ff ff       	call   13b1 <get_str>
    18f5:	83 c4 10             	add    esp,0x10
    18f8:	83 ec 0c             	sub    esp,0xc
    18fb:	6a 0a                	push   0xa
    18fd:	e8 ee f7 ff ff       	call   10f0 <putchar@plt>
    1902:	83 c4 10             	add    esp,0x10
    1905:	e8 fc fc ff ff       	call   1606 <restock>
    190a:	e8 86 08 00 00       	call   2195 <game_loop>
    190f:	85 c0                	test   eax,eax
    1911:	75 f2                	jne    1905 <run_game+0x1ca>
    1913:	90                   	nop
    1914:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1917:	c9                   	leave  
    1918:	c3                   	ret    

00001919 <do_status>:
    1919:	55                   	push   ebp
    191a:	89 e5                	mov    ebp,esp
    191c:	53                   	push   ebx
    191d:	83 ec 14             	sub    esp,0x14
    1920:	e8 7b f8 ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1925:	81 c3 83 33 00 00    	add    ebx,0x3383
    192b:	83 ec 0c             	sub    esp,0xc
    192e:	8d 83 1c e6 ff ff    	lea    eax,[ebx-0x19e4]
    1934:	50                   	push   eax
    1935:	e8 66 f7 ff ff       	call   10a0 <puts@plt>
    193a:	83 c4 10             	add    esp,0x10
    193d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1940:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
    1943:	83 ec 08             	sub    esp,0x8
    1946:	50                   	push   eax
    1947:	8d 83 4e e6 ff ff    	lea    eax,[ebx-0x19b2]
    194d:	50                   	push   eax
    194e:	e8 fd f6 ff ff       	call   1050 <printf@plt>
    1953:	83 c4 10             	add    esp,0x10
    1956:	83 ec 0c             	sub    esp,0xc
    1959:	8d 83 5c e6 ff ff    	lea    eax,[ebx-0x19a4]
    195f:	50                   	push   eax
    1960:	e8 3b f7 ff ff       	call   10a0 <puts@plt>
    1965:	83 c4 10             	add    esp,0x10
    1968:	83 ec 08             	sub    esp,0x8
    196b:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    1971:	8d 40 14             	lea    eax,[eax+0x14]
    1974:	50                   	push   eax
    1975:	8d 83 8f e6 ff ff    	lea    eax,[ebx-0x1971]
    197b:	50                   	push   eax
    197c:	e8 cf f6 ff ff       	call   1050 <printf@plt>
    1981:	83 c4 10             	add    esp,0x10
    1984:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1987:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    198a:	83 ec 04             	sub    esp,0x4
    198d:	8d 64 24 f8          	lea    esp,[esp-0x8]
    1991:	dd 1c 24             	fstp   QWORD PTR [esp]
    1994:	8d 83 9b e6 ff ff    	lea    eax,[ebx-0x1965]
    199a:	50                   	push   eax
    199b:	e8 b0 f6 ff ff       	call   1050 <printf@plt>
    19a0:	83 c4 10             	add    esp,0x10
    19a3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    19a6:	8b 00                	mov    eax,DWORD PTR [eax]
    19a8:	8b 84 83 6c 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x6c]
    19af:	83 ec 08             	sub    esp,0x8
    19b2:	50                   	push   eax
    19b3:	8d 83 ab e6 ff ff    	lea    eax,[ebx-0x1955]
    19b9:	50                   	push   eax
    19ba:	e8 91 f6 ff ff       	call   1050 <printf@plt>
    19bf:	83 c4 10             	add    esp,0x10
    19c2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    19c9:	eb 2f                	jmp    19fa <do_status+0xe1>
    19cb:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    19ce:	8b 94 83 58 00 00 00 	mov    edx,DWORD PTR [ebx+eax*4+0x58]
    19d5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    19d8:	8b 4d f4             	mov    ecx,DWORD PTR [ebp-0xc]
    19db:	83 c1 44             	add    ecx,0x44
    19de:	8b 44 88 04          	mov    eax,DWORD PTR [eax+ecx*4+0x4]
    19e2:	83 ec 04             	sub    esp,0x4
    19e5:	52                   	push   edx
    19e6:	50                   	push   eax
    19e7:	8d 83 ba e6 ff ff    	lea    eax,[ebx-0x1946]
    19ed:	50                   	push   eax
    19ee:	e8 5d f6 ff ff       	call   1050 <printf@plt>
    19f3:	83 c4 10             	add    esp,0x10
    19f6:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    19fa:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    19fd:	83 f8 04             	cmp    eax,0x4
    1a00:	76 c9                	jbe    19cb <do_status+0xb2>
    1a02:	83 ec 0c             	sub    esp,0xc
    1a05:	6a 0a                	push   0xa
    1a07:	e8 e4 f6 ff ff       	call   10f0 <putchar@plt>
    1a0c:	83 c4 10             	add    esp,0x10
    1a0f:	8d 83 c3 e6 ff ff    	lea    eax,[ebx-0x193d]
    1a15:	50                   	push   eax
    1a16:	8d 83 c9 e6 ff ff    	lea    eax,[ebx-0x1937]
    1a1c:	50                   	push   eax
    1a1d:	8d 83 cd e6 ff ff    	lea    eax,[ebx-0x1933]
    1a23:	50                   	push   eax
    1a24:	8d 83 d2 e6 ff ff    	lea    eax,[ebx-0x192e]
    1a2a:	50                   	push   eax
    1a2b:	e8 20 f6 ff ff       	call   1050 <printf@plt>
    1a30:	83 c4 10             	add    esp,0x10
    1a33:	83 ec 0c             	sub    esp,0xc
    1a36:	8d 83 e4 e6 ff ff    	lea    eax,[ebx-0x191c]
    1a3c:	50                   	push   eax
    1a3d:	e8 5e f6 ff ff       	call   10a0 <puts@plt>
    1a42:	83 c4 10             	add    esp,0x10
    1a45:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [ebp-0x10],0x0
    1a4c:	eb 61                	jmp    1aaf <do_status+0x196>
    1a4e:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1a51:	8b 10                	mov    edx,DWORD PTR [eax]
    1a53:	8d 83 18 01 00 00    	lea    eax,[ebx+0x118]
    1a59:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
    1a5c:	83 c1 02             	add    ecx,0x2
    1a5f:	c1 e1 03             	shl    ecx,0x3
    1a62:	6b d2 3c             	imul   edx,edx,0x3c
    1a65:	01 ca                	add    edx,ecx
    1a67:	01 d0                	add    eax,edx
    1a69:	dd 40 04             	fld    QWORD PTR [eax+0x4]
    1a6c:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1a6f:	8b 10                	mov    edx,DWORD PTR [eax]
    1a71:	8d 8b 18 01 00 00    	lea    ecx,[ebx+0x118]
    1a77:	89 d0                	mov    eax,edx
    1a79:	c1 e0 04             	shl    eax,0x4
    1a7c:	29 d0                	sub    eax,edx
    1a7e:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1a81:	01 d0                	add    eax,edx
    1a83:	8b 14 81             	mov    edx,DWORD PTR [ecx+eax*4]
    1a86:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1a89:	8b 84 83 58 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x58]
    1a90:	83 ec 0c             	sub    esp,0xc
    1a93:	8d 64 24 f8          	lea    esp,[esp-0x8]
    1a97:	dd 1c 24             	fstp   QWORD PTR [esp]
    1a9a:	52                   	push   edx
    1a9b:	50                   	push   eax
    1a9c:	8d 83 16 e7 ff ff    	lea    eax,[ebx-0x18ea]
    1aa2:	50                   	push   eax
    1aa3:	e8 a8 f5 ff ff       	call   1050 <printf@plt>
    1aa8:	83 c4 20             	add    esp,0x20
    1aab:	83 45 f0 01          	add    DWORD PTR [ebp-0x10],0x1
    1aaf:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1ab2:	83 f8 04             	cmp    eax,0x4
    1ab5:	76 97                	jbe    1a4e <do_status+0x135>
    1ab7:	83 ec 0c             	sub    esp,0xc
    1aba:	6a 0a                	push   0xa
    1abc:	e8 2f f6 ff ff       	call   10f0 <putchar@plt>
    1ac1:	83 c4 10             	add    esp,0x10
    1ac4:	83 ec 0c             	sub    esp,0xc
    1ac7:	8d 83 29 e7 ff ff    	lea    eax,[ebx-0x18d7]
    1acd:	50                   	push   eax
    1ace:	e8 cd f5 ff ff       	call   10a0 <puts@plt>
    1ad3:	83 c4 10             	add    esp,0x10
    1ad6:	83 ec 0c             	sub    esp,0xc
    1ad9:	8d 83 35 e7 ff ff    	lea    eax,[ebx-0x18cb]
    1adf:	50                   	push   eax
    1ae0:	e8 bb f5 ff ff       	call   10a0 <puts@plt>
    1ae5:	83 c4 10             	add    esp,0x10
    1ae8:	83 ec 0c             	sub    esp,0xc
    1aeb:	8d 83 3f e7 ff ff    	lea    eax,[ebx-0x18c1]
    1af1:	50                   	push   eax
    1af2:	e8 a9 f5 ff ff       	call   10a0 <puts@plt>
    1af7:	83 c4 10             	add    esp,0x10
    1afa:	83 ec 0c             	sub    esp,0xc
    1afd:	8d 83 49 e7 ff ff    	lea    eax,[ebx-0x18b7]
    1b03:	50                   	push   eax
    1b04:	e8 97 f5 ff ff       	call   10a0 <puts@plt>
    1b09:	83 c4 10             	add    esp,0x10
    1b0c:	83 ec 0c             	sub    esp,0xc
    1b0f:	8d 83 50 e7 ff ff    	lea    eax,[ebx-0x18b0]
    1b15:	50                   	push   eax
    1b16:	e8 85 f5 ff ff       	call   10a0 <puts@plt>
    1b1b:	83 c4 10             	add    esp,0x10
    1b1e:	83 ec 0c             	sub    esp,0xc
    1b21:	8d 83 58 e7 ff ff    	lea    eax,[ebx-0x18a8]
    1b27:	50                   	push   eax
    1b28:	e8 73 f5 ff ff       	call   10a0 <puts@plt>
    1b2d:	83 c4 10             	add    esp,0x10
    1b30:	83 ec 0c             	sub    esp,0xc
    1b33:	8d 83 69 e7 ff ff    	lea    eax,[ebx-0x1897]
    1b39:	50                   	push   eax
    1b3a:	e8 61 f5 ff ff       	call   10a0 <puts@plt>
    1b3f:	83 c4 10             	add    esp,0x10
    1b42:	83 ec 0c             	sub    esp,0xc
    1b45:	8d 83 72 e7 ff ff    	lea    eax,[ebx-0x188e]
    1b4b:	50                   	push   eax
    1b4c:	e8 ff f4 ff ff       	call   1050 <printf@plt>
    1b51:	83 c4 10             	add    esp,0x10
    1b54:	90                   	nop
    1b55:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1b58:	c9                   	leave  
    1b59:	c3                   	ret    

00001b5a <do_travel>:
    1b5a:	55                   	push   ebp
    1b5b:	89 e5                	mov    ebp,esp
    1b5d:	53                   	push   ebx
    1b5e:	83 ec 14             	sub    esp,0x14
    1b61:	e8 3a f6 ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1b66:	81 c3 42 31 00 00    	add    ebx,0x3142
    1b6c:	83 ec 0c             	sub    esp,0xc
    1b6f:	8d 83 85 e7 ff ff    	lea    eax,[ebx-0x187b]
    1b75:	50                   	push   eax
    1b76:	e8 25 f5 ff ff       	call   10a0 <puts@plt>
    1b7b:	83 c4 10             	add    esp,0x10
    1b7e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    1b85:	eb 28                	jmp    1baf <do_travel+0x55>
    1b87:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1b8a:	8b 84 83 6c 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x6c]
    1b91:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    1b94:	83 c2 01             	add    edx,0x1
    1b97:	83 ec 04             	sub    esp,0x4
    1b9a:	50                   	push   eax
    1b9b:	52                   	push   edx
    1b9c:	8d 83 99 e7 ff ff    	lea    eax,[ebx-0x1867]
    1ba2:	50                   	push   eax
    1ba3:	e8 a8 f4 ff ff       	call   1050 <printf@plt>
    1ba8:	83 c4 10             	add    esp,0x10
    1bab:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    1baf:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1bb2:	83 f8 03             	cmp    eax,0x3
    1bb5:	76 d0                	jbe    1b87 <do_travel+0x2d>
    1bb7:	c7 45 f0 ff ff ff ff 	mov    DWORD PTR [ebp-0x10],0xffffffff
    1bbe:	eb 1d                	jmp    1bdd <do_travel+0x83>
    1bc0:	83 ec 0c             	sub    esp,0xc
    1bc3:	8d 83 a1 e7 ff ff    	lea    eax,[ebx-0x185f]
    1bc9:	50                   	push   eax
    1bca:	e8 81 f4 ff ff       	call   1050 <printf@plt>
    1bcf:	83 c4 10             	add    esp,0x10
    1bd2:	e8 d7 f8 ff ff       	call   14ae <get_digit>
    1bd7:	83 e8 01             	sub    eax,0x1
    1bda:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1bdd:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
    1be1:	78 dd                	js     1bc0 <do_travel+0x66>
    1be3:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1be6:	83 f8 03             	cmp    eax,0x3
    1be9:	77 d5                	ja     1bc0 <do_travel+0x66>
    1beb:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1bee:	8b 00                	mov    eax,DWORD PTR [eax]
    1bf0:	39 45 f0             	cmp    DWORD PTR [ebp-0x10],eax
    1bf3:	74 0f                	je     1c04 <do_travel+0xaa>
    1bf5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1bf8:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
    1bfb:	8d 50 01             	lea    edx,[eax+0x1]
    1bfe:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1c01:	89 50 04             	mov    DWORD PTR [eax+0x4],edx
    1c04:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1c07:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1c0a:	89 10                	mov    DWORD PTR [eax],edx
    1c0c:	90                   	nop
    1c0d:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1c10:	c9                   	leave  
    1c11:	c3                   	ret    

00001c12 <do_buy>:
    1c12:	55                   	push   ebp
    1c13:	89 e5                	mov    ebp,esp
    1c15:	53                   	push   ebx
    1c16:	83 ec 44             	sub    esp,0x44
    1c19:	e8 82 f5 ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1c1e:	81 c3 8a 30 00 00    	add    ebx,0x308a
    1c24:	83 ec 0c             	sub    esp,0xc
    1c27:	8d 83 a4 e7 ff ff    	lea    eax,[ebx-0x185c]
    1c2d:	50                   	push   eax
    1c2e:	e8 6d f4 ff ff       	call   10a0 <puts@plt>
    1c33:	83 c4 10             	add    esp,0x10
    1c36:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    1c3d:	eb 28                	jmp    1c67 <do_buy+0x55>
    1c3f:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1c42:	8b 84 83 58 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x58]
    1c49:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    1c4c:	83 c2 01             	add    edx,0x1
    1c4f:	83 ec 04             	sub    esp,0x4
    1c52:	50                   	push   eax
    1c53:	52                   	push   edx
    1c54:	8d 83 99 e7 ff ff    	lea    eax,[ebx-0x1867]
    1c5a:	50                   	push   eax
    1c5b:	e8 f0 f3 ff ff       	call   1050 <printf@plt>
    1c60:	83 c4 10             	add    esp,0x10
    1c63:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    1c67:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1c6a:	83 f8 04             	cmp    eax,0x4
    1c6d:	76 d0                	jbe    1c3f <do_buy+0x2d>
    1c6f:	c7 45 f0 ff ff ff ff 	mov    DWORD PTR [ebp-0x10],0xffffffff
    1c76:	eb 1d                	jmp    1c95 <do_buy+0x83>
    1c78:	83 ec 0c             	sub    esp,0xc
    1c7b:	8d 83 a1 e7 ff ff    	lea    eax,[ebx-0x185f]
    1c81:	50                   	push   eax
    1c82:	e8 c9 f3 ff ff       	call   1050 <printf@plt>
    1c87:	83 c4 10             	add    esp,0x10
    1c8a:	e8 1f f8 ff ff       	call   14ae <get_digit>
    1c8f:	83 e8 01             	sub    eax,0x1
    1c92:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1c95:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
    1c99:	78 dd                	js     1c78 <do_buy+0x66>
    1c9b:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1c9e:	83 f8 04             	cmp    eax,0x4
    1ca1:	77 d5                	ja     1c78 <do_buy+0x66>
    1ca3:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1ca6:	8b 10                	mov    edx,DWORD PTR [eax]
    1ca8:	8d 83 18 01 00 00    	lea    eax,[ebx+0x118]
    1cae:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
    1cb1:	83 c1 02             	add    ecx,0x2
    1cb4:	c1 e1 03             	shl    ecx,0x3
    1cb7:	6b d2 3c             	imul   edx,edx,0x3c
    1cba:	01 ca                	add    edx,ecx
    1cbc:	01 d0                	add    eax,edx
    1cbe:	dd 40 04             	fld    QWORD PTR [eax+0x4]
    1cc1:	dd 5d e0             	fstp   QWORD PTR [ebp-0x20]
    1cc4:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1cc7:	8b 10                	mov    edx,DWORD PTR [eax]
    1cc9:	8d 8b 18 01 00 00    	lea    ecx,[ebx+0x118]
    1ccf:	89 d0                	mov    eax,edx
    1cd1:	c1 e0 04             	shl    eax,0x4
    1cd4:	29 d0                	sub    eax,edx
    1cd6:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1cd9:	01 d0                	add    eax,edx
    1cdb:	8b 04 81             	mov    eax,DWORD PTR [ecx+eax*4]
    1cde:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    1ce1:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1ce4:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    1ce7:	dd 45 e0             	fld    QWORD PTR [ebp-0x20]
    1cea:	de f9                	fdivrp st(1),st
    1cec:	d9 7d be             	fnstcw WORD PTR [ebp-0x42]
    1cef:	0f b7 45 be          	movzx  eax,WORD PTR [ebp-0x42]
    1cf3:	80 cc 0c             	or     ah,0xc
    1cf6:	66 89 45 bc          	mov    WORD PTR [ebp-0x44],ax
    1cfa:	d9 6d bc             	fldcw  WORD PTR [ebp-0x44]
    1cfd:	db 5d dc             	fistp  DWORD PTR [ebp-0x24]
    1d00:	d9 6d be             	fldcw  WORD PTR [ebp-0x42]
    1d03:	8b 45 dc             	mov    eax,DWORD PTR [ebp-0x24]
    1d06:	39 45 ec             	cmp    DWORD PTR [ebp-0x14],eax
    1d09:	0f 4e 45 ec          	cmovle eax,DWORD PTR [ebp-0x14]
    1d0d:	89 45 d8             	mov    DWORD PTR [ebp-0x28],eax
    1d10:	c7 45 ec ff ff ff ff 	mov    DWORD PTR [ebp-0x14],0xffffffff
    1d17:	eb 1d                	jmp    1d36 <do_buy+0x124>
    1d19:	83 ec 08             	sub    esp,0x8
    1d1c:	ff 75 d8             	push   DWORD PTR [ebp-0x28]
    1d1f:	8d 83 b4 e7 ff ff    	lea    eax,[ebx-0x184c]
    1d25:	50                   	push   eax
    1d26:	e8 25 f3 ff ff       	call   1050 <printf@plt>
    1d2b:	83 c4 10             	add    esp,0x10
    1d2e:	e8 e5 f6 ff ff       	call   1418 <get_int>
    1d33:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    1d36:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
    1d3a:	78 dd                	js     1d19 <do_buy+0x107>
    1d3c:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1d3f:	3b 45 d8             	cmp    eax,DWORD PTR [ebp-0x28]
    1d42:	7f d5                	jg     1d19 <do_buy+0x107>
    1d44:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1d47:	8b 00                	mov    eax,DWORD PTR [eax]
    1d49:	6b c0 3c             	imul   eax,eax,0x3c
    1d4c:	8d 93 18 01 00 00    	lea    edx,[ebx+0x118]
    1d52:	01 d0                	add    eax,edx
    1d54:	89 45 d4             	mov    DWORD PTR [ebp-0x2c],eax
    1d57:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1d5a:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    1d5d:	db 45 ec             	fild   DWORD PTR [ebp-0x14]
    1d60:	dd 45 e0             	fld    QWORD PTR [ebp-0x20]
    1d63:	de c9                	fmulp  st(1),st
    1d65:	de e9                	fsubrp st(1),st
    1d67:	dd 5d c0             	fstp   QWORD PTR [ebp-0x40]
    1d6a:	dd 45 c0             	fld    QWORD PTR [ebp-0x40]
    1d6d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1d70:	dd 58 0c             	fstp   QWORD PTR [eax+0xc]
    1d73:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1d76:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1d79:	83 c2 44             	add    edx,0x44
    1d7c:	8b 54 90 04          	mov    edx,DWORD PTR [eax+edx*4+0x4]
    1d80:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1d83:	8d 0c 02             	lea    ecx,[edx+eax*1]
    1d86:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1d89:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1d8c:	83 c2 44             	add    edx,0x44
    1d8f:	89 4c 90 04          	mov    DWORD PTR [eax+edx*4+0x4],ecx
    1d93:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    1d96:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1d99:	8b 04 90             	mov    eax,DWORD PTR [eax+edx*4]
    1d9c:	2b 45 ec             	sub    eax,DWORD PTR [ebp-0x14]
    1d9f:	89 c1                	mov    ecx,eax
    1da1:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    1da4:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1da7:	89 0c 90             	mov    DWORD PTR [eax+edx*4],ecx
    1daa:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
    1db1:	eb 2c                	jmp    1ddf <do_buy+0x1cd>
    1db3:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    1db6:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1db9:	83 c2 02             	add    edx,0x2
    1dbc:	dd 44 d0 04          	fld    QWORD PTR [eax+edx*8+0x4]
    1dc0:	db ab 68 ea ff ff    	fld    TBYTE PTR [ebx-0x1598]
    1dc6:	de c9                	fmulp  st(1),st
    1dc8:	dd 5d c0             	fstp   QWORD PTR [ebp-0x40]
    1dcb:	dd 45 c0             	fld    QWORD PTR [ebp-0x40]
    1dce:	8b 45 d4             	mov    eax,DWORD PTR [ebp-0x2c]
    1dd1:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1dd4:	83 c2 02             	add    edx,0x2
    1dd7:	dd 5c d0 04          	fstp   QWORD PTR [eax+edx*8+0x4]
    1ddb:	83 45 e8 01          	add    DWORD PTR [ebp-0x18],0x1
    1ddf:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1de2:	3b 45 ec             	cmp    eax,DWORD PTR [ebp-0x14]
    1de5:	7c cc                	jl     1db3 <do_buy+0x1a1>
    1de7:	90                   	nop
    1de8:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1deb:	c9                   	leave  
    1dec:	c3                   	ret    

00001ded <do_sell>:
    1ded:	55                   	push   ebp
    1dee:	89 e5                	mov    ebp,esp
    1df0:	53                   	push   ebx
    1df1:	83 ec 34             	sub    esp,0x34
    1df4:	e8 a7 f3 ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1df9:	81 c3 af 2e 00 00    	add    ebx,0x2eaf
    1dff:	83 ec 0c             	sub    esp,0xc
    1e02:	8d 83 ca e7 ff ff    	lea    eax,[ebx-0x1836]
    1e08:	50                   	push   eax
    1e09:	e8 92 f2 ff ff       	call   10a0 <puts@plt>
    1e0e:	83 c4 10             	add    esp,0x10
    1e11:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [ebp-0xc],0x0
    1e18:	eb 28                	jmp    1e42 <do_sell+0x55>
    1e1a:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1e1d:	8b 84 83 58 00 00 00 	mov    eax,DWORD PTR [ebx+eax*4+0x58]
    1e24:	8b 55 f4             	mov    edx,DWORD PTR [ebp-0xc]
    1e27:	83 c2 01             	add    edx,0x1
    1e2a:	83 ec 04             	sub    esp,0x4
    1e2d:	50                   	push   eax
    1e2e:	52                   	push   edx
    1e2f:	8d 83 99 e7 ff ff    	lea    eax,[ebx-0x1867]
    1e35:	50                   	push   eax
    1e36:	e8 15 f2 ff ff       	call   1050 <printf@plt>
    1e3b:	83 c4 10             	add    esp,0x10
    1e3e:	83 45 f4 01          	add    DWORD PTR [ebp-0xc],0x1
    1e42:	8b 45 f4             	mov    eax,DWORD PTR [ebp-0xc]
    1e45:	83 f8 04             	cmp    eax,0x4
    1e48:	76 d0                	jbe    1e1a <do_sell+0x2d>
    1e4a:	c7 45 f0 ff ff ff ff 	mov    DWORD PTR [ebp-0x10],0xffffffff
    1e51:	eb 1d                	jmp    1e70 <do_sell+0x83>
    1e53:	83 ec 0c             	sub    esp,0xc
    1e56:	8d 83 a1 e7 ff ff    	lea    eax,[ebx-0x185f]
    1e5c:	50                   	push   eax
    1e5d:	e8 ee f1 ff ff       	call   1050 <printf@plt>
    1e62:	83 c4 10             	add    esp,0x10
    1e65:	e8 44 f6 ff ff       	call   14ae <get_digit>
    1e6a:	83 e8 01             	sub    eax,0x1
    1e6d:	89 45 f0             	mov    DWORD PTR [ebp-0x10],eax
    1e70:	83 7d f0 00          	cmp    DWORD PTR [ebp-0x10],0x0
    1e74:	78 dd                	js     1e53 <do_sell+0x66>
    1e76:	8b 45 f0             	mov    eax,DWORD PTR [ebp-0x10]
    1e79:	83 f8 04             	cmp    eax,0x4
    1e7c:	77 d5                	ja     1e53 <do_sell+0x66>
    1e7e:	c7 45 ec ff ff ff ff 	mov    DWORD PTR [ebp-0x14],0xffffffff
    1e85:	eb 28                	jmp    1eaf <do_sell+0xc2>
    1e87:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1e8a:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1e8d:	83 c2 44             	add    edx,0x44
    1e90:	8b 44 90 04          	mov    eax,DWORD PTR [eax+edx*4+0x4]
    1e94:	83 ec 08             	sub    esp,0x8
    1e97:	50                   	push   eax
    1e98:	8d 83 b4 e7 ff ff    	lea    eax,[ebx-0x184c]
    1e9e:	50                   	push   eax
    1e9f:	e8 ac f1 ff ff       	call   1050 <printf@plt>
    1ea4:	83 c4 10             	add    esp,0x10
    1ea7:	e8 6c f5 ff ff       	call   1418 <get_int>
    1eac:	89 45 ec             	mov    DWORD PTR [ebp-0x14],eax
    1eaf:	83 7d ec 00          	cmp    DWORD PTR [ebp-0x14],0x0
    1eb3:	78 d2                	js     1e87 <do_sell+0x9a>
    1eb5:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1eb8:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1ebb:	83 c2 44             	add    edx,0x44
    1ebe:	8b 44 90 04          	mov    eax,DWORD PTR [eax+edx*4+0x4]
    1ec2:	39 45 ec             	cmp    DWORD PTR [ebp-0x14],eax
    1ec5:	7f c0                	jg     1e87 <do_sell+0x9a>
    1ec7:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1eca:	8b 00                	mov    eax,DWORD PTR [eax]
    1ecc:	6b c0 3c             	imul   eax,eax,0x3c
    1ecf:	8d 93 18 01 00 00    	lea    edx,[ebx+0x118]
    1ed5:	01 d0                	add    eax,edx
    1ed7:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    1eda:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1edd:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    1ee0:	db 45 ec             	fild   DWORD PTR [ebp-0x14]
    1ee3:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1ee6:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1ee9:	83 c2 02             	add    edx,0x2
    1eec:	dd 44 d0 04          	fld    QWORD PTR [eax+edx*8+0x4]
    1ef0:	de c9                	fmulp  st(1),st
    1ef2:	de c1                	faddp  st(1),st
    1ef4:	dd 5d d0             	fstp   QWORD PTR [ebp-0x30]
    1ef7:	dd 45 d0             	fld    QWORD PTR [ebp-0x30]
    1efa:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1efd:	dd 58 0c             	fstp   QWORD PTR [eax+0xc]
    1f00:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1f03:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1f06:	83 c2 44             	add    edx,0x44
    1f09:	8b 44 90 04          	mov    eax,DWORD PTR [eax+edx*4+0x4]
    1f0d:	2b 45 ec             	sub    eax,DWORD PTR [ebp-0x14]
    1f10:	89 c2                	mov    edx,eax
    1f12:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1f15:	8b 4d f0             	mov    ecx,DWORD PTR [ebp-0x10]
    1f18:	83 c1 44             	add    ecx,0x44
    1f1b:	89 54 88 04          	mov    DWORD PTR [eax+ecx*4+0x4],edx
    1f1f:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1f22:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1f25:	8b 14 90             	mov    edx,DWORD PTR [eax+edx*4]
    1f28:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    1f2b:	8d 0c 02             	lea    ecx,[edx+eax*1]
    1f2e:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1f31:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1f34:	89 0c 90             	mov    DWORD PTR [eax+edx*4],ecx
    1f37:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
    1f3e:	eb 2c                	jmp    1f6c <do_sell+0x17f>
    1f40:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1f43:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1f46:	83 c2 02             	add    edx,0x2
    1f49:	dd 44 d0 04          	fld    QWORD PTR [eax+edx*8+0x4]
    1f4d:	db ab 78 ea ff ff    	fld    TBYTE PTR [ebx-0x1588]
    1f53:	de c9                	fmulp  st(1),st
    1f55:	dd 5d d0             	fstp   QWORD PTR [ebp-0x30]
    1f58:	dd 45 d0             	fld    QWORD PTR [ebp-0x30]
    1f5b:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    1f5e:	8b 55 f0             	mov    edx,DWORD PTR [ebp-0x10]
    1f61:	83 c2 02             	add    edx,0x2
    1f64:	dd 5c d0 04          	fstp   QWORD PTR [eax+edx*8+0x4]
    1f68:	83 45 e8 01          	add    DWORD PTR [ebp-0x18],0x1
    1f6c:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    1f6f:	3b 45 ec             	cmp    eax,DWORD PTR [ebp-0x14]
    1f72:	7c cc                	jl     1f40 <do_sell+0x153>
    1f74:	90                   	nop
    1f75:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1f78:	c9                   	leave  
    1f79:	c3                   	ret    

00001f7a <do_gamble>:
    1f7a:	55                   	push   ebp
    1f7b:	89 e5                	mov    ebp,esp
    1f7d:	53                   	push   ebx
    1f7e:	81 ec 44 02 00 00    	sub    esp,0x244
    1f84:	e8 17 f2 ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    1f89:	81 c3 1f 2d 00 00    	add    ebx,0x2d1f
    1f8f:	d9 ee                	fldz   
    1f91:	dd 5d f0             	fstp   QWORD PTR [ebp-0x10]
    1f94:	eb 27                	jmp    1fbd <do_gamble+0x43>
    1f96:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1f99:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    1f9c:	83 ec 04             	sub    esp,0x4
    1f9f:	8d 64 24 f8          	lea    esp,[esp-0x8]
    1fa3:	dd 1c 24             	fstp   QWORD PTR [esp]
    1fa6:	8d 83 d8 e7 ff ff    	lea    eax,[ebx-0x1828]
    1fac:	50                   	push   eax
    1fad:	e8 9e f0 ff ff       	call   1050 <printf@plt>
    1fb2:	83 c4 10             	add    esp,0x10
    1fb5:	e8 a9 f4 ff ff       	call   1463 <get_float>
    1fba:	dd 5d f0             	fstp   QWORD PTR [ebp-0x10]
    1fbd:	dd 45 f0             	fld    QWORD PTR [ebp-0x10]
    1fc0:	d9 ee                	fldz   
    1fc2:	df f1                	fcomip st,st(1)
    1fc4:	dd d8                	fstp   st(0)
    1fc6:	73 ce                	jae    1f96 <do_gamble+0x1c>
    1fc8:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    1fcb:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    1fce:	dd 45 f0             	fld    QWORD PTR [ebp-0x10]
    1fd1:	df f1                	fcomip st,st(1)
    1fd3:	dd d8                	fstp   st(0)
    1fd5:	77 bf                	ja     1f96 <do_gamble+0x1c>
    1fd7:	83 ec 0c             	sub    esp,0xc
    1fda:	6a 0a                	push   0xa
    1fdc:	e8 0f f1 ff ff       	call   10f0 <putchar@plt>
    1fe1:	83 c4 10             	add    esp,0x10
    1fe4:	83 ec 0c             	sub    esp,0xc
    1fe7:	8d 83 10 e8 ff ff    	lea    eax,[ebx-0x17f0]
    1fed:	50                   	push   eax
    1fee:	e8 ad f0 ff ff       	call   10a0 <puts@plt>
    1ff3:	83 c4 10             	add    esp,0x10
    1ff6:	e8 f5 f4 ff ff       	call   14f0 <nonfib>
    1ffb:	89 45 e0             	mov    DWORD PTR [ebp-0x20],eax
    1ffe:	8b 45 e0             	mov    eax,DWORD PTR [ebp-0x20]
    2001:	89 45 cc             	mov    DWORD PTR [ebp-0x34],eax
    2004:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [ebp-0x14],0x1
    200b:	eb 21                	jmp    202e <do_gamble+0xb4>
    200d:	83 ec 08             	sub    esp,0x8
    2010:	6a 14                	push   0x14
    2012:	6a 00                	push   0x0
    2014:	e8 80 f2 ff ff       	call   1299 <random>
    2019:	83 c4 10             	add    esp,0x10
    201c:	8b 94 83 b8 00 00 00 	mov    edx,DWORD PTR [ebx+eax*4+0xb8]
    2023:	8b 45 ec             	mov    eax,DWORD PTR [ebp-0x14]
    2026:	89 54 85 cc          	mov    DWORD PTR [ebp+eax*4-0x34],edx
    202a:	83 45 ec 01          	add    DWORD PTR [ebp-0x14],0x1
    202e:	83 7d ec 04          	cmp    DWORD PTR [ebp-0x14],0x4
    2032:	7e d9                	jle    200d <do_gamble+0x93>
    2034:	8d 83 9e c6 ff ff    	lea    eax,[ebx-0x3962]
    203a:	50                   	push   eax
    203b:	6a 04                	push   0x4
    203d:	6a 05                	push   0x5
    203f:	8d 45 cc             	lea    eax,[ebp-0x34]
    2042:	50                   	push   eax
    2043:	e8 f8 f0 ff ff       	call   1140 <qsort@plt>
    2048:	83 c4 10             	add    esp,0x10
    204b:	c7 45 e8 00 00 00 00 	mov    DWORD PTR [ebp-0x18],0x0
    2052:	eb 25                	jmp    2079 <do_gamble+0xff>
    2054:	8b 45 e8             	mov    eax,DWORD PTR [ebp-0x18]
    2057:	8b 44 85 cc          	mov    eax,DWORD PTR [ebp+eax*4-0x34]
    205b:	8b 55 e8             	mov    edx,DWORD PTR [ebp-0x18]
    205e:	83 c2 01             	add    edx,0x1
    2061:	83 ec 04             	sub    esp,0x4
    2064:	50                   	push   eax
    2065:	52                   	push   edx
    2066:	8d 83 35 e8 ff ff    	lea    eax,[ebx-0x17cb]
    206c:	50                   	push   eax
    206d:	e8 de ef ff ff       	call   1050 <printf@plt>
    2072:	83 c4 10             	add    esp,0x10
    2075:	83 45 e8 01          	add    DWORD PTR [ebp-0x18],0x1
    2079:	83 7d e8 04          	cmp    DWORD PTR [ebp-0x18],0x4
    207d:	7e d5                	jle    2054 <do_gamble+0xda>
    207f:	83 ec 0c             	sub    esp,0xc
    2082:	8d 83 a1 e7 ff ff    	lea    eax,[ebx-0x185f]
    2088:	50                   	push   eax
    2089:	e8 c2 ef ff ff       	call   1050 <printf@plt>
    208e:	83 c4 10             	add    esp,0x10
    2091:	c7 45 e4 ff ff ff ff 	mov    DWORD PTR [ebp-0x1c],0xffffffff
    2098:	eb 0b                	jmp    20a5 <do_gamble+0x12b>
    209a:	e8 0f f4 ff ff       	call   14ae <get_digit>
    209f:	83 e8 01             	sub    eax,0x1
    20a2:	89 45 e4             	mov    DWORD PTR [ebp-0x1c],eax
    20a5:	83 7d e4 00          	cmp    DWORD PTR [ebp-0x1c],0x0
    20a9:	78 ef                	js     209a <do_gamble+0x120>
    20ab:	83 7d e4 04          	cmp    DWORD PTR [ebp-0x1c],0x4
    20af:	7f e9                	jg     209a <do_gamble+0x120>
    20b1:	83 ec 0c             	sub    esp,0xc
    20b4:	6a 0a                	push   0xa
    20b6:	e8 35 f0 ff ff       	call   10f0 <putchar@plt>
    20bb:	83 c4 10             	add    esp,0x10
    20be:	8b 45 e4             	mov    eax,DWORD PTR [ebp-0x1c]
    20c1:	8b 44 85 cc          	mov    eax,DWORD PTR [ebp+eax*4-0x34]
    20c5:	39 45 e0             	cmp    DWORD PTR [ebp-0x20],eax
    20c8:	75 79                	jne    2143 <do_gamble+0x1c9>
    20ca:	83 ec 0c             	sub    esp,0xc
    20cd:	8d 83 3d e8 ff ff    	lea    eax,[ebx-0x17c3]
    20d3:	50                   	push   eax
    20d4:	e8 77 ef ff ff       	call   1050 <printf@plt>
    20d9:	83 c4 10             	add    esp,0x10
    20dc:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    20df:	83 c0 14             	add    eax,0x14
    20e2:	83 ec 04             	sub    esp,0x4
    20e5:	68 00 01 00 00       	push   0x100
    20ea:	50                   	push   eax
    20eb:	8d 85 cc fd ff ff    	lea    eax,[ebp-0x234]
    20f1:	50                   	push   eax
    20f2:	e8 09 f0 ff ff       	call   1100 <strncpy@plt>
    20f7:	83 c4 10             	add    esp,0x10
    20fa:	83 ec 0c             	sub    esp,0xc
    20fd:	8d 85 cc fd ff ff    	lea    eax,[ebp-0x234]
    2103:	50                   	push   eax
    2104:	e8 47 ef ff ff       	call   1050 <printf@plt>
    2109:	83 c4 10             	add    esp,0x10
    210c:	83 ec 04             	sub    esp,0x4
    210f:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    2112:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    2115:	8d 83 4c e8 ff ff    	lea    eax,[ebx-0x17b4]
    211b:	50                   	push   eax
    211c:	e8 2f ef ff ff       	call   1050 <printf@plt>
    2121:	83 c4 10             	add    esp,0x10
    2124:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2127:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    212a:	dd 45 f0             	fld    QWORD PTR [ebp-0x10]
    212d:	de c1                	faddp  st(1),st
    212f:	dd 9d c0 fd ff ff    	fstp   QWORD PTR [ebp-0x240]
    2135:	dd 85 c0 fd ff ff    	fld    QWORD PTR [ebp-0x240]
    213b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    213e:	dd 58 0c             	fstp   QWORD PTR [eax+0xc]
    2141:	eb 35                	jmp    2178 <do_gamble+0x1fe>
    2143:	83 ec 04             	sub    esp,0x4
    2146:	ff 75 f4             	push   DWORD PTR [ebp-0xc]
    2149:	ff 75 f0             	push   DWORD PTR [ebp-0x10]
    214c:	8d 83 7c e8 ff ff    	lea    eax,[ebx-0x1784]
    2152:	50                   	push   eax
    2153:	e8 f8 ee ff ff       	call   1050 <printf@plt>
    2158:	83 c4 10             	add    esp,0x10
    215b:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    215e:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    2161:	dd 45 f0             	fld    QWORD PTR [ebp-0x10]
    2164:	de e9                	fsubrp st(1),st
    2166:	dd 9d c0 fd ff ff    	fstp   QWORD PTR [ebp-0x240]
    216c:	dd 85 c0 fd ff ff    	fld    QWORD PTR [ebp-0x240]
    2172:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
    2175:	dd 58 0c             	fstp   QWORD PTR [eax+0xc]
    2178:	83 ec 0c             	sub    esp,0xc
    217b:	8d 83 b4 e8 ff ff    	lea    eax,[ebx-0x174c]
    2181:	50                   	push   eax
    2182:	e8 19 ef ff ff       	call   10a0 <puts@plt>
    2187:	83 c4 10             	add    esp,0x10
    218a:	e8 d1 ee ff ff       	call   1060 <getchar@plt>
    218f:	90                   	nop
    2190:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2193:	c9                   	leave  
    2194:	c3                   	ret    

00002195 <game_loop>:
    2195:	55                   	push   ebp
    2196:	89 e5                	mov    ebp,esp
    2198:	53                   	push   ebx
    2199:	83 ec 14             	sub    esp,0x14
    219c:	e8 ff ef ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    21a1:	81 c3 07 2b 00 00    	add    ebx,0x2b07
    21a7:	83 ec 0c             	sub    esp,0xc
    21aa:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    21b0:	50                   	push   eax
    21b1:	e8 63 f7 ff ff       	call   1919 <do_status>
    21b6:	83 c4 10             	add    esp,0x10
    21b9:	e8 b4 f1 ff ff       	call   1372 <get_input>
    21be:	88 45 f7             	mov    BYTE PTR [ebp-0x9],al
    21c1:	83 ec 0c             	sub    esp,0xc
    21c4:	6a 0a                	push   0xa
    21c6:	e8 25 ef ff ff       	call   10f0 <putchar@plt>
    21cb:	83 c4 10             	add    esp,0x10
    21ce:	0f be 45 f7          	movsx  eax,BYTE PTR [ebp-0x9]
    21d2:	83 e8 62             	sub    eax,0x62
    21d5:	83 f8 12             	cmp    eax,0x12
    21d8:	0f 87 95 00 00 00    	ja     2273 <.L95>
    21de:	c1 e0 02             	shl    eax,0x2
    21e1:	8b 84 18 e4 e9 ff ff 	mov    eax,DWORD PTR [eax+ebx*1-0x161c]
    21e8:	01 d8                	add    eax,ebx
    21ea:	ff e0                	jmp    eax

000021ec <.L99>:
    21ec:	b8 00 00 00 00       	mov    eax,0x0
    21f1:	e9 2b 01 00 00       	jmp    2321 <.L95+0xae>

000021f6 <.L96>:
    21f6:	83 ec 0c             	sub    esp,0xc
    21f9:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    21ff:	50                   	push   eax
    2200:	e8 55 f9 ff ff       	call   1b5a <do_travel>
    2205:	83 c4 10             	add    esp,0x10
    2208:	eb 69                	jmp    2273 <.L95>

0000220a <.L102>:
    220a:	83 ec 0c             	sub    esp,0xc
    220d:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    2213:	50                   	push   eax
    2214:	e8 f9 f9 ff ff       	call   1c12 <do_buy>
    2219:	83 c4 10             	add    esp,0x10
    221c:	eb 55                	jmp    2273 <.L95>

0000221e <.L98>:
    221e:	83 ec 0c             	sub    esp,0xc
    2221:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    2227:	50                   	push   eax
    2228:	e8 c0 fb ff ff       	call   1ded <do_sell>
    222d:	83 c4 10             	add    esp,0x10
    2230:	eb 41                	jmp    2273 <.L95>

00002232 <.L100>:
    2232:	83 ec 0c             	sub    esp,0xc
    2235:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    223b:	50                   	push   eax
    223c:	e8 39 fd ff ff       	call   1f7a <do_gamble>
    2241:	83 c4 10             	add    esp,0x10
    2244:	eb 2d                	jmp    2273 <.L95>

00002246 <.L101>:
    2246:	83 ec 0c             	sub    esp,0xc
    2249:	8d 83 d1 e8 ff ff    	lea    eax,[ebx-0x172f]
    224f:	50                   	push   eax
    2250:	e8 fb ed ff ff       	call   1050 <printf@plt>
    2255:	83 c4 10             	add    esp,0x10
    2258:	83 ec 08             	sub    esp,0x8
    225b:	68 ff 00 00 00       	push   0xff
    2260:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    2266:	8d 40 14             	lea    eax,[eax+0x14]
    2269:	50                   	push   eax
    226a:	e8 42 f1 ff ff       	call   13b1 <get_str>
    226f:	83 c4 10             	add    esp,0x10
    2272:	90                   	nop

00002273 <.L95>:
    2273:	83 ec 0c             	sub    esp,0xc
    2276:	6a 0a                	push   0xa
    2278:	e8 73 ee ff ff       	call   10f0 <putchar@plt>
    227d:	83 c4 10             	add    esp,0x10
    2280:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    2286:	8b 40 04             	mov    eax,DWORD PTR [eax+0x4]
    2289:	83 f8 1e             	cmp    eax,0x1e
    228c:	0f 85 8a 00 00 00    	jne    231c <.L95+0xa9>
    2292:	83 ec 0c             	sub    esp,0xc
    2295:	8d 83 ec e8 ff ff    	lea    eax,[ebx-0x1714]
    229b:	50                   	push   eax
    229c:	e8 ff ed ff ff       	call   10a0 <puts@plt>
    22a1:	83 c4 10             	add    esp,0x10
    22a4:	83 ec 0c             	sub    esp,0xc
    22a7:	8d 83 14 e9 ff ff    	lea    eax,[ebx-0x16ec]
    22ad:	50                   	push   eax
    22ae:	e8 ed ed ff ff       	call   10a0 <puts@plt>
    22b3:	83 c4 10             	add    esp,0x10
    22b6:	8d 83 18 02 00 00    	lea    eax,[ebx+0x218]
    22bc:	db ab 88 ea ff ff    	fld    TBYTE PTR [ebx-0x1578]
    22c2:	dd 40 0c             	fld    QWORD PTR [eax+0xc]
    22c5:	df f1                	fcomip st,st(1)
    22c7:	dd d8                	fstp   st(0)
    22c9:	76 26                	jbe    22f1 <.L95+0x7e>
    22cb:	83 ec 0c             	sub    esp,0xc
    22ce:	8d 83 44 e9 ff ff    	lea    eax,[ebx-0x16bc]
    22d4:	50                   	push   eax
    22d5:	e8 c6 ed ff ff       	call   10a0 <puts@plt>
    22da:	83 c4 10             	add    esp,0x10
    22dd:	83 ec 0c             	sub    esp,0xc
    22e0:	8d 83 8b e9 ff ff    	lea    eax,[ebx-0x1675]
    22e6:	50                   	push   eax
    22e7:	e8 b4 ed ff ff       	call   10a0 <puts@plt>
    22ec:	83 c4 10             	add    esp,0x10
    22ef:	eb 24                	jmp    2315 <.L95+0xa2>
    22f1:	83 ec 0c             	sub    esp,0xc
    22f4:	8d 83 9c e9 ff ff    	lea    eax,[ebx-0x1664]
    22fa:	50                   	push   eax
    22fb:	e8 a0 ed ff ff       	call   10a0 <puts@plt>
    2300:	83 c4 10             	add    esp,0x10
    2303:	83 ec 0c             	sub    esp,0xc
    2306:	8d 83 d5 e9 ff ff    	lea    eax,[ebx-0x162b]
    230c:	50                   	push   eax
    230d:	e8 8e ed ff ff       	call   10a0 <puts@plt>
    2312:	83 c4 10             	add    esp,0x10
    2315:	b8 00 00 00 00       	mov    eax,0x0
    231a:	eb 05                	jmp    2321 <.L95+0xae>
    231c:	b8 01 00 00 00       	mov    eax,0x1
    2321:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    2324:	c9                   	leave  
    2325:	c3                   	ret    

00002326 <main>:
    2326:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    232a:	83 e4 f0             	and    esp,0xfffffff0
    232d:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    2330:	55                   	push   ebp
    2331:	89 e5                	mov    ebp,esp
    2333:	53                   	push   ebx
    2334:	51                   	push   ecx
    2335:	e8 31 00 00 00       	call   236b <__x86.get_pc_thunk.ax>
    233a:	05 6e 29 00 00       	add    eax,0x296e
    233f:	8b 90 f4 ff ff ff    	mov    edx,DWORD PTR [eax-0xc]
    2345:	8b 12                	mov    edx,DWORD PTR [edx]
    2347:	83 ec 08             	sub    esp,0x8
    234a:	6a 00                	push   0x0
    234c:	52                   	push   edx
    234d:	89 c3                	mov    ebx,eax
    234f:	e8 ec ec ff ff       	call   1040 <setbuf@plt>
    2354:	83 c4 10             	add    esp,0x10
    2357:	e8 df f3 ff ff       	call   173b <run_game>
    235c:	b8 00 00 00 00       	mov    eax,0x0
    2361:	8d 65 f8             	lea    esp,[ebp-0x8]
    2364:	59                   	pop    ecx
    2365:	5b                   	pop    ebx
    2366:	5d                   	pop    ebp
    2367:	8d 61 fc             	lea    esp,[ecx-0x4]
    236a:	c3                   	ret    

0000236b <__x86.get_pc_thunk.ax>:
    236b:	8b 04 24             	mov    eax,DWORD PTR [esp]
    236e:	c3                   	ret    
    236f:	90                   	nop

00002370 <__libc_csu_init>:
    2370:	55                   	push   ebp
    2371:	57                   	push   edi
    2372:	56                   	push   esi
    2373:	53                   	push   ebx
    2374:	e8 27 ee ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    2379:	81 c3 2f 29 00 00    	add    ebx,0x292f
    237f:	83 ec 0c             	sub    esp,0xc
    2382:	8b 6c 24 28          	mov    ebp,DWORD PTR [esp+0x28]
    2386:	8d b3 f4 fe ff ff    	lea    esi,[ebx-0x10c]
    238c:	e8 6f ec ff ff       	call   1000 <_init>
    2391:	8d 83 f0 fe ff ff    	lea    eax,[ebx-0x110]
    2397:	29 c6                	sub    esi,eax
    2399:	c1 fe 02             	sar    esi,0x2
    239c:	85 f6                	test   esi,esi
    239e:	74 25                	je     23c5 <__libc_csu_init+0x55>
    23a0:	31 ff                	xor    edi,edi
    23a2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
    23a8:	83 ec 04             	sub    esp,0x4
    23ab:	55                   	push   ebp
    23ac:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    23b0:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    23b4:	ff 94 bb f0 fe ff ff 	call   DWORD PTR [ebx+edi*4-0x110]
    23bb:	83 c7 01             	add    edi,0x1
    23be:	83 c4 10             	add    esp,0x10
    23c1:	39 fe                	cmp    esi,edi
    23c3:	75 e3                	jne    23a8 <__libc_csu_init+0x38>
    23c5:	83 c4 0c             	add    esp,0xc
    23c8:	5b                   	pop    ebx
    23c9:	5e                   	pop    esi
    23ca:	5f                   	pop    edi
    23cb:	5d                   	pop    ebp
    23cc:	c3                   	ret    
    23cd:	8d 76 00             	lea    esi,[esi+0x0]

000023d0 <__libc_csu_fini>:
    23d0:	f3 c3                	repz ret 

Disassembly of section .fini:

000023d4 <_fini>:
    23d4:	53                   	push   ebx
    23d5:	83 ec 08             	sub    esp,0x8
    23d8:	e8 c3 ed ff ff       	call   11a0 <__x86.get_pc_thunk.bx>
    23dd:	81 c3 cb 28 00 00    	add    ebx,0x28cb
    23e3:	83 c4 08             	add    esp,0x8
    23e6:	5b                   	pop    ebx
    23e7:	c3                   	ret    

Disassembly of section .rodata:

00003000 <_fp_hw>:
    3000:	03 00                	add    eax,DWORD PTR [eax]
	...

00003004 <_IO_stdin_used>:
    3004:	01 00                	add    DWORD PTR [eax],eax
    3006:	02 00                	add    al,BYTE PTR [eax]
	...
    3010:	62 6c 61 63          	bound  ebp,QWORD PTR [ecx+eiz*2+0x63]
    3014:	6b 20 68             	imul   esp,DWORD PTR [eax],0x68
    3017:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3018:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3019:	64 69 65 73 00 72 30 	imul   esp,DWORD PTR fs:[ebp+0x73],0x70307200
    3020:	70 
    3021:	63 68 61             	arpl   WORD PTR [eax+0x61],bp
    3024:	69 6e 7a 00 72 30 30 	imul   ebp,DWORD PTR [esi+0x7a],0x30307200
    302b:	74 6b                	je     3098 <_IO_stdin_used+0x94>
    302d:	69 74 74 69 65 73 00 	imul   esi,DWORD PTR [esp+esi*2+0x69],0x62007365
    3034:	62 
    3035:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3036:	74 6e                	je     30a6 <_IO_stdin_used+0xa2>
    3038:	65 74 73             	gs je  30ae <_IO_stdin_used+0xaa>
    303b:	00 30                	add    BYTE PTR [eax],dh
    303d:	64 61                	fs popa 
    303f:	79 73                	jns    30b4 <_IO_stdin_used+0xb0>
    3041:	00 6b 31             	add    BYTE PTR [ebx+0x31],ch
    3044:	37                   	aaa    
    3045:	20 62 61             	and    BYTE PTR [edx+0x61],ah
    3048:	73 65                	jae    30af <_IO_stdin_used+0xab>
    304a:	6d                   	ins    DWORD PTR es:[edi],dx
    304b:	65 6e                	outs   dx,BYTE PTR gs:[esi]
    304d:	74 00                	je     304f <_IO_stdin_used+0x4b>
    304f:	54                   	push   esp
    3050:	41                   	inc    ecx
    3051:	4f                   	dec    edi
    3052:	20 53 4f             	and    BYTE PTR [ebx+0x4f],dl
    3055:	43                   	inc    ebx
    3056:	00 4c 30 70          	add    BYTE PTR [eax+esi*1+0x70],cl
    305a:	68 74 20 68 61       	push   0x61682074
    305f:	63 6b 65             	arpl   WORD PTR [ebx+0x65],bp
    3062:	72 73                	jb     30d7 <_IO_stdin_used+0xd3>
    3064:	70 61                	jo     30c7 <_IO_stdin_used+0xc3>
    3066:	63 65 00             	arpl   WORD PTR [ebp+0x0],sp
    3069:	73 68                	jae    30d3 <_IO_stdin_used+0xcf>
    306b:	61                   	popa   
    306c:	64 6f                	outs   dx,DWORD PTR fs:[esi]
    306e:	77 62                	ja     30d2 <_IO_stdin_used+0xce>
    3070:	72 6f                	jb     30e1 <_IO_stdin_used+0xdd>
    3072:	6b 65 72 27          	imul   esp,DWORD PTR [ebp+0x72],0x27
    3076:	73 20                	jae    3098 <_IO_stdin_used+0x94>
    3078:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3079:	69 67 68 74 63 6c 75 	imul   esp,DWORD PTR [edi+0x68],0x756c6374
    3080:	62 00                	bound  eax,QWORD PTR [eax]
    3082:	25 25 25 64 73       	and    eax,0x73642525
    3087:	00 25 64 00 25 6c    	add    BYTE PTR ds:0x6c250064,ah
    308d:	66 00 72 62          	data16 add BYTE PTR [edx+0x62],dh
    3091:	00 2f                	add    BYTE PTR [edi],ch
    3093:	66 6c                	data16 ins BYTE PTR es:[edi],dx
    3095:	61                   	popa   
    3096:	67 00 39             	add    BYTE PTR [bx+di],bh
    3099:	34 34                	xor    al,0x34
    309b:	37                   	aaa    
    309c:	7b 74                	jnp    3112 <_IO_stdin_used+0x10e>
    309e:	68 69 73 5f 69       	push   0x695f7369
    30a3:	73 5f                	jae    3104 <_IO_stdin_used+0x100>
    30a5:	74 68                	je     310f <_IO_stdin_used+0x10b>
    30a7:	65 5f                	gs pop edi
    30a9:	44                   	inc    esp
    30aa:	45                   	inc    ebp
    30ab:	42                   	inc    edx
    30ac:	55                   	push   ebp
    30ad:	47                   	inc    edi
    30ae:	5f                   	pop    edi
    30af:	66 6c                	data16 ins BYTE PTR es:[edi],dx
    30b1:	61                   	popa   
    30b2:	67 5f                	addr16 pop edi
    30b4:	66 6f                	outs   dx,WORD PTR ds:[esi]
    30b6:	72 5f                	jb     3117 <_IO_stdin_used+0x113>
    30b8:	74 65                	je     311f <_IO_stdin_used+0x11b>
    30ba:	73 74                	jae    3130 <_IO_stdin_used+0x12c>
    30bc:	69 6e 67 7d 0a 00 3a 	imul   ebp,DWORD PTR [esi+0x67],0x3a000a7d
    30c3:	3a 20                	cmp    ah,BYTE PTR [eax]
    30c5:	57                   	push   edi
    30c6:	65 6c                	gs ins BYTE PTR es:[edi],dx
    30c8:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
    30cb:	65 20 74 6f 20       	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
    30d0:	53                   	push   ebx
    30d1:	70 6c                	jo     313f <_IO_stdin_used+0x13b>
    30d3:	6f                   	outs   dx,DWORD PTR ds:[esi]
    30d4:	69 74 77 61 72 7a 20 	imul   esi,DWORD PTR [edi+esi*2+0x61],0x76207a72
    30db:	76 
    30dc:	32 2e                	xor    ch,BYTE PTR [esi]
    30de:	30 00                	xor    BYTE PTR [eax],al
    30e0:	3e 3e 20 54 68 65    	ds and BYTE PTR ds:[eax+ebp*2+0x65],dl
    30e6:	20 73 68             	and    BYTE PTR [ebx+0x68],dh
    30e9:	61                   	popa   
    30ea:	64 79 20             	fs jns 310d <_IO_stdin_used+0x109>
    30ed:	30 64 61 79          	xor    BYTE PTR [ecx+eiz*2+0x79],ah
    30f1:	20 64 65 61          	and    BYTE PTR [ebp+eiz*2+0x61],ah
    30f5:	6c                   	ins    BYTE PTR es:[edi],dx
    30f6:	65 72 20             	gs jb  3119 <_IO_stdin_used+0x115>
    30f9:	73 74                	jae    316f <_IO_stdin_used+0x16b>
    30fb:	61                   	popa   
    30fc:	6e                   	outs   dx,BYTE PTR ds:[esi]
    30fd:	64 73 20             	fs jae 3120 <_IO_stdin_used+0x11c>
    3100:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3101:	76 65                	jbe    3168 <_IO_stdin_used+0x164>
    3103:	72 20                	jb     3125 <_IO_stdin_used+0x121>
    3105:	79 6f                	jns    3176 <_IO_stdin_used+0x172>
    3107:	75 20                	jne    3129 <_IO_stdin_used+0x125>
    3109:	61                   	popa   
    310a:	73 20                	jae    312c <_IO_stdin_used+0x128>
    310c:	73 68                	jae    3176 <_IO_stdin_used+0x172>
    310e:	65 20 73 70          	and    BYTE PTR gs:[ebx+0x70],dh
    3112:	65 61                	gs popa 
    3114:	6b 73 2c 0a          	imul   esi,DWORD PTR [ebx+0x2c],0xa
    3118:	00 00                	add    BYTE PTR [eax],al
    311a:	00 00                	add    BYTE PTR [eax],al
    311c:	20 20                	and    BYTE PTR [eax],ah
    311e:	22 59 6f             	and    bl,BYTE PTR [ecx+0x6f]
    3121:	75 20                	jne    3143 <_IO_stdin_used+0x13f>
    3123:	74 68                	je     318d <_IO_stdin_used+0x189>
    3125:	69 6e 6b 20 79 6f 75 	imul   ebp,DWORD PTR [esi+0x6b],0x756f7920
    312c:	20 63 61             	and    BYTE PTR [ebx+0x61],ah
    312f:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3130:	20 73 65             	and    BYTE PTR [ebx+0x65],dh
    3133:	6c                   	ins    BYTE PTR es:[edi],dx
    3134:	6c                   	ins    BYTE PTR es:[edi],dx
    3135:	20 79 6f             	and    BYTE PTR [ecx+0x6f],bh
    3138:	75 72                	jne    31ac <_IO_stdin_used+0x1a8>
    313a:	20 73 70             	and    BYTE PTR [ebx+0x70],dh
    313d:	6c                   	ins    BYTE PTR es:[edi],dx
    313e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    313f:	69 74 7a 20 6f 6e 20 	imul   esi,DWORD PTR [edx+edi*2+0x20],0x6d206e6f
    3146:	6d 
    3147:	79 20                	jns    3169 <_IO_stdin_used+0x165>
    3149:	74 75                	je     31c0 <_IO_stdin_used+0x1bc>
    314b:	72 66                	jb     31b3 <_IO_stdin_used+0x1af>
    314d:	3f                   	aas    
    314e:	22 0a                	and    cl,BYTE PTR [edx]
    3150:	00 00                	add    BYTE PTR [eax],al
    3152:	00 00                	add    BYTE PTR [eax],al
    3154:	3e 3e 20 48 65       	ds and BYTE PTR ds:[eax+0x65],cl
    3159:	72 20                	jb     317b <_IO_stdin_used+0x177>
    315b:	70 6f                	jo     31cc <_IO_stdin_used+0x1c8>
    315d:	77 65                	ja     31c4 <_IO_stdin_used+0x1c0>
    315f:	72 20                	jb     3181 <_IO_stdin_used+0x17d>
    3161:	67 6c                	ins    BYTE PTR es:[di],dx
    3163:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3164:	76 65                	jbe    31cb <_IO_stdin_used+0x1c7>
    3166:	20 73 6d             	and    BYTE PTR [ebx+0x6d],dh
    3169:	61                   	popa   
    316a:	73 68                	jae    31d4 <_IO_stdin_used+0x1d0>
    316c:	65 73 20             	gs jae 318f <_IO_stdin_used+0x18b>
    316f:	69 6e 74 6f 20 79 6f 	imul   ebp,DWORD PTR [esi+0x74],0x6f79206f
    3176:	75 72                	jne    31ea <_IO_stdin_used+0x1e6>
    3178:	20 67 75             	and    BYTE PTR [edi+0x75],ah
    317b:	74 2c                	je     31a9 <_IO_stdin_used+0x1a5>
    317d:	20 69 74             	and    BYTE PTR [ecx+0x74],ch
    3180:	20 68 75             	and    BYTE PTR [eax+0x75],ch
    3183:	72 74                	jb     31f9 <_IO_stdin_used+0x1f5>
    3185:	73 21                	jae    31a8 <_IO_stdin_used+0x1a4>
    3187:	0a 00                	or     al,BYTE PTR [eax]
    3189:	00 00                	add    BYTE PTR [eax],al
    318b:	00 20                	add    BYTE PTR [eax],ah
    318d:	20 22                	and    BYTE PTR [edx],ah
    318f:	4d                   	dec    ebp
    3190:	79 20                	jns    31b2 <_IO_stdin_used+0x1ae>
    3192:	63 75 74             	arpl   WORD PTR [ebp+0x74],si
    3195:	20 69 73             	and    BYTE PTR [ecx+0x73],ch
    3198:	20 25 2e 32 66 20    	and    BYTE PTR ds:0x2066322e,ah
    319e:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
    31a1:	63 6f 69             	arpl   WORD PTR [edi+0x69],bp
    31a4:	6e                   	outs   dx,BYTE PTR ds:[esi]
    31a5:	20 73 6b             	and    BYTE PTR [ebx+0x6b],dh
    31a8:	69 64 21 0a 00 00 00 	imul   esp,DWORD PTR [ecx+eiz*1+0xa],0x0
    31af:	00 
    31b0:	20 20                	and    BYTE PTR [eax],ah
    31b2:	20 59 6f             	and    BYTE PTR [ecx+0x6f],bl
    31b5:	75 27                	jne    31de <_IO_stdin_used+0x1da>
    31b7:	76 65                	jbe    321e <_IO_stdin_used+0x21a>
    31b9:	20 67 6f             	and    BYTE PTR [edi+0x6f],ah
    31bc:	74 20                	je     31de <_IO_stdin_used+0x1da>
    31be:	33 30                	xor    esi,DWORD PTR [eax]
    31c0:	20 64 61 79          	and    BYTE PTR [ecx+eiz*2+0x79],ah
    31c4:	73 2c                	jae    31f2 <_IO_stdin_used+0x1ee>
    31c6:	20 49 20             	and    BYTE PTR [ecx+0x20],cl
    31c9:	77 61                	ja     322c <_IO_stdin_used+0x228>
    31cb:	6e                   	outs   dx,BYTE PTR ds:[esi]
    31cc:	74 20                	je     31ee <_IO_stdin_used+0x1ea>
    31ce:	6d                   	ins    DWORD PTR es:[edi],dx
    31cf:	79 20                	jns    31f1 <_IO_stdin_used+0x1ed>
    31d1:	63 72 79             	arpl   WORD PTR [edx+0x79],si
    31d4:	70 74                	jo     324a <_IO_stdin_used+0x246>
    31d6:	6f                   	outs   dx,DWORD PTR ds:[esi]
    31d7:	21 22                	and    DWORD PTR [edx],esp
    31d9:	0a 00                	or     al,BYTE PTR [eax]
    31db:	00 3e                	add    BYTE PTR [esi],bh
    31dd:	3e 20 48 61          	and    BYTE PTR ds:[eax+0x61],cl
    31e1:	72 64                	jb     3247 <_IO_stdin_used+0x243>
    31e3:	20 74 6f 20          	and    BYTE PTR [edi+ebp*2+0x20],dh
    31e7:	72 65                	jb     324e <_IO_stdin_used+0x24a>
    31e9:	6d                   	ins    DWORD PTR es:[edi],dx
    31ea:	65 6d                	gs ins DWORD PTR es:[edi],dx
    31ec:	62 65 72             	bound  esp,QWORD PTR [ebp+0x72]
    31ef:	20 68 6f             	and    BYTE PTR [eax+0x6f],ch
    31f2:	77 20                	ja     3214 <_IO_stdin_used+0x210>
    31f4:	69 74 20 63 61 6d 65 	imul   esi,DWORD PTR [eax+eiz*1+0x63],0x20656d61
    31fb:	20 
    31fc:	74 6f                	je     326d <_IO_stdin_used+0x269>
    31fe:	20 74 68 69          	and    BYTE PTR [eax+ebp*2+0x69],dh
    3202:	73 2c                	jae    3230 <_IO_stdin_used+0x22c>
    3204:	20 62 75             	and    BYTE PTR [edx+0x75],ah
    3207:	74 20                	je     3229 <_IO_stdin_used+0x225>
    3209:	6f                   	outs   dx,DWORD PTR ds:[esi]
    320a:	6e                   	outs   dx,BYTE PTR ds:[esi]
    320b:	65 20 74 68 69       	and    BYTE PTR gs:[eax+ebp*2+0x69],dh
    3210:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3211:	67 27                	addr16 daa 
    3213:	73 20                	jae    3235 <_IO_stdin_used+0x231>
    3215:	63 6c 65 61          	arpl   WORD PTR [ebp+eiz*2+0x61],bp
    3219:	72 2e                	jb     3249 <_IO_stdin_used+0x245>
    321b:	00 20                	add    BYTE PTR [eax],ah
    321d:	20 20                	and    BYTE PTR [eax],ah
    321f:	59                   	pop    ecx
    3220:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3221:	75 20                	jne    3243 <_IO_stdin_used+0x23f>
    3223:	62 65 74             	bound  esp,QWORD PTR [ebp+0x74]
    3226:	74 65                	je     328d <_IO_stdin_used+0x289>
    3228:	72 20                	jb     324a <_IO_stdin_used+0x246>
    322a:	73 65                	jae    3291 <_IO_stdin_used+0x28d>
    322c:	6c                   	ins    BYTE PTR es:[edi],dx
    322d:	6c                   	ins    BYTE PTR es:[edi],dx
    322e:	20 73 6f             	and    BYTE PTR [ebx+0x6f],dh
    3231:	6d                   	ins    DWORD PTR es:[edi],dx
    3232:	65 20 73 70          	and    BYTE PTR gs:[ebx+0x70],dh
    3236:	6c                   	ins    BYTE PTR es:[edi],dx
    3237:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3238:	69 74 7a 20 61 6e 64 	imul   esi,DWORD PTR [edx+edi*2+0x20],0x20646e61
    323f:	20 
    3240:	67 65 74 20          	addr16 gs je 3264 <_IO_stdin_used+0x260>
    3244:	73 6f                	jae    32b5 <_IO_stdin_used+0x2b1>
    3246:	6d                   	ins    DWORD PTR es:[edi],dx
    3247:	65 20 73 61          	and    BYTE PTR gs:[ebx+0x61],dh
    324b:	74 6f                	je     32bc <_IO_stdin_used+0x2b8>
    324d:	73 68                	jae    32b7 <_IO_stdin_used+0x2b3>
    324f:	69 27 73 21 0a 00    	imul   esp,DWORD PTR [edi],0xa2173
    3255:	00 00                	add    BYTE PTR [eax],al
    3257:	00 2e                	add    BYTE PTR [esi],ch
    3259:	2e 2e 20 79 6f       	cs and BYTE PTR cs:[ecx+0x6f],bh
    325e:	75 20                	jne    3280 <_IO_stdin_used+0x27c>
    3260:	77 61                	ja     32c3 <_IO_stdin_used+0x2bf>
    3262:	6b 65 20 75          	imul   esp,DWORD PTR [ebp+0x20],0x75
    3266:	70 20                	jo     3288 <_IO_stdin_used+0x284>
    3268:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
    326b:	6b 20 61             	imul   esp,DWORD PTR [eax],0x61
    326e:	74 20                	je     3290 <_IO_stdin_used+0x28c>
    3270:	68 6f 6d 65 2c       	push   0x2c656d6f
    3275:	20 77 6f             	and    BYTE PTR [edi+0x6f],dh
    3278:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3279:	64 65 72 69          	fs gs jb 32e6 <_IO_stdin_used+0x2e2>
    327d:	6e                   	outs   dx,BYTE PTR ds:[esi]
    327e:	67 20 69 66          	and    BYTE PTR [bx+di+0x66],ch
    3282:	20 69 74             	and    BYTE PTR [ecx+0x74],ch
    3285:	27                   	daa    
    3286:	73 20                	jae    32a8 <_IO_stdin_used+0x2a4>
    3288:	61                   	popa   
    3289:	6c                   	ins    BYTE PTR es:[edi],dx
    328a:	6c                   	ins    BYTE PTR es:[edi],dx
    328b:	20 61 20             	and    BYTE PTR [ecx+0x20],ah
    328e:	64 72 65             	fs jb  32f6 <_IO_stdin_used+0x2f2>
    3291:	61                   	popa   
    3292:	6d                   	ins    DWORD PTR es:[edi],dx
    3293:	20 2e                	and    BYTE PTR [esi],ch
    3295:	2e 2e 0a 00          	cs or  al,BYTE PTR cs:[eax]
    3299:	00 00                	add    BYTE PTR [eax],al
    329b:	00 48 65             	add    BYTE PTR [eax+0x65],cl
    329e:	6c                   	ins    BYTE PTR es:[edi],dx
    329f:	6c                   	ins    BYTE PTR es:[edi],dx
    32a0:	6f                   	outs   dx,DWORD PTR ds:[esi]
    32a1:	20 66 72             	and    BYTE PTR [esi+0x72],ah
    32a4:	69 65 6e 64 2c 20 77 	imul   esp,DWORD PTR [ebp+0x6e],0x77202c64
    32ab:	68 61 74 27 73       	push   0x73277461
    32b0:	20 79 6f             	and    BYTE PTR [ecx+0x6f],bh
    32b3:	75 72                	jne    3327 <_IO_stdin_used+0x323>
    32b5:	20 68 61             	and    BYTE PTR [eax+0x61],ch
    32b8:	6e                   	outs   dx,BYTE PTR ds:[esi]
    32b9:	64 6c                	fs ins BYTE PTR es:[edi],dx
    32bb:	65 3f                	gs aas 
    32bd:	0a 3e                	or     bh,BYTE PTR [esi]
    32bf:	20 00                	and    BYTE PTR [eax],al
    32c1:	00 00                	add    BYTE PTR [eax],al
    32c3:	00 2b                	add    BYTE PTR [ebx],ch
    32c5:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32c7:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32c9:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32cb:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32cd:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32cf:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32d1:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32d3:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32d5:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32d7:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32d9:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32db:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32dd:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32df:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32e1:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32e3:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32e5:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32e7:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32e9:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32eb:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32ed:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32ef:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32f1:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32f3:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    32f5:	00 3a                	add    BYTE PTR [edx],bh
    32f7:	3a 20                	cmp    ah,BYTE PTR [eax]
    32f9:	44                   	inc    esp
    32fa:	41                   	inc    ecx
    32fb:	59                   	pop    ecx
    32fc:	20 25 64 0a 00 00    	and    BYTE PTR ds:0xa64,ah
    3302:	00 00                	add    BYTE PTR [eax],al
    3304:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3306:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3308:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    330a:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    330c:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    330e:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3310:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3312:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3314:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3316:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3318:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    331a:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    331c:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    331e:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3320:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3322:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3324:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3326:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3328:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    332a:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    332c:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    332e:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3330:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3332:	2b 2b                	sub    ebp,DWORD PTR [ebx]
    3334:	2b 0a                	sub    ecx,DWORD PTR [edx]
    3336:	00 48 61             	add    BYTE PTR [eax+0x61],cl
    3339:	6e                   	outs   dx,BYTE PTR ds:[esi]
    333a:	64 6c                	fs ins BYTE PTR es:[edi],dx
    333c:	65 3a 20             	cmp    ah,BYTE PTR gs:[eax]
    333f:	25 73 0a 00 42       	and    eax,0x42000a73
    3344:	69 74 63 6f 69 6e 3a 	imul   esi,DWORD PTR [ebx+eiz*2+0x6f],0x203a6e69
    334b:	20 
    334c:	25 2e 34 6c 66       	and    eax,0x666c342e
    3351:	0a 00                	or     al,BYTE PTR [eax]
    3353:	4c                   	dec    esp
    3354:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3355:	63 61 74             	arpl   WORD PTR [ecx+0x74],sp
    3358:	69 6f 6e 3a 20 25 73 	imul   ebp,DWORD PTR [edi+0x6e],0x7325203a
    335f:	0a 0a                	or     cl,BYTE PTR [edx]
    3361:	00 28                	add    BYTE PTR [eax],ch
    3363:	25 64 29 20 25       	and    eax,0x25202964
    3368:	73 0a                	jae    3374 <_IO_stdin_used+0x370>
    336a:	00 50 72             	add    BYTE PTR [eax+0x72],dl
    336d:	69 63 65 00 51 74 79 	imul   esp,DWORD PTR [ebx+0x65],0x79745100
    3374:	00 49 74             	add    BYTE PTR [ecx+0x74],cl
    3377:	65 6d                	gs ins DWORD PTR es:[edi],dx
    3379:	00 25 2d 33 32 73    	add    BYTE PTR ds:0x7332332d,ah
    337f:	20 25 34 73 20 25    	and    BYTE PTR ds:0x25207334,ah
    3385:	31 31                	xor    DWORD PTR [ecx],esi
    3387:	73 0a                	jae    3393 <_IO_stdin_used+0x38f>
    3389:	00 00                	add    BYTE PTR [eax],al
    338b:	00 3d 3d 3d 3d 3d    	add    BYTE PTR ds:0x3d3d3d3d,bh
    3391:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    3396:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    339b:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33a0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33a5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33aa:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33af:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33b4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    33b9:	3d 3d 3d 3d 00       	cmp    eax,0x3d3d3d
    33be:	25 2d 33 32 73       	and    eax,0x7332332d
    33c3:	20 25 34 64 20 25    	and    BYTE PTR ds:0x25206434,ah
    33c9:	31 31                	xor    DWORD PTR [ecx],esi
    33cb:	2e 34 6c             	cs xor al,0x6c
    33ce:	66 0a 00             	data16 or al,BYTE PTR [eax]
    33d1:	3e 20 4f 50          	and    BYTE PTR ds:[edi+0x50],cl
    33d5:	54                   	push   esp
    33d6:	49                   	dec    ecx
    33d7:	4f                   	dec    edi
    33d8:	4e                   	dec    esi
    33d9:	53                   	push   ebx
    33da:	3a 0a                	cmp    cl,BYTE PTR [edx]
    33dc:	00 20                	add    BYTE PTR [eax],ah
    33de:	28 74 29 72          	sub    BYTE PTR [ecx+ebp*1+0x72],dh
    33e2:	61                   	popa   
    33e3:	76 65                	jbe    344a <_IO_stdin_used+0x446>
    33e5:	6c                   	ins    BYTE PTR es:[edi],dx
    33e6:	00 20                	add    BYTE PTR [eax],ah
    33e8:	28 67 29             	sub    BYTE PTR [edi+0x29],ah
    33eb:	61                   	popa   
    33ec:	6d                   	ins    DWORD PTR es:[edi],dx
    33ed:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
    33f1:	20 28                	and    BYTE PTR [eax],ch
    33f3:	62 29                	bound  ebp,QWORD PTR [ecx]
    33f5:	75 79                	jne    3470 <_IO_stdin_used+0x46c>
    33f7:	00 20                	add    BYTE PTR [eax],ah
    33f9:	28 73 29             	sub    BYTE PTR [ebx+0x29],dh
    33fc:	65 6c                	gs ins BYTE PTR es:[edi],dx
    33fe:	6c                   	ins    BYTE PTR es:[edi],dx
    33ff:	00 20                	add    BYTE PTR [eax],ah
    3401:	28 63 29             	sub    BYTE PTR [ebx+0x29],ah
    3404:	68 61 6e 67 65       	push   0x65676e61
    3409:	20 68 61             	and    BYTE PTR [eax+0x61],ch
    340c:	6e                   	outs   dx,BYTE PTR ds:[esi]
    340d:	64 6c                	fs ins BYTE PTR es:[edi],dx
    340f:	65 00 20             	add    BYTE PTR gs:[eax],ah
    3412:	28 71 29             	sub    BYTE PTR [ecx+0x29],dh
    3415:	75 69                	jne    3480 <_IO_stdin_used+0x47c>
    3417:	74 0a                	je     3423 <_IO_stdin_used+0x41f>
    3419:	00 57 68             	add    BYTE PTR [edi+0x68],dl
    341c:	61                   	popa   
    341d:	74 20                	je     343f <_IO_stdin_used+0x43b>
    341f:	77 69                	ja     348a <_IO_stdin_used+0x486>
    3421:	6c                   	ins    BYTE PTR es:[edi],dx
    3422:	6c                   	ins    BYTE PTR es:[edi],dx
    3423:	20 79 6f             	and    BYTE PTR [ecx+0x6f],bh
    3426:	75 20                	jne    3448 <_IO_stdin_used+0x444>
    3428:	64 6f                	outs   dx,DWORD PTR fs:[esi]
    342a:	3f                   	aas    
    342b:	20 00                	and    BYTE PTR [eax],al
    342d:	53                   	push   ebx
    342e:	65 6c                	gs ins BYTE PTR es:[edi],dx
    3430:	65 63 74 20 64       	arpl   WORD PTR gs:[eax+eiz*1+0x64],si
    3435:	65 73 74             	gs jae 34ac <_IO_stdin_used+0x4a8>
    3438:	69 6e 61 74 69 6f 6e 	imul   ebp,DWORD PTR [esi+0x61],0x6e6f6974
    343f:	3a 00                	cmp    al,BYTE PTR [eax]
    3441:	25 64 29 20 25       	and    eax,0x25202964
    3446:	73 0a                	jae    3452 <_IO_stdin_used+0x44e>
    3448:	00 3e                	add    BYTE PTR [esi],bh
    344a:	20 00                	and    BYTE PTR [eax],al
    344c:	53                   	push   ebx
    344d:	65 6c                	gs ins BYTE PTR es:[edi],dx
    344f:	65 63 74 20 70       	arpl   WORD PTR gs:[eax+eiz*1+0x70],si
    3454:	72 6f                	jb     34c5 <_IO_stdin_used+0x4c1>
    3456:	64 75 63             	fs jne 34bc <_IO_stdin_used+0x4b8>
    3459:	74 3a                	je     3495 <_IO_stdin_used+0x491>
    345b:	00 43 68             	add    BYTE PTR [ebx+0x68],al
    345e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    345f:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3460:	73 65                	jae    34c7 <_IO_stdin_used+0x4c3>
    3462:	20 51 54             	and    BYTE PTR [ecx+0x54],dl
    3465:	59                   	pop    ecx
    3466:	20 28                	and    BYTE PTR [eax],ch
    3468:	6d                   	ins    DWORD PTR es:[edi],dx
    3469:	61                   	popa   
    346a:	78 20                	js     348c <_IO_stdin_used+0x488>
    346c:	25 64 29 3a 20       	and    eax,0x203a2964
    3471:	00 53 65             	add    BYTE PTR [ebx+0x65],dl
    3474:	6c                   	ins    BYTE PTR es:[edi],dx
    3475:	65 63 74 20 69       	arpl   WORD PTR gs:[eax+eiz*1+0x69],si
    347a:	74 65                	je     34e1 <_IO_stdin_used+0x4dd>
    347c:	6d                   	ins    DWORD PTR es:[edi],dx
    347d:	3a 00                	cmp    al,BYTE PTR [eax]
    347f:	00 48 6f             	add    BYTE PTR [eax+0x6f],cl
    3482:	77 20                	ja     34a4 <_IO_stdin_used+0x4a0>
    3484:	6d                   	ins    DWORD PTR es:[edi],dx
    3485:	75 63                	jne    34ea <_IO_stdin_used+0x4e6>
    3487:	68 20 62 69 74       	push   0x74696220
    348c:	63 6f 69             	arpl   WORD PTR [edi+0x69],bp
    348f:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3490:	20 64 6f 20          	and    BYTE PTR [edi+ebp*2+0x20],ah
    3494:	79 6f                	jns    3505 <_IO_stdin_used+0x501>
    3496:	75 20                	jne    34b8 <_IO_stdin_used+0x4b4>
    3498:	77 69                	ja     3503 <_IO_stdin_used+0x4ff>
    349a:	73 68                	jae    3504 <_IO_stdin_used+0x500>
    349c:	20 74 6f 20          	and    BYTE PTR [edi+ebp*2+0x20],dh
    34a0:	67 61                	addr16 popa 
    34a2:	6d                   	ins    DWORD PTR es:[edi],dx
    34a3:	62 6c 65 3f          	bound  ebp,QWORD PTR [ebp+eiz*2+0x3f]
    34a7:	20 28                	and    BYTE PTR [eax],ch
    34a9:	6d                   	ins    DWORD PTR es:[edi],dx
    34aa:	61                   	popa   
    34ab:	78 20                	js     34cd <_IO_stdin_used+0x4c9>
    34ad:	25 2e 34 6c 66       	and    eax,0x666c342e
    34b2:	29 3a                	sub    DWORD PTR [edx],edi
    34b4:	20 00                	and    BYTE PTR [eax],al
    34b6:	00 00                	add    BYTE PTR [eax],al
    34b8:	2a 2a                	sub    ch,BYTE PTR [edx]
    34ba:	2a 20                	sub    ah,BYTE PTR [eax]
    34bc:	47                   	inc    edi
    34bd:	41                   	inc    ecx
    34be:	4d                   	dec    ebp
    34bf:	42                   	inc    edx
    34c0:	4c                   	dec    esp
    34c1:	45                   	inc    ebp
    34c2:	20 2a                	and    BYTE PTR [edx],ch
    34c4:	2a 2a                	sub    ch,BYTE PTR [edx]
    34c6:	0a 50 69             	or     dl,BYTE PTR [eax+0x69]
    34c9:	63 6b 20             	arpl   WORD PTR [ebx+0x20],bp
    34cc:	74 68                	je     3536 <_IO_stdin_used+0x532>
    34ce:	65 20 6f 64          	and    BYTE PTR gs:[edi+0x64],ch
    34d2:	64 20 6f 6e          	and    BYTE PTR fs:[edi+0x6e],ch
    34d6:	65 20 6f 75          	and    BYTE PTR gs:[edi+0x75],ch
    34da:	74 3a                	je     3516 <_IO_stdin_used+0x512>
    34dc:	00 25 64 29 20 25    	add    BYTE PTR ds:0x25202964,ah
    34e2:	64 0a 00             	or     al,BYTE PTR fs:[eax]
    34e5:	57                   	push   edi
    34e6:	65 6c                	gs ins BYTE PTR es:[edi],dx
    34e8:	6c                   	ins    BYTE PTR es:[edi],dx
    34e9:	20 64 6f 6e          	and    BYTE PTR [edi+ebp*2+0x6e],ah
    34ed:	65 2c 20             	gs sub al,0x20
    34f0:	00 00                	add    BYTE PTR [eax],al
    34f2:	00 00                	add    BYTE PTR [eax],al
    34f4:	21 20                	and    DWORD PTR [eax],esp
    34f6:	59                   	pop    ecx
    34f7:	6f                   	outs   dx,DWORD PTR ds:[esi]
    34f8:	75 20                	jne    351a <_IO_stdin_used+0x516>
    34fa:	77 69                	ja     3565 <_IO_stdin_used+0x561>
    34fc:	6e                   	outs   dx,BYTE PTR ds:[esi]
    34fd:	20 25 2e 34 6c 66    	and    BYTE PTR ds:0x666c342e,ah
    3503:	2e 20 53 61          	and    BYTE PTR cs:[ebx+0x61],dl
    3507:	76 6f                	jbe    3578 <_IO_stdin_used+0x574>
    3509:	75 72                	jne    357d <_IO_stdin_used+0x579>
    350b:	20 64 61 74          	and    BYTE PTR [ecx+eiz*2+0x74],ah
    350f:	20 73 61             	and    BYTE PTR [ebx+0x61],dh
    3512:	74 6f                	je     3583 <_IO_stdin_used+0x57f>
    3514:	73 68                	jae    357e <_IO_stdin_used+0x57a>
    3516:	69 20 73 75 63 63    	imul   esp,DWORD PTR [eax],0x63637573
    351c:	75 62                	jne    3580 <_IO_stdin_used+0x57c>
    351e:	75 73                	jne    3593 <_IO_stdin_used+0x58f>
    3520:	2e 0a 00             	or     al,BYTE PTR cs:[eax]
    3523:	00 57 72             	add    BYTE PTR [edi+0x72],dl
    3526:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3527:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3528:	67 21 20             	and    DWORD PTR [bx+si],esp
    352b:	59                   	pop    ecx
    352c:	6f                   	outs   dx,DWORD PTR ds:[esi]
    352d:	75 20                	jne    354f <_IO_stdin_used+0x54b>
    352f:	6c                   	ins    BYTE PTR es:[edi],dx
    3530:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3531:	73 65                	jae    3598 <_IO_stdin_used+0x594>
    3533:	20 25 2e 34 6c 66    	and    BYTE PTR ds:0x666c342e,ah
    3539:	20 62 69             	and    BYTE PTR [edx+0x69],ah
    353c:	74 63                	je     35a1 <_IO_stdin_used+0x59d>
    353e:	6f                   	outs   dx,DWORD PTR ds:[esi]
    353f:	69 6e 2e 20 46 65 65 	imul   ebp,DWORD PTR [esi+0x2e],0x65654620
    3546:	6c                   	ins    BYTE PTR es:[edi],dx
    3547:	73 20                	jae    3569 <_IO_stdin_used+0x565>
    3549:	62 61 64             	bound  esp,QWORD PTR [ecx+0x64]
    354c:	2e 20 57 68          	and    BYTE PTR cs:[edi+0x68],dl
    3550:	79 2e                	jns    3580 <_IO_stdin_used+0x57c>
    3552:	2e 2e 20 57 48       	cs and BYTE PTR cs:[edi+0x48],dl
    3557:	59                   	pop    ecx
    3558:	21 3f                	and    DWORD PTR [edi],edi
    355a:	0a 00                	or     al,BYTE PTR [eax]
    355c:	50                   	push   eax
    355d:	72 65                	jb     35c4 <_IO_stdin_used+0x5c0>
    355f:	73 73                	jae    35d4 <_IO_stdin_used+0x5d0>
    3561:	20 61 6e             	and    BYTE PTR [ecx+0x6e],ah
    3564:	79 20                	jns    3586 <_IO_stdin_used+0x582>
    3566:	6b 65 79 20          	imul   esp,DWORD PTR [ebp+0x79],0x20
    356a:	74 6f                	je     35db <_IO_stdin_used+0x5d7>
    356c:	20 63 6f             	and    BYTE PTR [ebx+0x6f],ah
    356f:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3570:	74 69                	je     35db <_IO_stdin_used+0x5d7>
    3572:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3573:	75 65                	jne    35da <_IO_stdin_used+0x5d6>
    3575:	2e 2e 2e 00 57 68    	cs cs add BYTE PTR cs:[edi+0x68],dl
    357b:	61                   	popa   
    357c:	74 20                	je     359e <_IO_stdin_used+0x59a>
    357e:	69 73 20 79 6f 75 72 	imul   esi,DWORD PTR [ebx+0x20],0x72756f79
    3585:	20 6e 65             	and    BYTE PTR [esi+0x65],ch
    3588:	77 20                	ja     35aa <_IO_stdin_used+0x5a6>
    358a:	68 61 6e 64 6c       	push   0x6c646e61
    358f:	65 3f                	gs aas 
    3591:	20 00                	and    BYTE PTR [eax],al
    3593:	00 3e                	add    BYTE PTR [esi],bh
    3595:	3e 20 54 68 65       	and    BYTE PTR ds:[eax+ebp*2+0x65],dl
    359a:	20 73 68             	and    BYTE PTR [ebx+0x68],dh
    359d:	61                   	popa   
    359e:	64 79 20             	fs jns 35c1 <_IO_stdin_used+0x5bd>
    35a1:	30 64 61 79          	xor    BYTE PTR [ecx+eiz*2+0x79],ah
    35a5:	20 64 65 61          	and    BYTE PTR [ebp+eiz*2+0x61],ah
    35a9:	6c                   	ins    BYTE PTR es:[edi],dx
    35aa:	65 72 20             	gs jb  35cd <_IO_stdin_used+0x5c9>
    35ad:	72 65                	jb     3614 <_IO_stdin_used+0x610>
    35af:	74 75                	je     3626 <_IO_stdin_used+0x622>
    35b1:	72 6e                	jb     3621 <_IO_stdin_used+0x61d>
    35b3:	73 21                	jae    35d6 <_IO_stdin_used+0x5d2>
    35b5:	20 3c 3c             	and    BYTE PTR [esp+edi*1],bh
    35b8:	00 00                	add    BYTE PTR [eax],al
    35ba:	00 00                	add    BYTE PTR [eax],al
    35bc:	53                   	push   ebx
    35bd:	68 65 20 73 61       	push   0x61732065
    35c2:	79 73                	jns    3637 <_IO_stdin_used+0x633>
    35c4:	2c 20                	sub    al,0x20
    35c6:	22 57 68             	and    dl,BYTE PTR [edi+0x68]
    35c9:	65 72 65             	gs jb  3631 <_IO_stdin_used+0x62d>
    35cc:	27                   	daa    
    35cd:	73 20                	jae    35ef <_IO_stdin_used+0x5eb>
    35cf:	6d                   	ins    DWORD PTR es:[edi],dx
    35d0:	79 20                	jns    35f2 <_IO_stdin_used+0x5ee>
    35d2:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
    35d5:	63 6f 69             	arpl   WORD PTR [edi+0x69],bp
    35d8:	6e                   	outs   dx,BYTE PTR ds:[esi]
    35d9:	20 79 6f             	and    BYTE PTR [ecx+0x6f],bh
    35dc:	75 20                	jne    35fe <_IO_stdin_used+0x5fa>
    35de:	70 65                	jo     3645 <_IO_stdin_used+0x641>
    35e0:	61                   	popa   
    35e1:	73 61                	jae    3644 <_IO_stdin_used+0x640>
    35e3:	6e                   	outs   dx,BYTE PTR ds:[esi]
    35e4:	74 3f                	je     3625 <_IO_stdin_used+0x621>
    35e6:	22 0a                	and    cl,BYTE PTR [edx]
    35e8:	00 00                	add    BYTE PTR [eax],al
    35ea:	00 00                	add    BYTE PTR [eax],al
    35ec:	22 59 65             	and    bl,BYTE PTR [ecx+0x65]
    35ef:	73 2c                	jae    361d <_IO_stdin_used+0x619>
    35f1:	20 49 20             	and    BYTE PTR [ecx+0x20],cl
    35f4:	63 61 6e             	arpl   WORD PTR [ecx+0x6e],sp
    35f7:	20 72 65             	and    BYTE PTR [edx+0x65],dh
    35fa:	63 6f 67             	arpl   WORD PTR [edi+0x67],bp
    35fd:	6e                   	outs   dx,BYTE PTR ds:[esi]
    35fe:	69 73 65 20 74 68 65 	imul   esi,DWORD PTR [ebx+0x65],0x65687420
    3605:	20 31                	and    BYTE PTR [ecx],dh
    3607:	33 33                	xor    esi,DWORD PTR [ebx]
    3609:	37                   	aaa    
    360a:	6e                   	outs   dx,BYTE PTR ds:[esi]
    360b:	65 73 73             	gs jae 3681 <_IO_stdin_used+0x67d>
    360e:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
    3611:	20 79 6f             	and    BYTE PTR [ecx+0x6f],bh
    3614:	75 72                	jne    3688 <_IO_stdin_used+0x684>
    3616:	20 65 79             	and    BYTE PTR [ebp+0x79],ah
    3619:	65 73 2e             	gs jae 364a <_IO_stdin_used+0x646>
    361c:	20 57 65             	and    BYTE PTR [edi+0x65],dl
    361f:	6c                   	ins    BYTE PTR es:[edi],dx
    3620:	6c                   	ins    BYTE PTR es:[edi],dx
    3621:	20 64 6f 6e          	and    BYTE PTR [edi+ebp*2+0x6e],ah
    3625:	65 20 6e 33          	and    BYTE PTR gs:[esi+0x33],ch
    3629:	30 70 68             	xor    BYTE PTR [eax+0x68],dh
    362c:	79 74                	jns    36a2 <_IO_stdin_used+0x69e>
    362e:	65 21 22             	and    DWORD PTR gs:[edx],esp
    3631:	0a 00                	or     al,BYTE PTR [eax]
    3633:	2d 2d 20 59 4f       	sub    eax,0x4f59202d
    3638:	55                   	push   ebp
    3639:	20 57 49             	and    BYTE PTR [edi+0x49],dl
    363c:	4e                   	dec    esi
    363d:	20 2d 2d 00 00 00    	and    BYTE PTR ds:0x2d,ch
    3643:	00 22                	add    BYTE PTR [edx],ah
    3645:	59                   	pop    ecx
    3646:	6f                   	outs   dx,DWORD PTR ds:[esi]
    3647:	75 20                	jne    3669 <_IO_stdin_used+0x665>
    3649:	64 69 73 67 75 73 74 	imul   esi,DWORD PTR fs:[ebx+0x67],0x20747375
    3650:	20 
    3651:	6d                   	ins    DWORD PTR es:[edi],dx
    3652:	65 20 73 63          	and    BYTE PTR gs:[ebx+0x63],dh
    3656:	72 69                	jb     36c1 <_IO_stdin_used+0x6bd>
    3658:	70 74                	jo     36ce <_IO_stdin_used+0x6ca>
    365a:	20 6b 69             	and    BYTE PTR [ebx+0x69],ch
    365d:	64 64 69 65 2e 20 49 	fs imul esp,DWORD PTR fs:[ebp+0x2e],0x62204920
    3664:	20 62 
    3666:	61                   	popa   
    3667:	6e                   	outs   dx,BYTE PTR ds:[esi]
    3668:	69 73 68 20 74 68 65 	imul   esi,DWORD PTR [ebx+0x68],0x65687420
    366f:	65 20 74 6f 20       	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
    3674:	34 63                	xor    al,0x63
    3676:	68 61 6e 2e 22       	push   0x222e6e61
    367b:	0a 00                	or     al,BYTE PTR [eax]
    367d:	2d 2d 20 59 4f       	sub    eax,0x4f59202d
    3682:	55                   	push   ebp
    3683:	20 4c 4f 53          	and    BYTE PTR [edi+ecx*2+0x53],cl
    3687:	45                   	inc    ebp
    3688:	20 2d 2d 00 62 d5    	and    BYTE PTR ds:0xd562002d,ch
    368e:	ff                   	(bad)  
    368f:	ff 9e d5 ff ff cb    	call   FWORD PTR [esi-0x3400002b]
    3695:	d5 ff                	aad    0xff
    3697:	ff cb                	dec    ebx
    3699:	d5 ff                	aad    0xff
    369b:	ff cb                	dec    ebx
    369d:	d5 ff                	aad    0xff
    369f:	ff 8a d5 ff ff cb    	dec    DWORD PTR [edx-0x3400002b]
    36a5:	d5 ff                	aad    0xff
    36a7:	ff cb                	dec    ebx
    36a9:	d5 ff                	aad    0xff
    36ab:	ff cb                	dec    ebx
    36ad:	d5 ff                	aad    0xff
    36af:	ff cb                	dec    ebx
    36b1:	d5 ff                	aad    0xff
    36b3:	ff cb                	dec    ebx
    36b5:	d5 ff                	aad    0xff
    36b7:	ff cb                	dec    ebx
    36b9:	d5 ff                	aad    0xff
    36bb:	ff cb                	dec    ebx
    36bd:	d5 ff                	aad    0xff
    36bf:	ff cb                	dec    ebx
    36c1:	d5 ff                	aad    0xff
    36c3:	ff cb                	dec    ebx
    36c5:	d5 ff                	aad    0xff
    36c7:	ff 44 d5 ff          	inc    DWORD PTR [ebp+edx*8-0x1]
    36cb:	ff cb                	dec    ebx
    36cd:	d5 ff                	aad    0xff
    36cf:	ff 76 d5             	push   DWORD PTR [esi-0x2b]
    36d2:	ff                   	(bad)  
    36d3:	ff 4e d5             	dec    DWORD PTR [esi-0x2b]
    36d6:	ff                   	(bad)  
    36d7:	ff 00                	inc    DWORD PTR [eax]
	...
    36e1:	00 00                	add    BYTE PTR [eax],al
    36e3:	00 fe                	add    dh,bh
    36e5:	ff                   	(bad)  
    36e6:	ff                   	(bad)  
    36e7:	ff 1d 40 00 00 00    	call   FWORD PTR ds:0x40
    36ed:	00 00                	add    BYTE PTR [eax],al
    36ef:	00 91 0a 63 0b 41    	add    BYTE PTR [ecx+0x410b630a],dl
    36f5:	0e                   	push   cs
    36f6:	d4 3f                	aam    0x3f
    36f8:	5b                   	pop    ebx
    36f9:	d3 bc e3 14 1d c1 3f 	sar    DWORD PTR [ebx+eiz*8+0x3fc11d14],cl
    3700:	31 08                	xor    DWORD PTR [eax],ecx
    3702:	ac                   	lods   al,BYTE PTR ds:[esi]
    3703:	1c 5a                	sbb    al,0x5a
    3705:	64 f5                	fs cmc 
    3707:	3f                   	aas    
    3708:	ae                   	scas   al,BYTE PTR es:[edi]
    3709:	47                   	inc    edi
    370a:	e1 7a                	loope  3786 <__GNU_EH_FRAME_HDR+0x4a>
    370c:	14 9e                	adc    al,0x9e
    370e:	57                   	push   edi
    370f:	40                   	inc    eax
    3710:	ae                   	scas   al,BYTE PTR es:[edi]
    3711:	47                   	inc    edi
    3712:	e1 7a                	loope  378e <__GNU_EH_FRAME_HDR+0x52>
    3714:	14 ae                	adc    al,0xae
    3716:	47                   	inc    edi
    3717:	81 ff 3f 00 00 00    	cmp    edi,0x3f
    371d:	00 00                	add    BYTE PTR [eax],al
    371f:	00 a4 70 3d 0a d7 a3 	add    BYTE PTR [eax+esi*2-0x5c28f5c3],ah
    3726:	70 fd                	jo     3725 <_IO_stdin_used+0x721>
    3728:	fe                   	(bad)  
    3729:	3f                   	aas    
    372a:	00 00                	add    BYTE PTR [eax],al
    372c:	00 00                	add    BYTE PTR [eax],al
    372e:	00 00                	add    BYTE PTR [eax],al
    3730:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
    3731:	70 3d                	jo     3770 <__GNU_EH_FRAME_HDR+0x34>
    3733:	0a d7                	or     dl,bh
    3735:	a3 f0 bc 05 40       	mov    ds:0x4005bcf0,eax
	...

Disassembly of section .eh_frame_hdr:

0000373c <__GNU_EH_FRAME_HDR>:
    373c:	01 1b                	add    DWORD PTR [ebx],ebx
    373e:	03 3b                	add    edi,DWORD PTR [ebx]
    3740:	c8 00 00 00          	enter  0x0,0x0
    3744:	18 00                	sbb    BYTE PTR [eax],al
    3746:	00 00                	add    BYTE PTR [eax],al
    3748:	f4                   	hlt    
    3749:	d8 ff                	fdivr  st,st(7)
    374b:	ff e4                	jmp    esp
    374d:	00 00                	add    BYTE PTR [eax],al
    374f:	00 14 da             	add    BYTE PTR [edx+ebx*8],dl
    3752:	ff                   	(bad)  
    3753:	ff 08                	dec    DWORD PTR [eax]
    3755:	01 00                	add    DWORD PTR [eax],eax
    3757:	00 5d db             	add    BYTE PTR [ebp-0x25],bl
    375a:	ff                   	(bad)  
    375b:	ff 1c 01             	call   FWORD PTR [ecx+eax*1]
    375e:	00 00                	add    BYTE PTR [eax],al
    3760:	ac                   	lods   al,BYTE PTR ds:[esi]
    3761:	db ff                	(bad)  
    3763:	ff 40 01             	inc    DWORD PTR [eax+0x1]
    3766:	00 00                	add    BYTE PTR [eax],al
    3768:	0a dc                	or     bl,ah
    376a:	ff                   	(bad)  
    376b:	ff 64 01 00          	jmp    DWORD PTR [ecx+eax*1+0x0]
    376f:	00 36                	add    BYTE PTR [esi],dh
    3771:	dc ff                	fdivr  st(7),st
    3773:	ff 84 01 00 00 75 dc 	inc    DWORD PTR [ecx+eax*1-0x238b0000]
    377a:	ff                   	(bad)  
    377b:	ff a8 01 00 00 dc    	jmp    FWORD PTR [eax-0x23ffffff]
    3781:	dc ff                	fdivr  st(7),st
    3783:	ff cc                	dec    esp
    3785:	01 00                	add    DWORD PTR [eax],eax
    3787:	00 27                	add    BYTE PTR [edi],ah
    3789:	dd ff                	(bad)  
    378b:	ff f0                	push   eax
    378d:	01 00                	add    DWORD PTR [eax],eax
    378f:	00 72 dd             	add    BYTE PTR [edx-0x23],dh
    3792:	ff                   	(bad)  
    3793:	ff 14 02             	call   DWORD PTR [edx+eax*1]
    3796:	00 00                	add    BYTE PTR [eax],al
    3798:	b4 dd                	mov    ah,0xdd
    379a:	ff                   	(bad)  
    379b:	ff                   	(bad)  
    379c:	38 02                	cmp    BYTE PTR [edx],al
    379e:	00 00                	add    BYTE PTR [eax],al
    37a0:	20 de                	and    dh,bl
    37a2:	ff                   	(bad)  
    37a3:	ff 5c 02 00          	call   FWORD PTR [edx+eax*1+0x0]
    37a7:	00 ca                	add    dl,cl
    37a9:	de ff                	fdivrp st(7),st
    37ab:	ff 84 02 00 00 ff df 	inc    DWORD PTR [edx+eax*1-0x20010000]
    37b2:	ff                   	(bad)  
    37b3:	ff b4 02 00 00 dd e1 	push   DWORD PTR [edx+eax*1-0x1e230000]
    37ba:	ff                   	(bad)  
    37bb:	ff                   	(bad)  
    37bc:	d8 02                	fadd   DWORD PTR [edx]
    37be:	00 00                	add    BYTE PTR [eax],al
    37c0:	1e                   	push   ds
    37c1:	e4 ff                	in     al,0xff
    37c3:	ff                   	(bad)  
    37c4:	fc                   	cld    
    37c5:	02 00                	add    al,BYTE PTR [eax]
    37c7:	00 d6                	add    dh,dl
    37c9:	e4 ff                	in     al,0xff
    37cb:	ff 20                	jmp    DWORD PTR [eax]
    37cd:	03 00                	add    eax,DWORD PTR [eax]
    37cf:	00 b1 e6 ff ff 44    	add    BYTE PTR [ecx+0x44ffffe6],dh
    37d5:	03 00                	add    eax,DWORD PTR [eax]
    37d7:	00 3e                	add    BYTE PTR [esi],bh
    37d9:	e8 ff ff 68 03       	call   36937dd <_end+0x368e7f5>
    37de:	00 00                	add    BYTE PTR [eax],al
    37e0:	59                   	pop    ecx
    37e1:	ea ff ff 8c 03 00 00 	jmp    0x0:0x38cffff
    37e8:	ea eb ff ff b0 03 00 	jmp    0x3:0xb0ffffeb
    37ef:	00 2f                	add    BYTE PTR [edi],ch
    37f1:	ec                   	in     al,dx
    37f2:	ff                   	(bad)  
    37f3:	ff e4                	jmp    esp
    37f5:	03 00                	add    eax,DWORD PTR [eax]
    37f7:	00 34 ec             	add    BYTE PTR [esp+ebp*8],dh
    37fa:	ff                   	(bad)  
    37fb:	ff                   	(bad)  
    37fc:	f8                   	clc    
    37fd:	03 00                	add    eax,DWORD PTR [eax]
    37ff:	00 94 ec ff ff 44 04 	add    BYTE PTR [esp+ebp*8+0x444ffff],dl
	...

Disassembly of section .eh_frame:

00003808 <__FRAME_END__-0x38c>:
    3808:	14 00                	adc    al,0x0
    380a:	00 00                	add    BYTE PTR [eax],al
    380c:	00 00                	add    BYTE PTR [eax],al
    380e:	00 00                	add    BYTE PTR [eax],al
    3810:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    3813:	00 01                	add    BYTE PTR [ecx],al
    3815:	7c 08                	jl     381f <__GNU_EH_FRAME_HDR+0xe3>
    3817:	01 1b                	add    DWORD PTR [ebx],ebx
    3819:	0c 04                	or     al,0x4
    381b:	04 88                	add    al,0x88
    381d:	01 00                	add    DWORD PTR [eax],eax
    381f:	00 20                	add    BYTE PTR [eax],ah
    3821:	00 00                	add    BYTE PTR [eax],al
    3823:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    3826:	00 00                	add    BYTE PTR [eax],al
    3828:	08 d8                	or     al,bl
    382a:	ff                   	(bad)  
    382b:	ff 20                	jmp    DWORD PTR [eax]
    382d:	01 00                	add    DWORD PTR [eax],eax
    382f:	00 00                	add    BYTE PTR [eax],al
    3831:	0e                   	push   cs
    3832:	08 46 0e             	or     BYTE PTR [esi+0xe],al
    3835:	0c 4a                	or     al,0x4a
    3837:	0f 0b                	ud2    
    3839:	74 04                	je     383f <__GNU_EH_FRAME_HDR+0x103>
    383b:	78 00                	js     383d <__GNU_EH_FRAME_HDR+0x101>
    383d:	3f                   	aas    
    383e:	1a 3b                	sbb    bh,BYTE PTR [ebx]
    3840:	2a 32                	sub    dh,BYTE PTR [edx]
    3842:	24 22                	and    al,0x22
    3844:	10 00                	adc    BYTE PTR [eax],al
    3846:	00 00                	add    BYTE PTR [eax],al
    3848:	40                   	inc    eax
    3849:	00 00                	add    BYTE PTR [eax],al
    384b:	00 04 d9             	add    BYTE PTR [ecx+ebx*8],al
    384e:	ff                   	(bad)  
    384f:	ff 10                	call   DWORD PTR [eax]
    3851:	00 00                	add    BYTE PTR [eax],al
    3853:	00 00                	add    BYTE PTR [eax],al
    3855:	00 00                	add    BYTE PTR [eax],al
    3857:	00 20                	add    BYTE PTR [eax],ah
    3859:	00 00                	add    BYTE PTR [eax],al
    385b:	00 54 00 00          	add    BYTE PTR [eax+eax*1+0x0],dl
    385f:	00 39                	add    BYTE PTR [ecx],bh
    3861:	da ff                	(bad)  
    3863:	ff 4f 00             	dec    DWORD PTR [edi+0x0]
    3866:	00 00                	add    BYTE PTR [eax],al
    3868:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    386b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3871:	44                   	inc    esp
    3872:	83 03 02             	add    DWORD PTR [ebx],0x2
    3875:	46                   	inc    esi
    3876:	c3                   	ret    
    3877:	41                   	inc    ecx
    3878:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
    387b:	04 20                	add    al,0x20
    387d:	00 00                	add    BYTE PTR [eax],al
    387f:	00 78 00             	add    BYTE PTR [eax+0x0],bh
    3882:	00 00                	add    BYTE PTR [eax],al
    3884:	64 da ff             	fs (bad) 
    3887:	ff 5e 00             	call   FWORD PTR [esi+0x0]
    388a:	00 00                	add    BYTE PTR [eax],al
    388c:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    388f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3895:	44                   	inc    esp
    3896:	83 03 02             	add    DWORD PTR [ebx],0x2
    3899:	55                   	push   ebp
    389a:	c3                   	ret    
    389b:	41                   	inc    ecx
    389c:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
    389f:	04 1c                	add    al,0x1c
    38a1:	00 00                	add    BYTE PTR [eax],al
    38a3:	00 9c 00 00 00 9e da 	add    BYTE PTR [eax+eax*1-0x25620000],bl
    38aa:	ff                   	(bad)  
    38ab:	ff 2c 00             	jmp    FWORD PTR [eax+eax*1]
    38ae:	00 00                	add    BYTE PTR [eax],al
    38b0:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    38b3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    38b9:	68 c5 0c 04 04       	push   0x4040cc5
    38be:	00 00                	add    BYTE PTR [eax],al
    38c0:	20 00                	and    BYTE PTR [eax],al
    38c2:	00 00                	add    BYTE PTR [eax],al
    38c4:	bc 00 00 00 aa       	mov    esp,0xaa000000
    38c9:	da ff                	(bad)  
    38cb:	ff                   	(bad)  
    38cc:	3f                   	aas    
    38cd:	00 00                	add    BYTE PTR [eax],al
    38cf:	00 00                	add    BYTE PTR [eax],al
    38d1:	41                   	inc    ecx
    38d2:	0e                   	push   cs
    38d3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    38d9:	44                   	inc    esp
    38da:	83 03 76             	add    DWORD PTR [ebx],0x76
    38dd:	c3                   	ret    
    38de:	41                   	inc    ecx
    38df:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
    38e2:	04 00                	add    al,0x0
    38e4:	20 00                	and    BYTE PTR [eax],al
    38e6:	00 00                	add    BYTE PTR [eax],al
    38e8:	e0 00                	loopne 38ea <__GNU_EH_FRAME_HDR+0x1ae>
    38ea:	00 00                	add    BYTE PTR [eax],al
    38ec:	c5 da ff             	(bad)  
    38ef:	ff 67 00             	jmp    DWORD PTR [edi+0x0]
    38f2:	00 00                	add    BYTE PTR [eax],al
    38f4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    38f7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    38fd:	47                   	inc    edi
    38fe:	83 03 02             	add    DWORD PTR [ebx],0x2
    3901:	5c                   	pop    esp
    3902:	c5 c3 0c             	(bad)  
    3905:	04 04                	add    al,0x4
    3907:	00 20                	add    BYTE PTR [eax],ah
    3909:	00 00                	add    BYTE PTR [eax],al
    390b:	00 04 01             	add    BYTE PTR [ecx+eax*1],al
    390e:	00 00                	add    BYTE PTR [eax],al
    3910:	08 db                	or     bl,bl
    3912:	ff                   	(bad)  
    3913:	ff 4b 00             	dec    DWORD PTR [ebx+0x0]
    3916:	00 00                	add    BYTE PTR [eax],al
    3918:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    391b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3921:	44                   	inc    esp
    3922:	83 03 02             	add    DWORD PTR [ebx],0x2
    3925:	43                   	inc    ebx
    3926:	c5 c3 0c             	(bad)  
    3929:	04 04                	add    al,0x4
    392b:	00 20                	add    BYTE PTR [eax],ah
    392d:	00 00                	add    BYTE PTR [eax],al
    392f:	00 28                	add    BYTE PTR [eax],ch
    3931:	01 00                	add    DWORD PTR [eax],eax
    3933:	00 2f                	add    BYTE PTR [edi],ch
    3935:	db ff                	(bad)  
    3937:	ff 4b 00             	dec    DWORD PTR [ebx+0x0]
    393a:	00 00                	add    BYTE PTR [eax],al
    393c:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    393f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3945:	44                   	inc    esp
    3946:	83 03 02             	add    DWORD PTR [ebx],0x2
    3949:	43                   	inc    ebx
    394a:	c5 c3 0c             	(bad)  
    394d:	04 04                	add    al,0x4
    394f:	00 20                	add    BYTE PTR [eax],ah
    3951:	00 00                	add    BYTE PTR [eax],al
    3953:	00 4c 01 00          	add    BYTE PTR [ecx+eax*1+0x0],cl
    3957:	00 56 db             	add    BYTE PTR [esi-0x25],dl
    395a:	ff                   	(bad)  
    395b:	ff 42 00             	inc    DWORD PTR [edx+0x0]
    395e:	00 00                	add    BYTE PTR [eax],al
    3960:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    3963:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3969:	44                   	inc    esp
    396a:	83 03 79             	add    DWORD PTR [ebx],0x79
    396d:	c3                   	ret    
    396e:	41                   	inc    ecx
    396f:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
    3972:	04 00                	add    al,0x0
    3974:	20 00                	and    BYTE PTR [eax],al
    3976:	00 00                	add    BYTE PTR [eax],al
    3978:	70 01                	jo     397b <__GNU_EH_FRAME_HDR+0x23f>
    397a:	00 00                	add    BYTE PTR [eax],al
    397c:	74 db                	je     3959 <__GNU_EH_FRAME_HDR+0x21d>
    397e:	ff                   	(bad)  
    397f:	ff 6c 00 00          	jmp    FWORD PTR [eax+eax*1+0x0]
    3983:	00 00                	add    BYTE PTR [eax],al
    3985:	41                   	inc    ecx
    3986:	0e                   	push   cs
    3987:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    398d:	44                   	inc    esp
    398e:	83 03 02             	add    DWORD PTR [ebx],0x2
    3991:	64 c5 c3 0c          	fs (bad) 
    3995:	04 04                	add    al,0x4
    3997:	00 24 00             	add    BYTE PTR [eax+eax*1],ah
    399a:	00 00                	add    BYTE PTR [eax],al
    399c:	94                   	xchg   esp,eax
    399d:	01 00                	add    DWORD PTR [eax],eax
    399f:	00 bc db ff ff aa 00 	add    BYTE PTR [ebx+ebx*8+0xaaffff],bh
    39a6:	00 00                	add    BYTE PTR [eax],al
    39a8:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    39ab:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    39b1:	48                   	dec    eax
    39b2:	87 03                	xchg   DWORD PTR [ebx],eax
    39b4:	83 04 02 9c          	add    DWORD PTR [edx+eax*1],0xffffff9c
    39b8:	c3                   	ret    
    39b9:	41                   	inc    ecx
    39ba:	c7 41 c5 0c 04 04 2c 	mov    DWORD PTR [ecx-0x3b],0x2c04040c
    39c1:	00 00                	add    BYTE PTR [eax],al
    39c3:	00 bc 01 00 00 3e dc 	add    BYTE PTR [ecx+eax*1-0x23c20000],bh
    39ca:	ff                   	(bad)  
    39cb:	ff 35 01 00 00 00    	push   DWORD PTR ds:0x1
    39d1:	41                   	inc    ecx
    39d2:	0e                   	push   cs
    39d3:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    39d9:	46                   	inc    esi
    39da:	87 03                	xchg   DWORD PTR [ebx],eax
    39dc:	86 04 83             	xchg   BYTE PTR [ebx+eax*4],al
    39df:	05 03 28 01 c3       	add    eax,0xc3012803
    39e4:	41                   	inc    ecx
    39e5:	c6 41 c7 41          	mov    BYTE PTR [ecx-0x39],0x41
    39e9:	c5 0c 04             	lds    ecx,FWORD PTR [esp+eax*1]
    39ec:	04 00                	add    al,0x0
    39ee:	00 00                	add    BYTE PTR [eax],al
    39f0:	20 00                	and    BYTE PTR [eax],al
    39f2:	00 00                	add    BYTE PTR [eax],al
    39f4:	ec                   	in     al,dx
    39f5:	01 00                	add    DWORD PTR [eax],eax
    39f7:	00 43 dd             	add    BYTE PTR [ebx-0x23],al
    39fa:	ff                   	(bad)  
    39fb:	ff                   	(bad)  
    39fc:	de 01                	fiadd  WORD PTR [ecx]
    39fe:	00 00                	add    BYTE PTR [eax],al
    3a00:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    3a03:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3a09:	44                   	inc    esp
    3a0a:	83 03 03             	add    DWORD PTR [ebx],0x3
    3a0d:	d6                   	(bad)  
    3a0e:	01 c5                	add    ebp,eax
    3a10:	c3                   	ret    
    3a11:	0c 04                	or     al,0x4
    3a13:	04 20                	add    al,0x20
    3a15:	00 00                	add    BYTE PTR [eax],al
    3a17:	00 10                	add    BYTE PTR [eax],dl
    3a19:	02 00                	add    al,BYTE PTR [eax]
    3a1b:	00 fd                	add    ch,bh
    3a1d:	de ff                	fdivrp st(7),st
    3a1f:	ff 41 02             	inc    DWORD PTR [ecx+0x2]
    3a22:	00 00                	add    BYTE PTR [eax],al
    3a24:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    3a27:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3a2d:	44                   	inc    esp
    3a2e:	83 03 03             	add    DWORD PTR [ebx],0x3
    3a31:	39 02                	cmp    DWORD PTR [edx],eax
    3a33:	c5 c3 0c             	(bad)  
    3a36:	04 04                	add    al,0x4
    3a38:	20 00                	and    BYTE PTR [eax],al
    3a3a:	00 00                	add    BYTE PTR [eax],al
    3a3c:	34 02                	xor    al,0x2
    3a3e:	00 00                	add    BYTE PTR [eax],al
    3a40:	1a e1                	sbb    ah,cl
    3a42:	ff                   	(bad)  
    3a43:	ff                   	(bad)  
    3a44:	b8 00 00 00 00       	mov    eax,0x0
    3a49:	41                   	inc    ecx
    3a4a:	0e                   	push   cs
    3a4b:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3a51:	44                   	inc    esp
    3a52:	83 03 02             	add    DWORD PTR [ebx],0x2
    3a55:	b0 c5                	mov    al,0xc5
    3a57:	c3                   	ret    
    3a58:	0c 04                	or     al,0x4
    3a5a:	04 00                	add    al,0x0
    3a5c:	20 00                	and    BYTE PTR [eax],al
    3a5e:	00 00                	add    BYTE PTR [eax],al
    3a60:	58                   	pop    eax
    3a61:	02 00                	add    al,BYTE PTR [eax]
    3a63:	00 ae e1 ff ff db    	add    BYTE PTR [esi-0x2400001f],ch
    3a69:	01 00                	add    DWORD PTR [eax],eax
    3a6b:	00 00                	add    BYTE PTR [eax],al
    3a6d:	41                   	inc    ecx
    3a6e:	0e                   	push   cs
    3a6f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3a75:	44                   	inc    esp
    3a76:	83 03 03             	add    DWORD PTR [ebx],0x3
    3a79:	d3 01                	rol    DWORD PTR [ecx],cl
    3a7b:	c5 c3 0c             	(bad)  
    3a7e:	04 04                	add    al,0x4
    3a80:	20 00                	and    BYTE PTR [eax],al
    3a82:	00 00                	add    BYTE PTR [eax],al
    3a84:	7c 02                	jl     3a88 <__GNU_EH_FRAME_HDR+0x34c>
    3a86:	00 00                	add    BYTE PTR [eax],al
    3a88:	65 e3 ff             	gs jecxz 3a8a <__GNU_EH_FRAME_HDR+0x34e>
    3a8b:	ff 8d 01 00 00 00    	dec    DWORD PTR [ebp+0x1]
    3a91:	41                   	inc    ecx
    3a92:	0e                   	push   cs
    3a93:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3a99:	44                   	inc    esp
    3a9a:	83 03 03             	add    DWORD PTR [ebx],0x3
    3a9d:	85 01                	test   DWORD PTR [ecx],eax
    3a9f:	c5 c3 0c             	(bad)  
    3aa2:	04 04                	add    al,0x4
    3aa4:	20 00                	and    BYTE PTR [eax],al
    3aa6:	00 00                	add    BYTE PTR [eax],al
    3aa8:	a0 02 00 00 ce       	mov    al,ds:0xce000002
    3aad:	e4 ff                	in     al,0xff
    3aaf:	ff 1b                	call   FWORD PTR [ebx]
    3ab1:	02 00                	add    al,BYTE PTR [eax]
    3ab3:	00 00                	add    BYTE PTR [eax],al
    3ab5:	41                   	inc    ecx
    3ab6:	0e                   	push   cs
    3ab7:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3abd:	47                   	inc    edi
    3abe:	83 03 03             	add    DWORD PTR [ebx],0x3
    3ac1:	10 02                	adc    BYTE PTR [edx],al
    3ac3:	c5 c3 0c             	(bad)  
    3ac6:	04 04                	add    al,0x4
    3ac8:	20 00                	and    BYTE PTR [eax],al
    3aca:	00 00                	add    BYTE PTR [eax],al
    3acc:	c4 02                	les    eax,FWORD PTR [edx]
    3ace:	00 00                	add    BYTE PTR [eax],al
    3ad0:	c5 e6 ff             	(bad)  
    3ad3:	ff 91 01 00 00 00    	call   DWORD PTR [ecx+0x1]
    3ad9:	41                   	inc    ecx
    3ada:	0e                   	push   cs
    3adb:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    3ae1:	44                   	inc    esp
    3ae2:	83 03 03             	add    DWORD PTR [ebx],0x3
    3ae5:	89 01                	mov    DWORD PTR [ecx],eax
    3ae7:	c5 c3 0c             	(bad)  
    3aea:	04 04                	add    al,0x4
    3aec:	30 00                	xor    BYTE PTR [eax],al
    3aee:	00 00                	add    BYTE PTR [eax],al
    3af0:	e8 02 00 00 32       	call   32003af7 <_end+0x31ffeb0f>
    3af5:	e8 ff ff 45 00       	call   463af9 <_end+0x45eb11>
    3afa:	00 00                	add    BYTE PTR [eax],al
    3afc:	00 44 0c 01          	add    BYTE PTR [esp+ecx*1+0x1],al
    3b00:	00 47 10             	add    BYTE PTR [edi+0x10],al
    3b03:	05 02 75 00 44       	add    eax,0x44007502
    3b08:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
    3b0c:	06                   	push   es
    3b0d:	10 03                	adc    BYTE PTR [ebx],al
    3b0f:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
    3b12:	70 c1                	jo     3ad5 <__GNU_EH_FRAME_HDR+0x399>
    3b14:	0c 01                	or     al,0x1
    3b16:	00 41 c3             	add    BYTE PTR [ecx-0x3d],al
    3b19:	41                   	inc    ecx
    3b1a:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
    3b1d:	04 04                	add    al,0x4
    3b1f:	00 10                	add    BYTE PTR [eax],dl
    3b21:	00 00                	add    BYTE PTR [eax],al
    3b23:	00 1c 03             	add    BYTE PTR [ebx+eax*1],bl
    3b26:	00 00                	add    BYTE PTR [eax],al
    3b28:	43                   	inc    ebx
    3b29:	e8 ff ff 04 00       	call   53b2d <_end+0x4eb45>
    3b2e:	00 00                	add    BYTE PTR [eax],al
    3b30:	00 00                	add    BYTE PTR [eax],al
    3b32:	00 00                	add    BYTE PTR [eax],al
    3b34:	48                   	dec    eax
    3b35:	00 00                	add    BYTE PTR [eax],al
    3b37:	00 30                	add    BYTE PTR [eax],dh
    3b39:	03 00                	add    eax,DWORD PTR [eax]
    3b3b:	00 34 e8             	add    BYTE PTR [eax+ebp*8],dh
    3b3e:	ff                   	(bad)  
    3b3f:	ff 5d 00             	call   FWORD PTR [ebp+0x0]
    3b42:	00 00                	add    BYTE PTR [eax],al
    3b44:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
    3b47:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
    3b4d:	87 03                	xchg   DWORD PTR [ebx],eax
    3b4f:	41                   	inc    ecx
    3b50:	0e                   	push   cs
    3b51:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
    3b57:	83 05 4e 0e 20 69 0e 	add    DWORD PTR ds:0x69200e4e,0xe
    3b5e:	24 41                	and    al,0x41
    3b60:	0e                   	push   cs
    3b61:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
    3b65:	44                   	inc    esp
    3b66:	0e                   	push   cs
    3b67:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
    3b6a:	20 47 0e             	and    BYTE PTR [edi+0xe],al
    3b6d:	14 41                	adc    al,0x41
    3b6f:	c3                   	ret    
    3b70:	0e                   	push   cs
    3b71:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
    3b74:	0e                   	push   cs
    3b75:	0c 41                	or     al,0x41
    3b77:	c7                   	(bad)  
    3b78:	0e                   	push   cs
    3b79:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
    3b7c:	0e                   	push   cs
    3b7d:	04 00                	add    al,0x0
    3b7f:	00 10                	add    BYTE PTR [eax],dl
    3b81:	00 00                	add    BYTE PTR [eax],al
    3b83:	00 7c 03 00          	add    BYTE PTR [ebx+eax*1+0x0],bh
    3b87:	00 48 e8             	add    BYTE PTR [eax-0x18],cl
    3b8a:	ff                   	(bad)  
    3b8b:	ff 02                	inc    DWORD PTR [edx]
    3b8d:	00 00                	add    BYTE PTR [eax],al
    3b8f:	00 00                	add    BYTE PTR [eax],al
    3b91:	00 00                	add    BYTE PTR [eax],al
	...

00003b94 <__FRAME_END__>:
    3b94:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00004b98 <__frame_dummy_init_array_entry>:
    4b98:	90                   	nop
    4b99:	12 00                	adc    al,BYTE PTR [eax]
	...

Disassembly of section .fini_array:

00004b9c <__do_global_dtors_aux_fini_array_entry>:
    4b9c:	40                   	inc    eax
    4b9d:	12 00                	adc    al,BYTE PTR [eax]
	...

Disassembly of section .dynamic:

00004ba0 <_DYNAMIC>:
    4ba0:	01 00                	add    DWORD PTR [eax],eax
    4ba2:	00 00                	add    BYTE PTR [eax],al
    4ba4:	01 00                	add    DWORD PTR [eax],eax
    4ba6:	00 00                	add    BYTE PTR [eax],al
    4ba8:	0c 00                	or     al,0x0
    4baa:	00 00                	add    BYTE PTR [eax],al
    4bac:	00 10                	add    BYTE PTR [eax],dl
    4bae:	00 00                	add    BYTE PTR [eax],al
    4bb0:	0d 00 00 00 d4       	or     eax,0xd4000000
    4bb5:	23 00                	and    eax,DWORD PTR [eax]
    4bb7:	00 19                	add    BYTE PTR [ecx],bl
    4bb9:	00 00                	add    BYTE PTR [eax],al
    4bbb:	00 98 4b 00 00 1b    	add    BYTE PTR [eax+0x1b00004b],bl
    4bc1:	00 00                	add    BYTE PTR [eax],al
    4bc3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
    4bc6:	00 00                	add    BYTE PTR [eax],al
    4bc8:	1a 00                	sbb    al,BYTE PTR [eax]
    4bca:	00 00                	add    BYTE PTR [eax],al
    4bcc:	9c                   	pushf  
    4bcd:	4b                   	dec    ebx
    4bce:	00 00                	add    BYTE PTR [eax],al
    4bd0:	1c 00                	sbb    al,0x0
    4bd2:	00 00                	add    BYTE PTR [eax],al
    4bd4:	04 00                	add    al,0x0
    4bd6:	00 00                	add    BYTE PTR [eax],al
    4bd8:	f5                   	cmc    
    4bd9:	fe                   	(bad)  
    4bda:	ff 6f cc             	jmp    FWORD PTR [edi-0x34]
    4bdd:	01 00                	add    DWORD PTR [eax],eax
    4bdf:	00 05 00 00 00 80    	add    BYTE PTR ds:0x80000000,al
    4be5:	03 00                	add    eax,DWORD PTR [eax]
    4be7:	00 06                	add    BYTE PTR [esi],al
    4be9:	00 00                	add    BYTE PTR [eax],al
    4beb:	00 f0                	add    al,dh
    4bed:	01 00                	add    DWORD PTR [eax],eax
    4bef:	00 0a                	add    BYTE PTR [edx],cl
    4bf1:	00 00                	add    BYTE PTR [eax],al
    4bf3:	00 1c 01             	add    BYTE PTR [ecx+eax*1],bl
    4bf6:	00 00                	add    BYTE PTR [eax],al
    4bf8:	0b 00                	or     eax,DWORD PTR [eax]
    4bfa:	00 00                	add    BYTE PTR [eax],al
    4bfc:	10 00                	adc    BYTE PTR [eax],al
    4bfe:	00 00                	add    BYTE PTR [eax],al
    4c00:	15 00 00 00 00       	adc    eax,0x0
    4c05:	00 00                	add    BYTE PTR [eax],al
    4c07:	00 03                	add    BYTE PTR [ebx],al
    4c09:	00 00                	add    BYTE PTR [eax],al
    4c0b:	00 a8 4c 00 00 02    	add    BYTE PTR [eax+0x200004c],ch
    4c11:	00 00                	add    BYTE PTR [eax],al
    4c13:	00 88 00 00 00 14    	add    BYTE PTR [eax+0x14000000],cl
    4c19:	00 00                	add    BYTE PTR [eax],al
    4c1b:	00 11                	add    BYTE PTR [ecx],dl
    4c1d:	00 00                	add    BYTE PTR [eax],al
    4c1f:	00 17                	add    BYTE PTR [edi],dl
    4c21:	00 00                	add    BYTE PTR [eax],al
    4c23:	00 b0 05 00 00 11    	add    BYTE PTR [eax+0x11000005],dh
    4c29:	00 00                	add    BYTE PTR [eax],al
    4c2b:	00 20                	add    BYTE PTR [eax],ah
    4c2d:	05 00 00 12 00       	add    eax,0x120000
    4c32:	00 00                	add    BYTE PTR [eax],al
    4c34:	90                   	nop
    4c35:	00 00                	add    BYTE PTR [eax],al
    4c37:	00 13                	add    BYTE PTR [ebx],dl
    4c39:	00 00                	add    BYTE PTR [eax],al
    4c3b:	00 08                	add    BYTE PTR [eax],cl
    4c3d:	00 00                	add    BYTE PTR [eax],al
    4c3f:	00 fb                	add    bl,bh
    4c41:	ff                   	(bad)  
    4c42:	ff 6f 00             	jmp    FWORD PTR [edi+0x0]
    4c45:	00 00                	add    BYTE PTR [eax],al
    4c47:	08 fe                	or     dh,bh
    4c49:	ff                   	(bad)  
    4c4a:	ff 6f d0             	jmp    FWORD PTR [edi-0x30]
    4c4d:	04 00                	add    al,0x0
    4c4f:	00 ff                	add    bh,bh
    4c51:	ff                   	(bad)  
    4c52:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    4c55:	00 00                	add    BYTE PTR [eax],al
    4c57:	00 f0                	add    al,dh
    4c59:	ff                   	(bad)  
    4c5a:	ff 6f 9c             	jmp    FWORD PTR [edi-0x64]
    4c5d:	04 00                	add    al,0x0
    4c5f:	00 fa                	add    dl,bh
    4c61:	ff                   	(bad)  
    4c62:	ff 6f 0d             	jmp    FWORD PTR [edi+0xd]
	...

Disassembly of section .got:

00004c90 <.got>:
	...
    4ca0:	26 23 00             	and    eax,DWORD PTR es:[eax]
    4ca3:	00 00                	add    BYTE PTR [eax],al
    4ca5:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

00004ca8 <_GLOBAL_OFFSET_TABLE_>:
    4ca8:	a0 4b 00 00 00       	mov    al,ds:0x4b
    4cad:	00 00                	add    BYTE PTR [eax],al
    4caf:	00 00                	add    BYTE PTR [eax],al
    4cb1:	00 00                	add    BYTE PTR [eax],al
    4cb3:	00 46 10             	add    BYTE PTR [esi+0x10],al
    4cb6:	00 00                	add    BYTE PTR [eax],al
    4cb8:	56                   	push   esi
    4cb9:	10 00                	adc    BYTE PTR [eax],al
    4cbb:	00 66 10             	add    BYTE PTR [esi+0x10],ah
    4cbe:	00 00                	add    BYTE PTR [eax],al
    4cc0:	76 10                	jbe    4cd2 <_GLOBAL_OFFSET_TABLE_+0x2a>
    4cc2:	00 00                	add    BYTE PTR [eax],al
    4cc4:	86 10                	xchg   BYTE PTR [eax],dl
    4cc6:	00 00                	add    BYTE PTR [eax],al
    4cc8:	96                   	xchg   esi,eax
    4cc9:	10 00                	adc    BYTE PTR [eax],al
    4ccb:	00 a6 10 00 00 b6    	add    BYTE PTR [esi-0x49fffff0],ah
    4cd1:	10 00                	adc    BYTE PTR [eax],al
    4cd3:	00 c6                	add    dh,al
    4cd5:	10 00                	adc    BYTE PTR [eax],al
    4cd7:	00 d6                	add    dh,dl
    4cd9:	10 00                	adc    BYTE PTR [eax],al
    4cdb:	00 e6                	add    dh,ah
    4cdd:	10 00                	adc    BYTE PTR [eax],al
    4cdf:	00 f6                	add    dh,dh
    4ce1:	10 00                	adc    BYTE PTR [eax],al
    4ce3:	00 06                	add    BYTE PTR [esi],al
    4ce5:	11 00                	adc    DWORD PTR [eax],eax
    4ce7:	00 16                	add    BYTE PTR [esi],dl
    4ce9:	11 00                	adc    DWORD PTR [eax],eax
    4ceb:	00 26                	add    BYTE PTR [esi],ah
    4ced:	11 00                	adc    DWORD PTR [eax],eax
    4cef:	00 36                	add    BYTE PTR [esi],dh
    4cf1:	11 00                	adc    DWORD PTR [eax],eax
    4cf3:	00 46 11             	add    BYTE PTR [esi+0x11],al
	...

Disassembly of section .data:

00004cf8 <__data_start>:
    4cf8:	00 00                	add    BYTE PTR [eax],al
	...

00004cfc <__dso_handle>:
    4cfc:	fc                   	cld    
    4cfd:	4c                   	dec    esp
	...

00004d00 <item>:
    4d00:	10 30                	adc    BYTE PTR [eax],dh
    4d02:	00 00                	add    BYTE PTR [eax],al
    4d04:	1e                   	push   ds
    4d05:	30 00                	xor    BYTE PTR [eax],al
    4d07:	00 28                	add    BYTE PTR [eax],ch
    4d09:	30 00                	xor    BYTE PTR [eax],al
    4d0b:	00 34 30             	add    BYTE PTR [eax+esi*1],dh
    4d0e:	00 00                	add    BYTE PTR [eax],al
    4d10:	3c 30                	cmp    al,0x30
	...

00004d14 <locs>:
    4d14:	42                   	inc    edx
    4d15:	30 00                	xor    BYTE PTR [eax],al
    4d17:	00 4f 30             	add    BYTE PTR [edi+0x30],cl
    4d1a:	00 00                	add    BYTE PTR [eax],al
    4d1c:	57                   	push   edi
    4d1d:	30 00                	xor    BYTE PTR [eax],al
    4d1f:	00 69 30             	add    BYTE PTR [ecx+0x30],ch
	...

Disassembly of section .bss:

00004d40 <completed.6950>:
	...

00004d60 <fib>:
	...

00004dc0 <g_locs>:
	...

00004ec0 <g_player>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 44 65 62          	sub    BYTE PTR [ebp+eiz*2+0x62],al
   9:	69 61 6e 20 38 2e 31 	imul   esp,DWORD PTR [ecx+0x6e],0x312e3820
  10:	2e 30 2d 31 32 29 20 	xor    BYTE PTR cs:0x20293231,ch
  17:	38 2e                	cmp    BYTE PTR [esi],ch
  19:	31 2e                	xor    DWORD PTR [esi],ebp
  1b:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	99                   	cdq    
  11:	12 00                	adc    al,BYTE PTR [eax]
  13:	00 d2                	add    dl,dl
  15:	10 00                	adc    BYTE PTR [eax],al
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	9e                   	sahf   
   1:	0b 00                	or     eax,DWORD PTR [eax]
   3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	d9 00                	fld    DWORD PTR [eax]
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0c 1c                	or     al,0x1c
  12:	00 00                	add    BYTE PTR [eax],al
  14:	00 f7                	add    bh,dh
  16:	02 00                	add    al,BYTE PTR [eax]
  18:	00 99 12 00 00 d2    	add    BYTE PTR [ecx-0x2dffffee],bl
  1e:	10 00                	adc    BYTE PTR [eax],al
  20:	00 00                	add    BYTE PTR [eax],al
  22:	00 00                	add    BYTE PTR [eax],al
  24:	00 02                	add    BYTE PTR [edx],al
  26:	29 00                	sub    DWORD PTR [eax],eax
  28:	00 00                	add    BYTE PTR [eax],al
  2a:	02 d8                	add    bl,al
  2c:	17                   	pop    ss
  2d:	31 00                	xor    DWORD PTR [eax],eax
  2f:	00 00                	add    BYTE PTR [eax],al
  31:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
  34:	78 00                	js     36 <_init-0xfca>
  36:	00 00                	add    BYTE PTR [eax],al
  38:	03 01                	add    eax,DWORD PTR [ecx]
  3a:	08 9d 02 00 00 03    	or     BYTE PTR [ebp+0x3000002],bl
  40:	02 07                	add    al,BYTE PTR [edi]
  42:	bf 01 00 00 03       	mov    edi,0x3000001
  47:	04 07                	add    al,0x7
  49:	73 00                	jae    4b <_init-0xfb5>
  4b:	00 00                	add    BYTE PTR [eax],al
  4d:	03 01                	add    eax,DWORD PTR [ecx]
  4f:	06                   	push   es
  50:	9f                   	lahf   
  51:	02 00                	add    al,BYTE PTR [eax]
  53:	00 03                	add    BYTE PTR [ebx],al
  55:	02 05 ab 02 00 00    	add    al,BYTE PTR ds:0x2ab
  5b:	04 04                	add    al,0x4
  5d:	05 69 6e 74 00       	add    eax,0x746e69
  62:	05 5b 00 00 00       	add    eax,0x5b
  67:	03 08                	add    ecx,DWORD PTR [eax]
  69:	05 90 00 00 00       	add    eax,0x90
  6e:	03 08                	add    ecx,DWORD PTR [eax]
  70:	07                   	pop    es
  71:	6e                   	outs   dx,BYTE PTR ds:[esi]
  72:	00 00                	add    BYTE PTR [eax],al
  74:	00 02                	add    BYTE PTR [edx],al
  76:	36 01 00             	add    DWORD PTR ss:[eax],eax
  79:	00 03                	add    BYTE PTR [ebx],al
  7b:	37                   	aaa    
  7c:	25 67 00 00 00       	and    eax,0x67
  81:	02 00                	add    al,BYTE PTR [eax]
  83:	00 00                	add    BYTE PTR [eax],al
  85:	00 03                	add    BYTE PTR [ebx],al
  87:	8c 19                	mov    WORD PTR [ecx],ds
  89:	8d 00                	lea    eax,[eax]
  8b:	00 00                	add    BYTE PTR [eax],al
  8d:	03 04 05 95 00 00 00 	add    eax,DWORD PTR [eax*1+0x95]
  94:	02 5a 02             	add    bl,BYTE PTR [edx+0x2]
  97:	00 00                	add    BYTE PTR [eax],al
  99:	03 8d 1b 75 00 00    	add    ecx,DWORD PTR [ebp+0x751b]
  9f:	00 06                	add    BYTE PTR [esi],al
  a1:	04 07                	add    al,0x7
  a3:	04 a8                	add    al,0xa8
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	00 03                	add    BYTE PTR [ebx],al
  a9:	01 06                	add    DWORD PTR [esi],eax
  ab:	a6                   	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  ac:	02 00                	add    al,BYTE PTR [eax]
  ae:	00 05 a8 00 00 00    	add    BYTE PTR ds:0xa8,al
  b4:	08 6f 02             	or     BYTE PTR [edi+0x2],ch
  b7:	00 00                	add    BYTE PTR [eax],al
  b9:	94                   	xchg   esp,eax
  ba:	04 f5                	add    al,0xf5
  bc:	08 52 02             	or     BYTE PTR [edx+0x2],dl
  bf:	00 00                	add    BYTE PTR [eax],al
  c1:	09 b3 00 00 00 04    	or     DWORD PTR [ebx+0x4000000],esi
  c7:	f6 07 5b             	test   BYTE PTR [edi],0x5b
  ca:	00 00                	add    BYTE PTR [eax],al
  cc:	00 00                	add    BYTE PTR [eax],al
  ce:	09 08                	or     DWORD PTR [eax],ecx
  d0:	00 00                	add    BYTE PTR [eax],al
  d2:	00 04 fb             	add    BYTE PTR [ebx+edi*8],al
  d5:	09 a2 00 00 00 04    	or     DWORD PTR [edx+0x4000000],esp
  db:	09 a6 00 00 00 04    	or     DWORD PTR [esi+0x4000000],esp
  e1:	fc                   	cld    
  e2:	09 a2 00 00 00 08    	or     DWORD PTR [edx+0x8000000],esp
  e8:	09 40 03             	or     DWORD PTR [eax+0x3],eax
  eb:	00 00                	add    BYTE PTR [eax],al
  ed:	04 fd                	add    al,0xfd
  ef:	09 a2 00 00 00 0c    	or     DWORD PTR [edx+0xc000000],esp
  f5:	09 ce                	or     esi,ecx
  f7:	03 00                	add    eax,DWORD PTR [eax]
  f9:	00 04 fe             	add    BYTE PTR [esi+edi*8],al
  fc:	09 a2 00 00 00 10    	or     DWORD PTR [edx+0x10000000],esp
 102:	09 a1 01 00 00 04    	or     DWORD PTR [ecx+0x4000001],esp
 108:	ff 09                	dec    DWORD PTR [ecx]
 10a:	a2 00 00 00 14       	mov    ds:0x14000000,al
 10f:	0a 41 02             	or     al,BYTE PTR [ecx+0x2]
 112:	00 00                	add    BYTE PTR [eax],al
 114:	04 00                	add    al,0x0
 116:	01 09                	add    DWORD PTR [ecx],ecx
 118:	a2 00 00 00 18       	mov    ds:0x18000000,al
 11d:	0a 61 00             	or     ah,BYTE PTR [ecx+0x0]
 120:	00 00                	add    BYTE PTR [eax],al
 122:	04 01                	add    al,0x1
 124:	01 09                	add    DWORD PTR [ecx],ecx
 126:	a2 00 00 00 1c       	mov    ds:0x1c000000,al
 12b:	0a cd                	or     cl,ch
 12d:	00 00                	add    BYTE PTR [eax],al
 12f:	00 04 02             	add    BYTE PTR [edx+eax*1],al
 132:	01 09                	add    DWORD PTR [ecx],ecx
 134:	a2 00 00 00 20       	mov    ds:0x20000000,al
 139:	0a d2                	or     dl,dl
 13b:	01 00                	add    DWORD PTR [eax],eax
 13d:	00 04 04             	add    BYTE PTR [esp+eax*1],al
 140:	01 09                	add    DWORD PTR [ecx],ecx
 142:	a2 00 00 00 24       	mov    ds:0x24000000,al
 147:	0a a4 03 00 00 04 05 	or     ah,BYTE PTR [ebx+eax*1+0x5040000]
 14e:	01 09                	add    DWORD PTR [ecx],ecx
 150:	a2 00 00 00 28       	mov    ds:0x28000000,al
 155:	0a 4e 03             	or     cl,BYTE PTR [esi+0x3]
 158:	00 00                	add    BYTE PTR [eax],al
 15a:	04 06                	add    al,0x6
 15c:	01 09                	add    DWORD PTR [ecx],ecx
 15e:	a2 00 00 00 2c       	mov    ds:0x2c000000,al
 163:	0a 94 02 00 00 04 08 	or     dl,BYTE PTR [edx+eax*1+0x8040000]
 16a:	01 16                	add    DWORD PTR [esi],edx
 16c:	9b                   	fwait
 16d:	02 00                	add    al,BYTE PTR [eax]
 16f:	00 30                	add    BYTE PTR [eax],dh
 171:	0a 15 00 00 00 04    	or     dl,BYTE PTR ds:0x4000000
 177:	0a 01                	or     al,BYTE PTR [ecx]
 179:	14 a1                	adc    al,0xa1
 17b:	02 00                	add    al,BYTE PTR [eax]
 17d:	00 34 0a             	add    BYTE PTR [edx+ecx*1],dh
 180:	9e                   	sahf   
 181:	00 00                	add    BYTE PTR [eax],al
 183:	00 04 0c             	add    BYTE PTR [esp+ecx*1],al
 186:	01 07                	add    DWORD PTR [edi],eax
 188:	5b                   	pop    ebx
 189:	00 00                	add    BYTE PTR [eax],al
 18b:	00 38                	add    BYTE PTR [eax],bh
 18d:	0a ee                	or     ch,dh
 18f:	01 00                	add    DWORD PTR [eax],eax
 191:	00 04 10             	add    BYTE PTR [eax+edx*1],al
 194:	01 07                	add    DWORD PTR [edi],eax
 196:	5b                   	pop    ebx
 197:	00 00                	add    BYTE PTR [eax],al
 199:	00 3c 0a             	add    BYTE PTR [edx+ecx*1],bh
 19c:	46                   	inc    esi
 19d:	01 00                	add    DWORD PTR [eax],eax
 19f:	00 04 12             	add    BYTE PTR [edx+edx*1],al
 1a2:	01 0d 81 00 00 00    	add    DWORD PTR ds:0x81,ecx
 1a8:	40                   	inc    eax
 1a9:	0a 34 03             	or     dh,BYTE PTR [ebx+eax*1]
 1ac:	00 00                	add    BYTE PTR [eax],al
 1ae:	04 16                	add    al,0x16
 1b0:	01 12                	add    DWORD PTR [edx],edx
 1b2:	3f                   	aas    
 1b3:	00 00                	add    BYTE PTR [eax],al
 1b5:	00 44 0a b5          	add    BYTE PTR [edx+ecx*1-0x4b],al
 1b9:	02 00                	add    al,BYTE PTR [eax]
 1bb:	00 04 17             	add    BYTE PTR [edi+edx*1],al
 1be:	01 0f                	add    DWORD PTR [edi],ecx
 1c0:	4d                   	dec    ebp
 1c1:	00 00                	add    BYTE PTR [eax],al
 1c3:	00 46 0a             	add    BYTE PTR [esi+0xa],al
 1c6:	3a 00                	cmp    al,BYTE PTR [eax]
 1c8:	00 00                	add    BYTE PTR [eax],al
 1ca:	04 18                	add    al,0x18
 1cc:	01 08                	add    DWORD PTR [eax],ecx
 1ce:	a7                   	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
 1cf:	02 00                	add    al,BYTE PTR [eax]
 1d1:	00 47 0a             	add    BYTE PTR [edi+0xa],al
 1d4:	e8 01 00 00 04       	call   40001da <_end+0x3ffb1f2>
 1d9:	1c 01                	sbb    al,0x1
 1db:	0f b7 02             	movzx  eax,WORD PTR [edx]
 1de:	00 00                	add    BYTE PTR [eax],al
 1e0:	48                   	dec    eax
 1e1:	0a 4a 01             	or     cl,BYTE PTR [edx+0x1]
 1e4:	00 00                	add    BYTE PTR [eax],al
 1e6:	04 25                	add    al,0x25
 1e8:	01 0f                	add    DWORD PTR [edi],ecx
 1ea:	94                   	xchg   esp,eax
 1eb:	00 00                	add    BYTE PTR [eax],al
 1ed:	00 4c 0a 65          	add    BYTE PTR [edx+ecx*1+0x65],cl
 1f1:	03 00                	add    eax,DWORD PTR [eax]
 1f3:	00 04 2d 01 09 a0 00 	add    BYTE PTR [ebp*1+0xa00901],al
 1fa:	00 00                	add    BYTE PTR [eax],al
 1fc:	54                   	push   esp
 1fd:	0a 6c 03 00          	or     ch,BYTE PTR [ebx+eax*1+0x0]
 201:	00 04 2e             	add    BYTE PTR [esi+ebp*1],al
 204:	01 09                	add    DWORD PTR [ecx],ecx
 206:	a0 00 00 00 58       	mov    al,ds:0x58000000
 20b:	0a 73 03             	or     dh,BYTE PTR [ebx+0x3]
 20e:	00 00                	add    BYTE PTR [eax],al
 210:	04 2f                	add    al,0x2f
 212:	01 09                	add    DWORD PTR [ecx],ecx
 214:	a0 00 00 00 5c       	mov    al,ds:0x5c000000
 219:	0a 7a 03             	or     bh,BYTE PTR [edx+0x3]
 21c:	00 00                	add    BYTE PTR [eax],al
 21e:	04 30                	add    al,0x30
 220:	01 09                	add    DWORD PTR [ecx],ecx
 222:	a0 00 00 00 60       	mov    al,ds:0x60000000
 227:	0a 81 03 00 00 04    	or     al,BYTE PTR [ecx+0x4000003]
 22d:	32 01                	xor    al,BYTE PTR [ecx]
 22f:	0a 25 00 00 00 64    	or     ah,BYTE PTR ds:0x64000000
 235:	0a f6                	or     dh,dh
 237:	01 00                	add    DWORD PTR [eax],eax
 239:	00 04 33             	add    BYTE PTR [ebx+esi*1],al
 23c:	01 07                	add    DWORD PTR [edi],eax
 23e:	5b                   	pop    ebx
 23f:	00 00                	add    BYTE PTR [eax],al
 241:	00 68 0a             	add    BYTE PTR [eax+0xa],ch
 244:	88 03                	mov    BYTE PTR [ebx],al
 246:	00 00                	add    BYTE PTR [eax],al
 248:	04 35                	add    al,0x35
 24a:	01 08                	add    DWORD PTR [eax],ecx
 24c:	bd 02 00 00 6c       	mov    ebp,0x6c000002
 251:	00 02                	add    BYTE PTR [edx],al
 253:	73 02                	jae    257 <_init-0xda9>
 255:	00 00                	add    BYTE PTR [eax],al
 257:	05 07 19 b4 00       	add    eax,0xb41907
 25c:	00 00                	add    BYTE PTR [eax],al
 25e:	0b 64 02 00          	or     esp,DWORD PTR [edx+eax*1+0x0]
 262:	00 04 9a             	add    BYTE PTR [edx+ebx*4],al
 265:	0e                   	push   cs
 266:	08 72 01             	or     BYTE PTR [edx+0x1],dh
 269:	00 00                	add    BYTE PTR [eax],al
 26b:	0c 04                	or     al,0x4
 26d:	a0 08 9b 02 00       	mov    al,ds:0x29b08
 272:	00 09                	add    BYTE PTR [ecx],cl
 274:	f1                   	icebp  
 275:	02 00                	add    al,BYTE PTR [eax]
 277:	00 04 a1             	add    BYTE PTR [ecx+eiz*4],al
 27a:	16                   	push   ss
 27b:	9b                   	fwait
 27c:	02 00                	add    al,BYTE PTR [eax]
 27e:	00 00                	add    BYTE PTR [eax],al
 280:	09 af 01 00 00 04    	or     DWORD PTR [edi+0x4000001],ebp
 286:	a2 14 a1 02 00       	mov    ds:0x2a114,al
 28b:	00 04 09             	add    BYTE PTR [ecx+ecx*1],al
 28e:	89 02                	mov    DWORD PTR [edx],eax
 290:	00 00                	add    BYTE PTR [eax],al
 292:	04 a6                	add    al,0xa6
 294:	07                   	pop    es
 295:	5b                   	pop    ebx
 296:	00 00                	add    BYTE PTR [eax],al
 298:	00 08                	add    BYTE PTR [eax],cl
 29a:	00 07                	add    BYTE PTR [edi],al
 29c:	04 66                	add    al,0x66
 29e:	02 00                	add    al,BYTE PTR [eax]
 2a0:	00 07                	add    BYTE PTR [edi],al
 2a2:	04 b4                	add    al,0xb4
 2a4:	00 00                	add    BYTE PTR [eax],al
 2a6:	00 0c a8             	add    BYTE PTR [eax+ebp*4],cl
 2a9:	00 00                	add    BYTE PTR [eax],al
 2ab:	00 b7 02 00 00 0d    	add    BYTE PTR [edi+0xd000002],dh
 2b1:	31 00                	xor    DWORD PTR [eax],eax
 2b3:	00 00                	add    BYTE PTR [eax],al
 2b5:	00 00                	add    BYTE PTR [eax],al
 2b7:	07                   	pop    es
 2b8:	04 5e                	add    al,0x5e
 2ba:	02 00                	add    al,BYTE PTR [eax]
 2bc:	00 0c a8             	add    BYTE PTR [eax+ebp*4],cl
 2bf:	00 00                	add    BYTE PTR [eax],al
 2c1:	00 cd                	add    ch,cl
 2c3:	02 00                	add    al,BYTE PTR [eax]
 2c5:	00 0d 31 00 00 00    	add    BYTE PTR ds:0x31,cl
 2cb:	27                   	daa    
 2cc:	00 0e                	add    BYTE PTR [esi],cl
 2ce:	93                   	xchg   ebx,eax
 2cf:	01 00                	add    DWORD PTR [eax],eax
 2d1:	00 0f                	add    BYTE PTR [edi],cl
 2d3:	03 02                	add    eax,DWORD PTR [edx]
 2d5:	00 00                	add    BYTE PTR [eax],al
 2d7:	04 3f                	add    al,0x3f
 2d9:	01 1d cd 02 00 00    	add    DWORD PTR ds:0x2cd,ebx
 2df:	0f c4 02 00          	pinsrw mm0,WORD PTR [edx],0x0
 2e3:	00 04 40             	add    BYTE PTR [eax+eax*2],al
 2e6:	01 1d cd 02 00 00    	add    DWORD PTR ds:0x2cd,ebx
 2ec:	0f 51 00             	sqrtps xmm0,XMMWORD PTR [eax]
 2ef:	00 00                	add    BYTE PTR [eax],al
 2f1:	04 41                	add    al,0x41
 2f3:	01 1d cd 02 00 00    	add    DWORD PTR ds:0x2cd,ebx
 2f9:	07                   	pop    es
 2fa:	04 af                	add    al,0xaf
 2fc:	00 00                	add    BYTE PTR [eax],al
 2fe:	00 10                	add    BYTE PTR [eax],dl
 300:	7d 01                	jge    303 <_init-0xcfd>
 302:	00 00                	add    BYTE PTR [eax],al
 304:	06                   	push   es
 305:	87 19                	xchg   DWORD PTR [ecx],ebx
 307:	a1 02 00 00 10       	mov    eax,ds:0x10000002
 30c:	fc                   	cld    
 30d:	01 00                	add    DWORD PTR [eax],eax
 30f:	00 06                	add    BYTE PTR [esi],al
 311:	88 19                	mov    BYTE PTR [ecx],bl
 313:	a1 02 00 00 10       	mov    eax,ds:0x10000002
 318:	91                   	xchg   ecx,eax
 319:	03 00                	add    eax,DWORD PTR [eax]
 31b:	00 06                	add    BYTE PTR [esi],al
 31d:	89 19                	mov    DWORD PTR [ecx],ebx
 31f:	a1 02 00 00 07       	mov    eax,ds:0x7000002
 324:	04 29                	add    al,0x29
 326:	03 00                	add    eax,DWORD PTR [eax]
 328:	00 11                	add    BYTE PTR [ecx],dl
 32a:	0c a2                	or     al,0xa2
 32c:	00 00                	add    BYTE PTR [eax],al
 32e:	00 3a                	add    BYTE PTR [edx],bh
 330:	03 00                	add    eax,DWORD PTR [eax]
 332:	00 0d 31 00 00 00    	add    BYTE PTR ds:0x31,cl
 338:	01 00                	add    DWORD PTR [eax],eax
 33a:	10 c0                	adc    al,al
 33c:	03 00                	add    eax,DWORD PTR [eax]
 33e:	00 07                	add    BYTE PTR [edi],al
 340:	9f                   	lahf   
 341:	0e                   	push   cs
 342:	2a 03                	sub    al,BYTE PTR [ebx]
 344:	00 00                	add    BYTE PTR [eax],al
 346:	10 78 02             	adc    BYTE PTR [eax+0x2],bh
 349:	00 00                	add    BYTE PTR [eax],al
 34b:	07                   	pop    es
 34c:	a0 0c 5b 00 00       	mov    al,ds:0x5b0c
 351:	00 10                	add    BYTE PTR [eax],dl
 353:	85 00                	test   DWORD PTR [eax],eax
 355:	00 00                	add    BYTE PTR [eax],al
 357:	07                   	pop    es
 358:	a1 11 8d 00 00       	mov    eax,ds:0x8d11
 35d:	00 0c f9             	add    BYTE PTR [ecx+edi*8],cl
 360:	02 00                	add    al,BYTE PTR [eax]
 362:	00 6e 03             	add    BYTE PTR [esi+0x3],ch
 365:	00 00                	add    BYTE PTR [eax],al
 367:	0d 31 00 00 00       	or     eax,0x31
 36c:	04 00                	add    al,0x0
 36e:	12 55 02             	adc    dl,BYTE PTR [ebp+0x2]
 371:	00 00                	add    BYTE PTR [eax],al
 373:	01 12                	add    DWORD PTR [edx],edx
 375:	0e                   	push   cs
 376:	5e                   	pop    esi
 377:	03 00                	add    eax,DWORD PTR [eax]
 379:	00 05 03 00 4d 00    	add    BYTE PTR ds:0x4d0003,al
 37f:	00 0c f9             	add    BYTE PTR [ecx+edi*8],cl
 382:	02 00                	add    al,BYTE PTR [eax]
 384:	00 90 03 00 00 0d    	add    BYTE PTR [eax+0xd000003],dl
 38a:	31 00                	xor    DWORD PTR [eax],eax
 38c:	00 00                	add    BYTE PTR [eax],al
 38e:	03 00                	add    eax,DWORD PTR [eax]
 390:	12 8e 01 00 00 01    	adc    cl,BYTE PTR [esi+0x1000001]
 396:	16                   	push   ss
 397:	0e                   	push   cs
 398:	80 03 00             	add    BYTE PTR [ebx],0x0
 39b:	00 05 03 14 4d 00    	add    BYTE PTR ds:0x4d1403,al
 3a1:	00 0c 5b             	add    BYTE PTR [ebx+ebx*2],cl
 3a4:	00 00                	add    BYTE PTR [eax],al
 3a6:	00 b2 03 00 00 0d    	add    BYTE PTR [edx+0xd000003],dh
 3ac:	31 00                	xor    DWORD PTR [eax],eax
 3ae:	00 00                	add    BYTE PTR [eax],al
 3b0:	13 00                	adc    eax,DWORD PTR [eax]
 3b2:	13 66 69             	adc    esp,DWORD PTR [esi+0x69]
 3b5:	62 00                	bound  eax,QWORD PTR [eax]
 3b7:	01 1a                	add    DWORD PTR [edx],ebx
 3b9:	05 a2 03 00 00       	add    eax,0x3a2
 3be:	05 03 60 4d 00       	add    eax,0x4d6003
 3c3:	00 14 6c             	add    BYTE PTR [esp+ebp*2],dl
 3c6:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3c7:	63 00                	arpl   WORD PTR [eax],ax
 3c9:	3c 01                	cmp    al,0x1
 3cb:	21 08                	and    DWORD PTR [eax],ecx
 3cd:	ec                   	in     al,dx
 3ce:	03 00                	add    eax,DWORD PTR [eax]
 3d0:	00 15 71 74 79 00    	add    BYTE PTR ds:0x797471,dl
 3d6:	01 22                	add    DWORD PTR [edx],esp
 3d8:	09 ec                	or     esp,ebp
 3da:	03 00                	add    eax,DWORD PTR [eax]
 3dc:	00 00                	add    BYTE PTR [eax],al
 3de:	09 4f 02             	or     DWORD PTR [edi+0x2],ecx
 3e1:	00 00                	add    BYTE PTR [eax],al
 3e3:	01 23                	add    DWORD PTR [ebx],esp
 3e5:	0c fc                	or     al,0xfc
 3e7:	03 00                	add    eax,DWORD PTR [eax]
 3e9:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
 3ec:	0c 5b                	or     al,0x5b
 3ee:	00 00                	add    BYTE PTR [eax],al
 3f0:	00 fc                	add    ah,bh
 3f2:	03 00                	add    eax,DWORD PTR [eax]
 3f4:	00 0d 31 00 00 00    	add    BYTE PTR ds:0x31,cl
 3fa:	04 00                	add    al,0x0
 3fc:	0c 0c                	or     al,0xc
 3fe:	04 00                	add    al,0x0
 400:	00 0c 04             	add    BYTE PTR [esp+eax*1],cl
 403:	00 00                	add    BYTE PTR [eax],al
 405:	0d 31 00 00 00       	or     eax,0x31
 40a:	04 00                	add    al,0x0
 40c:	03 08                	add    ecx,DWORD PTR [eax]
 40e:	04 3f                	add    al,0x3f
 410:	01 00                	add    DWORD PTR [eax],eax
 412:	00 0c c4             	add    BYTE PTR [esp+eax*8],cl
 415:	03 00                	add    eax,DWORD PTR [eax]
 417:	00 23                	add    BYTE PTR [ebx],ah
 419:	04 00                	add    al,0x0
 41b:	00 0d 31 00 00 00    	add    BYTE PTR ds:0x31,cl
 421:	03 00                	add    eax,DWORD PTR [eax]
 423:	12 8c 01 00 00 01 24 	adc    cl,BYTE PTR [ecx+eax*1+0x24010000]
 42a:	03 13                	add    edx,DWORD PTR [ebx]
 42c:	04 00                	add    al,0x0
 42e:	00 05 03 c0 4d 00    	add    BYTE PTR ds:0x4dc003,al
 434:	00 16                	add    BYTE PTR [esi],dl
 436:	85 01                	test   DWORD PTR [ecx],eax
 438:	00 00                	add    BYTE PTR [eax],al
 43a:	28 01                	sub    BYTE PTR [ecx],al
 43c:	01 26                	add    DWORD PTR [esi],esp
 43e:	08 93 04 00 00 15    	or     BYTE PTR [ebx+0x15000004],dl
 444:	6c                   	ins    BYTE PTR es:[edi],dx
 445:	6f                   	outs   dx,DWORD PTR ds:[esi]
 446:	63 00                	arpl   WORD PTR [eax],ax
 448:	01 27                	add    DWORD PTR [edi],esp
 44a:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 44d:	00 00                	add    BYTE PTR [eax],al
 44f:	00 09                	add    BYTE PTR [ecx],cl
 451:	4c                   	dec    esp
 452:	00 00                	add    BYTE PTR [eax],al
 454:	00 01                	add    BYTE PTR [ecx],al
 456:	28 09                	sub    BYTE PTR [ecx],cl
 458:	5b                   	pop    ebx
 459:	00 00                	add    BYTE PTR [eax],al
 45b:	00 04 09             	add    BYTE PTR [ecx+ecx*1],al
 45e:	23 02                	and    eax,DWORD PTR [edx]
 460:	00 00                	add    BYTE PTR [eax],al
 462:	01 29                	add    DWORD PTR [ecx],ebp
 464:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 467:	00 00                	add    BYTE PTR [eax],al
 469:	08 09                	or     BYTE PTR [ecx],cl
 46b:	d4 02                	aam    0x2
 46d:	00 00                	add    BYTE PTR [eax],al
 46f:	01 2a                	add    DWORD PTR [edx],ebp
 471:	0c 0c                	or     al,0xc
 473:	04 00                	add    al,0x0
 475:	00 0c 09             	add    BYTE PTR [ecx+ecx*1],cl
 478:	c4 03                	les    eax,FWORD PTR [ebx]
 47a:	00 00                	add    BYTE PTR [eax],al
 47c:	01 2b                	add    DWORD PTR [ebx],ebp
 47e:	0a 93 04 00 00 14    	or     dl,BYTE PTR [ebx+0x14000004]
 484:	17                   	pop    ss
 485:	71 74                	jno    4fb <_init-0xb05>
 487:	79 00                	jns    489 <_init-0xb77>
 489:	01 2c 09             	add    DWORD PTR [ecx+ecx*1],ebp
 48c:	ec                   	in     al,dx
 48d:	03 00                	add    eax,DWORD PTR [eax]
 48f:	00 14 01             	add    BYTE PTR [ecx+eax*1],dl
 492:	00 0c a8             	add    BYTE PTR [eax+ebp*4],cl
 495:	00 00                	add    BYTE PTR [eax],al
 497:	00 a3 04 00 00 0d    	add    BYTE PTR [ebx+0xd000004],ah
 49d:	31 00                	xor    DWORD PTR [eax],eax
 49f:	00 00                	add    BYTE PTR [eax],al
 4a1:	ff 00                	inc    DWORD PTR [eax]
 4a3:	12 83 01 00 00 01    	adc    al,BYTE PTR [ebx+0x1000001]
 4a9:	2d 03 35 04 00       	sub    eax,0x43503
 4ae:	00 05 03 c0 4e 00    	add    BYTE PTR ds:0x4ec003,al
 4b4:	00 18                	add    BYTE PTR [eax],bl
 4b6:	c9                   	leave  
 4b7:	03 00                	add    eax,DWORD PTR [eax]
 4b9:	00 01                	add    BYTE PTR [ecx],al
 4bb:	7a 01                	jp     4be <_init-0xb42>
 4bd:	05 5b 00 00 00       	add    eax,0x5b
 4c2:	26 23 00             	and    eax,DWORD PTR es:[eax]
 4c5:	00 45 00             	add    BYTE PTR [ebp+0x0],al
 4c8:	00 00                	add    BYTE PTR [eax],al
 4ca:	01 9c f1 04 00 00 19 	add    DWORD PTR [ecx+esi*8+0x19000004],ebx
 4d1:	bb 03 00 00 01       	mov    ebx,0x1000003
 4d6:	7a 01                	jp     4d9 <_init-0xb27>
 4d8:	0e                   	push   cs
 4d9:	5b                   	pop    ebx
 4da:	00 00                	add    BYTE PTR [eax],al
 4dc:	00 02                	add    BYTE PTR [edx],al
 4de:	91                   	xchg   ecx,eax
 4df:	00 19                	add    BYTE PTR [ecx],bl
 4e1:	98                   	cwde   
 4e2:	03 00                	add    eax,DWORD PTR [eax]
 4e4:	00 01                	add    BYTE PTR [ecx],al
 4e6:	7a 01                	jp     4e9 <_init-0xb17>
 4e8:	1c f1                	sbb    al,0xf1
 4ea:	04 00                	add    al,0x0
 4ec:	00 02                	add    BYTE PTR [edx],al
 4ee:	91                   	xchg   ecx,eax
 4ef:	04 00                	add    al,0x0
 4f1:	07                   	pop    es
 4f2:	04 a2                	add    al,0xa2
 4f4:	00 00                	add    BYTE PTR [eax],al
 4f6:	00 18                	add    BYTE PTR [eax],bl
 4f8:	30 00                	xor    BYTE PTR [eax],al
 4fa:	00 00                	add    BYTE PTR [eax],al
 4fc:	01 4d 01             	add    DWORD PTR [ebp+0x1],ecx
 4ff:	05 5b 00 00 00       	add    eax,0x5b
 504:	95                   	xchg   ebp,eax
 505:	21 00                	and    DWORD PTR [eax],eax
 507:	00 91 01 00 00 01    	add    BYTE PTR [ecx+0x1000001],dl
 50d:	9c                   	pushf  
 50e:	23 05 00 00 1a 6b    	and    eax,DWORD PTR ds:0x6b1a0000
 514:	01 00                	add    DWORD PTR [eax],eax
 516:	00 01                	add    BYTE PTR [ecx],al
 518:	4f                   	dec    edi
 519:	01 0a                	add    DWORD PTR [edx],ecx
 51b:	a8 00                	test   al,0x0
 51d:	00 00                	add    BYTE PTR [eax],al
 51f:	02 91 6f 00 1b ba    	add    dl,BYTE PTR [ecx-0x45e4ff91]
 525:	00 00                	add    BYTE PTR [eax],al
 527:	00 01                	add    BYTE PTR [ecx],al
 529:	26 01 06             	add    DWORD PTR es:[esi],eax
 52c:	7a 1f                	jp     54d <_init-0xab3>
 52e:	00 00                	add    BYTE PTR [eax],al
 530:	1b 02                	sbb    eax,DWORD PTR [edx]
 532:	00 00                	add    BYTE PTR [eax],al
 534:	01 9c dc 05 00 00 1c 	add    DWORD PTR [esp+ebx*8+0x1c000005],ebx
 53b:	70 00                	jo     53d <_init-0xac3>
 53d:	01 26                	add    DWORD PTR [esi],esp
 53f:	01 20                	add    DWORD PTR [eax],esp
 541:	dc 05 00 00 02 91    	fadd   QWORD PTR ds:0x91020000
 547:	00 1d 70 6f 74 00    	add    BYTE PTR ds:0x746f70,bl
 54d:	01 27                	add    DWORD PTR [edi],esp
 54f:	01 0c 0c             	add    DWORD PTR [esp+ecx*1],ecx
 552:	04 00                	add    al,0x0
 554:	00 02                	add    BYTE PTR [edx],al
 556:	91                   	xchg   ecx,eax
 557:	68 1a e4 02 00       	push   0x2e41a
 55c:	00 01                	add    BYTE PTR [ecx],al
 55e:	2e 01 09             	add    DWORD PTR cs:[ecx],ecx
 561:	ec                   	in     al,dx
 562:	03 00                	add    eax,DWORD PTR [eax]
 564:	00 02                	add    BYTE PTR [edx],al
 566:	91                   	xchg   ecx,eax
 567:	44                   	inc    esp
 568:	1a 8e 02 00 00 01    	sbb    cl,BYTE PTR [esi+0x1000002]
 56e:	2f                   	das    
 56f:	01 09                	add    DWORD PTR [ecx],ecx
 571:	5b                   	pop    ebx
 572:	00 00                	add    BYTE PTR [eax],al
 574:	00 02                	add    BYTE PTR [edx],al
 576:	91                   	xchg   ecx,eax
 577:	58                   	pop    eax
 578:	1a b4 03 00 00 01 39 	sbb    dh,BYTE PTR [ebx+eax*1+0x39010000]
 57f:	01 09                	add    DWORD PTR [ecx],ecx
 581:	5b                   	pop    ebx
 582:	00 00                	add    BYTE PTR [eax],al
 584:	00 02                	add    BYTE PTR [edx],al
 586:	91                   	xchg   ecx,eax
 587:	5c                   	pop    esp
 588:	1e                   	push   ds
 589:	04 20                	add    al,0x20
 58b:	00 00                	add    BYTE PTR [eax],al
 58d:	30 00                	xor    BYTE PTR [eax],al
 58f:	00 00                	add    BYTE PTR [eax],al
 591:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 592:	05 00 00 1d 69       	add    eax,0x691d0000
 597:	00 01                	add    BYTE PTR [ecx],al
 599:	31 01                	xor    DWORD PTR [ecx],eax
 59b:	0e                   	push   cs
 59c:	5b                   	pop    ebx
 59d:	00 00                	add    BYTE PTR [eax],al
 59f:	00 02                	add    BYTE PTR [edx],al
 5a1:	91                   	xchg   ecx,eax
 5a2:	64 00 1e             	add    BYTE PTR fs:[esi],bl
 5a5:	4b                   	dec    ebx
 5a6:	20 00                	and    BYTE PTR [eax],al
 5a8:	00 34 00             	add    BYTE PTR [eax+eax*1],dh
 5ab:	00 00                	add    BYTE PTR [eax],al
 5ad:	c0 05 00 00 1d 69 00 	rol    BYTE PTR ds:0x691d0000,0x0
 5b4:	01 35 01 0e 5b 00    	add    DWORD PTR ds:0x5b0e01,esi
 5ba:	00 00                	add    BYTE PTR [eax],al
 5bc:	02 91 60 00 1f ca    	add    dl,BYTE PTR [ecx-0x35e0ffa0]
 5c2:	20 00                	and    BYTE PTR [eax],al
 5c4:	00 77 00             	add    BYTE PTR [edi+0x0],dh
 5c7:	00 00                	add    BYTE PTR [eax],al
 5c9:	1a c4                	sbb    al,ah
 5cb:	03 00                	add    eax,DWORD PTR [eax]
 5cd:	00 01                	add    BYTE PTR [ecx],al
 5cf:	40                   	inc    eax
 5d0:	01 07                	add    DWORD PTR [edi],eax
 5d2:	e2 05                	loop   5d9 <_init-0xa27>
 5d4:	00 00                	add    BYTE PTR [eax],al
 5d6:	03 91 c4 7b 00 00    	add    edx,DWORD PTR [ecx+0x7bc4]
 5dc:	07                   	pop    es
 5dd:	04 35                	add    al,0x35
 5df:	04 00                	add    al,0x0
 5e1:	00 0c a8             	add    BYTE PTR [eax+ebp*4],cl
 5e4:	00 00                	add    BYTE PTR [eax],al
 5e6:	00 f3                	add    bl,dh
 5e8:	05 00 00 20 31       	add    eax,0x31200000
 5ed:	00 00                	add    BYTE PTR [eax],al
 5ef:	00 ff                	add    bh,bh
 5f1:	01 00                	add    DWORD PTR [eax],eax
 5f3:	1b e0                	sbb    esp,eax
 5f5:	01 00                	add    DWORD PTR [eax],eax
 5f7:	00 01                	add    BYTE PTR [ecx],al
 5f9:	0e                   	push   cs
 5fa:	01 06                	add    DWORD PTR [esi],eax
 5fc:	ed                   	in     eax,dx
 5fd:	1d 00 00 8d 01       	sbb    eax,0x18d0000
 602:	00 00                	add    BYTE PTR [eax],al
 604:	01 9c 7d 06 00 00 1c 	add    DWORD PTR [ebp+edi*2+0x1c000006],ebx
 60b:	70 00                	jo     60d <_init-0x9f3>
 60d:	01 0e                	add    DWORD PTR [esi],ecx
 60f:	01 1e                	add    DWORD PTR [esi],ebx
 611:	dc 05 00 00 02 91    	fadd   QWORD PTR ds:0x91020000
 617:	00 1a                	add    BYTE PTR [edx],bl
 619:	b4 03                	mov    ah,0x3
 61b:	00 00                	add    BYTE PTR [eax],al
 61d:	01 13                	add    DWORD PTR [ebx],edx
 61f:	01 09                	add    DWORD PTR [ecx],ecx
 621:	5b                   	pop    ebx
 622:	00 00                	add    BYTE PTR [eax],al
 624:	00 02                	add    BYTE PTR [edx],al
 626:	91                   	xchg   ecx,eax
 627:	68 1d 71 74 79       	push   0x7974711d
 62c:	00 01                	add    BYTE PTR [ecx],al
 62e:	18 01                	sbb    BYTE PTR [ecx],al
 630:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 633:	00 00                	add    BYTE PTR [eax],al
 635:	02 91 64 1d 6c 6f    	add    dl,BYTE PTR [ecx+0x6f6c1d64]
 63b:	63 00                	arpl   WORD PTR [eax],ax
 63d:	01 1d 01 12 7d 06    	add    DWORD PTR ds:0x67d1201,ebx
 643:	00 00                	add    BYTE PTR [eax],al
 645:	02 91 5c 1e 11 1e    	add    dl,BYTE PTR [ecx+0x1e111e5c]
 64b:	00 00                	add    BYTE PTR [eax],al
 64d:	39 00                	cmp    DWORD PTR [eax],eax
 64f:	00 00                	add    BYTE PTR [eax],al
 651:	64 06                	fs push es
 653:	00 00                	add    BYTE PTR [eax],al
 655:	1d 69 00 01 10       	sbb    eax,0x10010069
 65a:	01 0e                	add    DWORD PTR [esi],ecx
 65c:	5b                   	pop    ebx
 65d:	00 00                	add    BYTE PTR [eax],al
 65f:	00 02                	add    BYTE PTR [edx],al
 661:	91                   	xchg   ecx,eax
 662:	6c                   	ins    BYTE PTR es:[edi],dx
 663:	00 1f                	add    BYTE PTR [edi],bl
 665:	37                   	aaa    
 666:	1f                   	pop    ds
 667:	00 00                	add    BYTE PTR [eax],al
 669:	3d 00 00 00 1d       	cmp    eax,0x1d000000
 66e:	69 00 01 21 01 0e    	imul   eax,DWORD PTR [eax],0xe012101
 674:	5b                   	pop    ebx
 675:	00 00                	add    BYTE PTR [eax],al
 677:	00 02                	add    BYTE PTR [edx],al
 679:	91                   	xchg   ecx,eax
 67a:	60                   	pusha  
 67b:	00 00                	add    BYTE PTR [eax],al
 67d:	07                   	pop    es
 67e:	04 c4                	add    al,0xc4
 680:	03 00                	add    eax,DWORD PTR [eax]
 682:	00 21                	add    BYTE PTR [ecx],ah
 684:	9d                   	popf   
 685:	03 00                	add    eax,DWORD PTR [eax]
 687:	00 01                	add    BYTE PTR [ecx],al
 689:	f2 06                	repnz push es
 68b:	12 1c 00             	adc    bl,BYTE PTR [eax+eax*1]
 68e:	00 db                	add    bl,bl
 690:	01 00                	add    DWORD PTR [eax],eax
 692:	00 01                	add    BYTE PTR [ecx],al
 694:	9c                   	pushf  
 695:	35 07 00 00 22       	xor    eax,0x22000007
 69a:	70 00                	jo     69c <_init-0x964>
 69c:	01 f2                	add    edx,esi
 69e:	1d dc 05 00 00       	sbb    eax,0x5dc
 6a3:	02 91 00 23 b4 03    	add    dl,BYTE PTR [ecx+0x3b42300]
 6a9:	00 00                	add    BYTE PTR [eax],al
 6ab:	01 f7                	add    edi,esi
 6ad:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 6b0:	00 00                	add    BYTE PTR [eax],al
 6b2:	02 91 68 23 4f 02    	add    dl,BYTE PTR [ecx+0x24f2368]
 6b8:	00 00                	add    BYTE PTR [eax],al
 6ba:	01 fc                	add    esp,edi
 6bc:	0c 0c                	or     al,0xc
 6be:	04 00                	add    al,0x0
 6c0:	00 02                	add    BYTE PTR [edx],al
 6c2:	91                   	xchg   ecx,eax
 6c3:	58                   	pop    eax
 6c4:	24 71                	and    al,0x71
 6c6:	74 79                	je     741 <_init-0x8bf>
 6c8:	00 01                	add    BYTE PTR [ecx],al
 6ca:	fd                   	std    
 6cb:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 6ce:	00 00                	add    BYTE PTR [eax],al
 6d0:	02 91 64 24 6d 61    	add    dl,BYTE PTR [ecx+0x616d2464]
 6d6:	78 00                	js     6d8 <_init-0x928>
 6d8:	01 fe                	add    esi,edi
 6da:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 6dd:	00 00                	add    BYTE PTR [eax],al
 6df:	02 91 54 23 1c 02    	add    dl,BYTE PTR [ecx+0x21c2354]
 6e5:	00 00                	add    BYTE PTR [eax],al
 6e7:	01 ff                	add    edi,edi
 6e9:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 6ec:	00 00                	add    BYTE PTR [eax],al
 6ee:	02 91 50 1d 6c 6f    	add    dl,BYTE PTR [ecx+0x6f6c1d50]
 6f4:	63 00                	arpl   WORD PTR [eax],ax
 6f6:	01 05 01 12 7d 06    	add    DWORD PTR ds:0x67d1201,eax
 6fc:	00 00                	add    BYTE PTR [eax],al
 6fe:	02 91 4c 1e 36 1c    	add    dl,BYTE PTR [ecx+0x1c361e4c]
 704:	00 00                	add    BYTE PTR [eax],al
 706:	39 00                	cmp    DWORD PTR [eax],eax
 708:	00 00                	add    BYTE PTR [eax],al
 70a:	1c 07                	sbb    al,0x7
 70c:	00 00                	add    BYTE PTR [eax],al
 70e:	24 69                	and    al,0x69
 710:	00 01                	add    BYTE PTR [ecx],al
 712:	f4                   	hlt    
 713:	0e                   	push   cs
 714:	5b                   	pop    ebx
 715:	00 00                	add    BYTE PTR [eax],al
 717:	00 02                	add    BYTE PTR [edx],al
 719:	91                   	xchg   ecx,eax
 71a:	6c                   	ins    BYTE PTR es:[edi],dx
 71b:	00 1f                	add    BYTE PTR [edi],bl
 71d:	aa                   	stos   BYTE PTR es:[edi],al
 71e:	1d 00 00 3d 00       	sbb    eax,0x3d0000
 723:	00 00                	add    BYTE PTR [eax],al
 725:	1d 69 00 01 09       	sbb    eax,0x9010069
 72a:	01 0e                	add    DWORD PTR [esi],ecx
 72c:	5b                   	pop    ebx
 72d:	00 00                	add    BYTE PTR [eax],al
 72f:	00 02                	add    BYTE PTR [edx],al
 731:	91                   	xchg   ecx,eax
 732:	60                   	pusha  
 733:	00 00                	add    BYTE PTR [eax],al
 735:	21 12                	and    DWORD PTR [edx],edx
 737:	02 00                	add    al,BYTE PTR [eax]
 739:	00 01                	add    BYTE PTR [ecx],al
 73b:	e4 06                	in     al,0x6
 73d:	5a                   	pop    edx
 73e:	1b 00                	sbb    eax,DWORD PTR [eax]
 740:	00 b8 00 00 00 01    	add    BYTE PTR [eax+0x1000000],bh
 746:	9c                   	pushf  
 747:	7f 07                	jg     750 <_init-0x8b0>
 749:	00 00                	add    BYTE PTR [eax],al
 74b:	22 70 00             	and    dh,BYTE PTR [eax+0x0]
 74e:	01 e4                	add    esp,esp
 750:	20 dc                	and    ah,bl
 752:	05 00 00 02 91       	add    eax,0x91020000
 757:	00 24 64             	add    BYTE PTR [esp+eiz*2],ah
 75a:	73 74                	jae    7d0 <_init-0x830>
 75c:	00 01                	add    BYTE PTR [ecx],al
 75e:	e9 09 5b 00 00       	jmp    626c <_end+0x1284>
 763:	00 02                	add    BYTE PTR [edx],al
 765:	91                   	xchg   ecx,eax
 766:	68 1f 7e 1b 00       	push   0x1b7e1f
 76b:	00 39                	add    BYTE PTR [ecx],bh
 76d:	00 00                	add    BYTE PTR [eax],al
 76f:	00 24 69             	add    BYTE PTR [ecx+ebp*2],ah
 772:	00 01                	add    BYTE PTR [ecx],al
 774:	e6 0e                	out    0xe,al
 776:	5b                   	pop    ebx
 777:	00 00                	add    BYTE PTR [eax],al
 779:	00 02                	add    BYTE PTR [edx],al
 77b:	91                   	xchg   ecx,eax
 77c:	6c                   	ins    BYTE PTR es:[edi],dx
 77d:	00 00                	add    BYTE PTR [eax],al
 77f:	21 dd                	and    ebp,ebx
 781:	03 00                	add    eax,DWORD PTR [eax]
 783:	00 01                	add    BYTE PTR [ecx],al
 785:	c7 06 19 19 00 00    	mov    DWORD PTR [esi],0x1919
 78b:	41                   	inc    ecx
 78c:	02 00                	add    al,BYTE PTR [eax]
 78e:	00 01                	add    BYTE PTR [ecx],al
 790:	9c                   	pushf  
 791:	d5 07                	aad    0x7
 793:	00 00                	add    BYTE PTR [eax],al
 795:	22 70 00             	and    dh,BYTE PTR [eax+0x0]
 798:	01 c7                	add    edi,eax
 79a:	20 dc                	and    ah,bl
 79c:	05 00 00 02 91       	add    eax,0x91020000
 7a1:	00 1e                	add    BYTE PTR [esi],bl
 7a3:	c2 19 00             	ret    0x19
 7a6:	00 40 00             	add    BYTE PTR [eax+0x0],al
 7a9:	00 00                	add    BYTE PTR [eax],al
 7ab:	bd 07 00 00 24       	mov    ebp,0x24000007
 7b0:	69 00 01 ce 0e 5b    	imul   eax,DWORD PTR [eax],0x5b0ece01
 7b6:	00 00                	add    BYTE PTR [eax],al
 7b8:	00 02                	add    BYTE PTR [edx],al
 7ba:	91                   	xchg   ecx,eax
 7bb:	6c                   	ins    BYTE PTR es:[edi],dx
 7bc:	00 1f                	add    BYTE PTR [edi],bl
 7be:	45                   	inc    ebp
 7bf:	1a 00                	sbb    al,BYTE PTR [eax]
 7c1:	00 72 00             	add    BYTE PTR [edx+0x0],dh
 7c4:	00 00                	add    BYTE PTR [eax],al
 7c6:	24 69                	and    al,0x69
 7c8:	00 01                	add    BYTE PTR [ecx],al
 7ca:	d4 0e                	aam    0xe
 7cc:	5b                   	pop    ebx
 7cd:	00 00                	add    BYTE PTR [eax],al
 7cf:	00 02                	add    BYTE PTR [edx],al
 7d1:	91                   	xchg   ecx,eax
 7d2:	68 00 00 21 c4       	push   0xc4210000
 7d7:	00 00                	add    BYTE PTR [eax],al
 7d9:	00 01                	add    BYTE PTR [ecx],al
 7db:	9f                   	lahf   
 7dc:	06                   	push   es
 7dd:	3b 17                	cmp    edx,DWORD PTR [edi]
 7df:	00 00                	add    BYTE PTR [eax],al
 7e1:	de 01                	fiadd  WORD PTR [ecx]
 7e3:	00 00                	add    BYTE PTR [eax],al
 7e5:	01 9c 61 08 00 00 24 	add    DWORD PTR [ecx+eiz*2+0x24000008],ebx
 7ec:	61                   	popa   
 7ed:	00 01                	add    BYTE PTR [ecx],al
 7ef:	ab                   	stos   DWORD PTR es:[edi],eax
 7f0:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 7f3:	00 00                	add    BYTE PTR [eax],al
 7f5:	02 91 68 24 62 00    	add    dl,BYTE PTR [ecx+0x622468]
 7fb:	01 ac 09 5b 00 00 00 	add    DWORD PTR [ecx+ecx*1+0x5b],ebp
 802:	02 91 64 24 63 00    	add    dl,BYTE PTR [ecx+0x632464]
 808:	01 ad 09 5b 00 00    	add    DWORD PTR [ebp+0x5b09],ebp
 80e:	00 02                	add    BYTE PTR [edx],al
 810:	91                   	xchg   ecx,eax
 811:	5c                   	pop    esp
 812:	1e                   	push   ds
 813:	ab                   	stos   DWORD PTR es:[edi],eax
 814:	17                   	pop    ss
 815:	00 00                	add    BYTE PTR [eax],al
 817:	29 00                	sub    DWORD PTR [eax],eax
 819:	00 00                	add    BYTE PTR [eax],al
 81b:	2d 08 00 00 24       	sub    eax,0x24000008
 820:	69 00 01 a7 0e 5b    	imul   eax,DWORD PTR [eax],0x5b0ea701
 826:	00 00                	add    BYTE PTR [eax],al
 828:	00 02                	add    BYTE PTR [edx],al
 82a:	91                   	xchg   ecx,eax
 82b:	6c                   	ins    BYTE PTR es:[edi],dx
 82c:	00 1e                	add    BYTE PTR [esi],bl
 82e:	e9 17 00 00 34       	jmp    3400084a <_end+0x33ffb862>
 833:	00 00                	add    BYTE PTR [eax],al
 835:	00 48 08             	add    BYTE PTR [eax+0x8],cl
 838:	00 00                	add    BYTE PTR [eax],al
 83a:	24 69                	and    al,0x69
 83c:	00 01                	add    BYTE PTR [ecx],al
 83e:	ae                   	scas   al,BYTE PTR es:[edi]
 83f:	0e                   	push   cs
 840:	5b                   	pop    ebx
 841:	00 00                	add    BYTE PTR [eax],al
 843:	00 02                	add    BYTE PTR [edx],al
 845:	91                   	xchg   ecx,eax
 846:	60                   	pusha  
 847:	00 1f                	add    BYTE PTR [edi],bl
 849:	05 19 00 00 0e       	add    eax,0xe000019
 84e:	00 00                	add    BYTE PTR [eax],al
 850:	00 25 30 00 00 00    	add    BYTE PTR ds:0x30,ah
 856:	01 c4                	add    esp,eax
 858:	0e                   	push   cs
 859:	5b                   	pop    ebx
 85a:	00 00                	add    BYTE PTR [eax],al
 85c:	00 26                	add    BYTE PTR [esi],ah
 85e:	00 00                	add    BYTE PTR [eax],al
 860:	00 21                	add    BYTE PTR [ecx],ah
 862:	63 01                	arpl   WORD PTR [ecx],ax
 864:	00 00                	add    BYTE PTR [eax],al
 866:	01 92 06 06 16 00    	add    DWORD PTR [edx+0x160606],edx
 86c:	00 35 01 00 00 01    	add    BYTE PTR ds:0x1000001,dh
 872:	9c                   	pushf  
 873:	eb 08                	jmp    87d <_init-0x783>
 875:	00 00                	add    BYTE PTR [eax],al
 877:	1f                   	pop    ds
 878:	1a 16                	sbb    dl,BYTE PTR [esi]
 87a:	00 00                	add    BYTE PTR [eax],al
 87c:	18 01                	sbb    BYTE PTR [ecx],al
 87e:	00 00                	add    BYTE PTR [eax],al
 880:	24 69                	and    al,0x69
 882:	00 01                	add    BYTE PTR [ecx],al
 884:	93                   	xchg   ebx,eax
 885:	0e                   	push   cs
 886:	5b                   	pop    ebx
 887:	00 00                	add    BYTE PTR [eax],al
 889:	00 02                	add    BYTE PTR [edx],al
 88b:	91                   	xchg   ecx,eax
 88c:	5c                   	pop    esp
 88d:	1f                   	pop    ds
 88e:	26 16                	es push ss
 890:	00 00                	add    BYTE PTR [eax],al
 892:	fc                   	cld    
 893:	00 00                	add    BYTE PTR [eax],al
 895:	00 24 6a             	add    BYTE PTR [edx+ebp*2],ah
 898:	00 01                	add    BYTE PTR [ecx],al
 89a:	94                   	xchg   esp,eax
 89b:	12 5b 00             	adc    bl,BYTE PTR [ebx+0x0]
 89e:	00 00                	add    BYTE PTR [eax],al
 8a0:	02 91 58 1f 32 16    	add    dl,BYTE PTR [ecx+0x16321f58]
 8a6:	00 00                	add    BYTE PTR [eax],al
 8a8:	e0 00                	loopne 8aa <_init-0x756>
 8aa:	00 00                	add    BYTE PTR [eax],al
 8ac:	23 52 01             	and    edx,DWORD PTR [edx+0x1]
 8af:	00 00                	add    BYTE PTR [eax],al
 8b1:	01 95 14 0c 04 00    	add    DWORD PTR [ebp+0x40c14],edx
 8b7:	00 02                	add    BYTE PTR [edx],al
 8b9:	91                   	xchg   ecx,eax
 8ba:	50                   	push   eax
 8bb:	24 6d                	and    al,0x6d
 8bd:	69 6e 00 01 96 14 0c 	imul   ebp,DWORD PTR [esi+0x0],0xc149601
 8c4:	04 00                	add    al,0x0
 8c6:	00 02                	add    BYTE PTR [edx],al
 8c8:	91                   	xchg   ecx,eax
 8c9:	48                   	dec    eax
 8ca:	24 6d                	and    al,0x6d
 8cc:	61                   	popa   
 8cd:	78 00                	js     8cf <_init-0x731>
 8cf:	01 97 14 0c 04 00    	add    DWORD PTR [edi+0x40c14],edx
 8d5:	00 02                	add    BYTE PTR [edx],al
 8d7:	91                   	xchg   ecx,eax
 8d8:	40                   	inc    eax
 8d9:	24 75                	and    al,0x75
 8db:	00 01                	add    BYTE PTR [ecx],al
 8dd:	98                   	cwde   
 8de:	11 5b 00             	adc    DWORD PTR [ebx+0x0],ebx
 8e1:	00 00                	add    BYTE PTR [eax],al
 8e3:	03 91 bc 7f 00 00    	add    edx,DWORD PTR [ecx+0x7fbc]
 8e9:	00 00                	add    BYTE PTR [eax],al
 8eb:	27                   	daa    
 8ec:	77 69                	ja     957 <_init-0x6a9>
 8ee:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8ef:	00 01                	add    BYTE PTR [ecx],al
 8f1:	85 06                	test   DWORD PTR [esi],eax
 8f3:	5c                   	pop    esp
 8f4:	15 00 00 aa 00       	adc    eax,0xaa0000
 8f9:	00 00                	add    BYTE PTR [eax],al
 8fb:	01 9c 1f 09 00 00 24 	add    DWORD PTR [edi+ebx*1+0x24000009],ebx
 902:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 905:	00 01                	add    BYTE PTR [ecx],al
 907:	86 08                	xchg   BYTE PTR [eax],cl
 909:	e2 05                	loop   910 <_init-0x6f0>
 90b:	00 00                	add    BYTE PTR [eax],al
 90d:	03 91 ec 7b 24 66    	add    edx,DWORD PTR [ecx+0x66247bec]
 913:	00 01                	add    BYTE PTR [ecx],al
 915:	87 09                	xchg   DWORD PTR [ecx],ecx
 917:	1f                   	pop    ds
 918:	09 00                	or     DWORD PTR [eax],eax
 91a:	00 02                	add    BYTE PTR [edx],al
 91c:	91                   	xchg   ecx,eax
 91d:	6c                   	ins    BYTE PTR es:[edi],dx
 91e:	00 07                	add    BYTE PTR [edi],al
 920:	04 52                	add    al,0x52
 922:	02 00                	add    al,BYTE PTR [eax]
 924:	00 28                	add    BYTE PTR [eax],ch
 926:	2a 02                	sub    al,BYTE PTR [edx]
 928:	00 00                	add    BYTE PTR [eax],al
 92a:	01 70 05             	add    DWORD PTR [eax+0x5],esi
 92d:	5b                   	pop    ebx
 92e:	00 00                	add    BYTE PTR [eax],al
 930:	00 f0                	add    al,dh
 932:	14 00                	adc    al,0x0
 934:	00 6c 00 00          	add    BYTE PTR [eax+eax*1+0x0],ch
 938:	00 01                	add    BYTE PTR [ecx],al
 93a:	9c                   	pushf  
 93b:	64 09 00             	or     DWORD PTR fs:[eax],eax
 93e:	00 24 6e             	add    BYTE PTR [esi+ebp*2],ah
 941:	00 01                	add    BYTE PTR [ecx],al
 943:	71 09                	jno    94e <_init-0x6b2>
 945:	5b                   	pop    ebx
 946:	00 00                	add    BYTE PTR [eax],al
 948:	00 02                	add    BYTE PTR [edx],al
 94a:	91                   	xchg   ecx,eax
 94b:	6c                   	ins    BYTE PTR es:[edi],dx
 94c:	1f                   	pop    ds
 94d:	1e                   	push   ds
 94e:	15 00 00 2d 00       	adc    eax,0x2d0000
 953:	00 00                	add    BYTE PTR [eax],al
 955:	24 69                	and    al,0x69
 957:	00 01                	add    BYTE PTR [ecx],al
 959:	74 12                	je     96d <_init-0x693>
 95b:	5b                   	pop    ebx
 95c:	00 00                	add    BYTE PTR [eax],al
 95e:	00 02                	add    BYTE PTR [edx],al
 960:	91                   	xchg   ecx,eax
 961:	68 00 00 28 5b       	push   0x5b280000
 966:	03 00                	add    eax,DWORD PTR [eax]
 968:	00 01                	add    BYTE PTR [ecx],al
 96a:	69 05 5b 00 00 00 ae 	imul   eax,DWORD PTR ds:0x5b,0x14ae
 971:	14 00 00 
 974:	42                   	inc    edx
 975:	00 00                	add    BYTE PTR [eax],al
 977:	00 01                	add    BYTE PTR [ecx],al
 979:	9c                   	pushf  
 97a:	9c                   	pushf  
 97b:	09 00                	or     DWORD PTR [eax],eax
 97d:	00 24 63             	add    BYTE PTR [ebx+eiz*2],ah
 980:	68 00 01 6a 0a       	push   0xa6a0100
 985:	a8 00                	test   al,0x0
 987:	00 00                	add    BYTE PTR [eax],al
 989:	02 91 6e 23 b9 01    	add    dl,BYTE PTR [ecx+0x1b9236e]
 98f:	00 00                	add    BYTE PTR [eax],al
 991:	01 6b 0a             	add    DWORD PTR [ebx+0xa],ebp
 994:	a8 00                	test   al,0x0
 996:	00 00                	add    BYTE PTR [eax],al
 998:	02 91 6f 00 28 59    	add    dl,BYTE PTR [ecx+0x5928006f]
 99e:	01 00                	add    DWORD PTR [eax],eax
 9a0:	00 01                	add    BYTE PTR [ecx],al
 9a2:	61                   	popa   
 9a3:	08 0c 04             	or     BYTE PTR [esp+eax*1],cl
 9a6:	00 00                	add    BYTE PTR [eax],al
 9a8:	63 14 00             	arpl   WORD PTR [eax+eax*1],dx
 9ab:	00 4b 00             	add    BYTE PTR [ebx+0x0],cl
 9ae:	00 00                	add    BYTE PTR [eax],al
 9b0:	01 9c d2 09 00 00 24 	add    DWORD PTR [edx+edx*8+0x24000009],ebx
 9b7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 9b8:	00 01                	add    BYTE PTR [ecx],al
 9ba:	62 0c 0c             	bound  ecx,QWORD PTR [esp+ecx*1]
 9bd:	04 00                	add    al,0x0
 9bf:	00 02                	add    BYTE PTR [edx],al
 9c1:	91                   	xchg   ecx,eax
 9c2:	60                   	pusha  
 9c3:	24 63                	and    al,0x63
 9c5:	68 00 01 63 0a       	push   0xa630100
 9ca:	a8 00                	test   al,0x0
 9cc:	00 00                	add    BYTE PTR [eax],al
 9ce:	02 91 6f 00 28 e9    	add    dl,BYTE PTR [ecx-0x16d7ff91]
 9d4:	02 00                	add    al,BYTE PTR [eax]
 9d6:	00 01                	add    BYTE PTR [ecx],al
 9d8:	59                   	pop    ecx
 9d9:	05 5b 00 00 00       	add    eax,0x5b
 9de:	18 14 00             	sbb    BYTE PTR [eax+eax*1],dl
 9e1:	00 4b 00             	add    BYTE PTR [ebx+0x0],cl
 9e4:	00 00                	add    BYTE PTR [eax],al
 9e6:	01 9c 08 0a 00 00 24 	add    DWORD PTR [eax+ecx*1+0x2400000a],ebx
 9ed:	6e                   	outs   dx,BYTE PTR ds:[esi]
 9ee:	00 01                	add    BYTE PTR [ecx],al
 9f0:	5a                   	pop    edx
 9f1:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 9f4:	00 00                	add    BYTE PTR [eax],al
 9f6:	02 91 68 24 63 68    	add    dl,BYTE PTR [ecx+0x68632468]
 9fc:	00 01                	add    BYTE PTR [ecx],al
 9fe:	5b                   	pop    ebx
 9ff:	0a a8 00 00 00 02    	or     ch,BYTE PTR [eax+0x2000000]
 a05:	91                   	xchg   ecx,eax
 a06:	6f                   	outs   dx,DWORD PTR ds:[esi]
 a07:	00 21                	add    BYTE PTR [ecx],ah
 a09:	dc 02                	fadd   QWORD PTR [edx]
 a0b:	00 00                	add    BYTE PTR [eax],al
 a0d:	01 51 06             	add    DWORD PTR [ecx+0x6],edx
 a10:	b1 13                	mov    cl,0x13
 a12:	00 00                	add    BYTE PTR [eax],al
 a14:	67 00 00             	add    BYTE PTR [bx+si],al
 a17:	00 01                	add    BYTE PTR [ecx],al
 a19:	9c                   	pushf  
 a1a:	59                   	pop    ecx
 a1b:	0a 00                	or     al,BYTE PTR [eax]
 a1d:	00 22                	add    BYTE PTR [edx],ah
 a1f:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 a22:	00 01                	add    BYTE PTR [ecx],al
 a24:	51                   	push   ecx
 a25:	15 a2 00 00 00       	adc    eax,0xa2
 a2a:	02 91 00 22 6e 00    	add    dl,BYTE PTR [ecx+0x6e2200]
 a30:	01 51 1e             	add    DWORD PTR [ecx+0x1e],edx
 a33:	5b                   	pop    ebx
 a34:	00 00                	add    BYTE PTR [eax],al
 a36:	00 02                	add    BYTE PTR [edx],al
 a38:	91                   	xchg   ecx,eax
 a39:	04 24                	add    al,0x24
 a3b:	63 68 00             	arpl   WORD PTR [eax+0x0],bp
 a3e:	01 52 0a             	add    DWORD PTR [edx+0xa],edx
 a41:	a8 00                	test   al,0x0
 a43:	00 00                	add    BYTE PTR [eax],al
 a45:	02 91 6f 24 66 6d    	add    dl,BYTE PTR [ecx+0x6d66246f]
 a4b:	74 00                	je     a4d <_init-0x5b3>
 a4d:	01 53 0a             	add    DWORD PTR [ebx+0xa],edx
 a50:	59                   	pop    ecx
 a51:	0a 00                	or     al,BYTE PTR [eax]
 a53:	00 03                	add    BYTE PTR [ebx],al
 a55:	91                   	xchg   ecx,eax
 a56:	ef                   	out    dx,eax
 a57:	77 00                	ja     a59 <_init-0x5a7>
 a59:	0c a8                	or     al,0xa8
 a5b:	00 00                	add    BYTE PTR [eax],al
 a5d:	00 6a 0a             	add    BYTE PTR [edx+0xa],ch
 a60:	00 00                	add    BYTE PTR [eax],al
 a62:	20 31                	and    BYTE PTR [ecx],dh
 a64:	00 00                	add    BYTE PTR [eax],al
 a66:	00 ff                	add    bh,bh
 a68:	03 00                	add    eax,DWORD PTR [eax]
 a6a:	28 b5 01 00 00 01    	sub    BYTE PTR [ebp+0x1000001],dh
 a70:	4a                   	dec    edx
 a71:	06                   	push   es
 a72:	a8 00                	test   al,0x0
 a74:	00 00                	add    BYTE PTR [eax],al
 a76:	72 13                	jb     a8b <_init-0x575>
 a78:	00 00                	add    BYTE PTR [eax],al
 a7a:	3f                   	aas    
 a7b:	00 00                	add    BYTE PTR [eax],al
 a7d:	00 01                	add    BYTE PTR [ecx],al
 a7f:	9c                   	pushf  
 a80:	a2 0a 00 00 24       	mov    ds:0x2400000a,al
 a85:	63 68 00             	arpl   WORD PTR [eax+0x0],bp
 a88:	01 4b 0a             	add    DWORD PTR [ebx+0xa],ecx
 a8b:	a8 00                	test   al,0x0
 a8d:	00 00                	add    BYTE PTR [eax],al
 a8f:	02 91 6e 23 b9 01    	add    dl,BYTE PTR [ecx+0x1b9236e]
 a95:	00 00                	add    BYTE PTR [eax],al
 a97:	01 4c 0a a8          	add    DWORD PTR [edx+ecx*1-0x58],ecx
 a9b:	00 00                	add    BYTE PTR [eax],al
 a9d:	00 02                	add    BYTE PTR [edx],al
 a9f:	91                   	xchg   ecx,eax
 aa0:	6f                   	outs   dx,DWORD PTR ds:[esi]
 aa1:	00 29                	add    BYTE PTR [ecx],ch
 aa3:	44                   	inc    esp
 aa4:	00 00                	add    BYTE PTR [eax],al
 aa6:	00 01                	add    BYTE PTR [ecx],al
 aa8:	44                   	inc    esp
 aa9:	05 5b 00 00 00       	add    eax,0x5b
 aae:	46                   	inc    esi
 aaf:	13 00                	adc    eax,DWORD PTR [eax]
 ab1:	00 2c 00             	add    BYTE PTR [eax+eax*1],ch
 ab4:	00 00                	add    BYTE PTR [eax],al
 ab6:	01 9c f3 0a 00 00 22 	add    DWORD PTR [ebx+esi*8+0x2200000a],ebx
 abd:	61                   	popa   
 abe:	00 01                	add    BYTE PTR [ecx],al
 ac0:	44                   	inc    esp
 ac1:	19 23                	sbb    DWORD PTR [ebx],esp
 ac3:	03 00                	add    eax,DWORD PTR [eax]
 ac5:	00 02                	add    BYTE PTR [edx],al
 ac7:	91                   	xchg   ecx,eax
 ac8:	00 22                	add    BYTE PTR [edx],ah
 aca:	62 00                	bound  eax,QWORD PTR [eax]
 acc:	01 44 28 23          	add    DWORD PTR [eax+ebp*1+0x23],eax
 ad0:	03 00                	add    eax,DWORD PTR [eax]
 ad2:	00 02                	add    BYTE PTR [edx],al
 ad4:	91                   	xchg   ecx,eax
 ad5:	04 24                	add    al,0x24
 ad7:	69 61 00 01 45 10 f3 	imul   esp,DWORD PTR [ecx+0x0],0xf3104501
 ade:	0a 00                	or     al,BYTE PTR [eax]
 ae0:	00 02                	add    BYTE PTR [edx],al
 ae2:	91                   	xchg   ecx,eax
 ae3:	74 24                	je     b09 <_init-0x4f7>
 ae5:	69 62 00 01 46 10 f3 	imul   esp,DWORD PTR [edx+0x0],0xf3104601
 aec:	0a 00                	or     al,BYTE PTR [eax]
 aee:	00 02                	add    BYTE PTR [edx],al
 af0:	91                   	xchg   ecx,eax
 af1:	70 00                	jo     af3 <_init-0x50d>
 af3:	07                   	pop    es
 af4:	04 62                	add    al,0x62
 af6:	00 00                	add    BYTE PTR [eax],al
 af8:	00 28                	add    BYTE PTR [eax],ch
 afa:	31 02                	xor    DWORD PTR [edx],eax
 afc:	00 00                	add    BYTE PTR [eax],al
 afe:	01 3f                	add    DWORD PTR [edi],edi
 b00:	08 0c 04             	or     BYTE PTR [esp+eax*1],cl
 b03:	00 00                	add    BYTE PTR [eax],al
 b05:	e8 12 00 00 5e       	call   5e000b1c <_end+0x5dffbb34>
 b0a:	00 00                	add    BYTE PTR [eax],al
 b0c:	00 01                	add    BYTE PTR [ecx],al
 b0e:	9c                   	pushf  
 b0f:	3f                   	aas    
 b10:	0b 00                	or     eax,DWORD PTR [eax]
 b12:	00 22                	add    BYTE PTR [edx],ah
 b14:	6d                   	ins    DWORD PTR es:[edi],dx
 b15:	69 6e 00 01 3f 17 0c 	imul   ebp,DWORD PTR [esi+0x0],0xc173f01
 b1c:	04 00                	add    al,0x0
 b1e:	00 02                	add    BYTE PTR [edx],al
 b20:	91                   	xchg   ecx,eax
 b21:	58                   	pop    eax
 b22:	22 6d 61             	and    ch,BYTE PTR [ebp+0x61]
 b25:	78 00                	js     b27 <_init-0x4d9>
 b27:	01 3f                	add    DWORD PTR [edi],edi
 b29:	23 0c 04             	and    ecx,DWORD PTR [esp+eax*1]
 b2c:	00 00                	add    BYTE PTR [eax],al
 b2e:	02 91 50 24 66 00    	add    dl,BYTE PTR [ecx+0x662450]
 b34:	01 40 0c             	add    DWORD PTR [eax+0xc],eax
 b37:	0c 04                	or     al,0x4
 b39:	00 00                	add    BYTE PTR [eax],al
 b3b:	02 91 68 00 2a 32    	add    dl,BYTE PTR [ecx+0x322a0068]
 b41:	02 00                	add    al,BYTE PTR [eax]
 b43:	00 01                	add    BYTE PTR [ecx],al
 b45:	34 05                	xor    al,0x5
 b47:	5b                   	pop    ebx
 b48:	00 00                	add    BYTE PTR [eax],al
 b4a:	00 99 12 00 00 4f    	add    BYTE PTR [ecx+0x4f000012],bl
 b50:	00 00                	add    BYTE PTR [eax],al
 b52:	00 01                	add    BYTE PTR [ecx],al
 b54:	9c                   	pushf  
 b55:	22 6d 69             	and    ch,BYTE PTR [ebp+0x69]
 b58:	6e                   	outs   dx,BYTE PTR ds:[esi]
 b59:	00 01                	add    BYTE PTR [ecx],al
 b5b:	34 10                	xor    al,0x10
 b5d:	5b                   	pop    ebx
 b5e:	00 00                	add    BYTE PTR [eax],al
 b60:	00 02                	add    BYTE PTR [edx],al
 b62:	91                   	xchg   ecx,eax
 b63:	00 22                	add    BYTE PTR [edx],ah
 b65:	6d                   	ins    DWORD PTR es:[edi],dx
 b66:	61                   	popa   
 b67:	78 00                	js     b69 <_init-0x497>
 b69:	01 34 19             	add    DWORD PTR [ecx+ebx*1],esi
 b6c:	5b                   	pop    ebx
 b6d:	00 00                	add    BYTE PTR [eax],al
 b6f:	00 02                	add    BYTE PTR [edx],al
 b71:	91                   	xchg   ecx,eax
 b72:	04 23                	add    al,0x23
 b74:	83 02 00             	add    DWORD PTR [edx],0x0
 b77:	00 01                	add    BYTE PTR [ecx],al
 b79:	35 09 5b 00 00       	xor    eax,0x5b09
 b7e:	00 02                	add    BYTE PTR [edx],al
 b80:	91                   	xchg   ecx,eax
 b81:	6c                   	ins    BYTE PTR es:[edi],dx
 b82:	23 39                	and    edi,DWORD PTR [ecx]
 b84:	02 00                	add    al,BYTE PTR [eax]
 b86:	00 01                	add    BYTE PTR [ecx],al
 b88:	36 09 5b 00          	or     DWORD PTR ss:[ebx+0x0],ebx
 b8c:	00 00                	add    BYTE PTR [eax],al
 b8e:	02 91 68 23 2f 01    	add    dl,BYTE PTR [ecx+0x12f2368]
 b94:	00 00                	add    BYTE PTR [eax],al
 b96:	01 37                	add    DWORD PTR [edi],esi
 b98:	09 5b 00             	or     DWORD PTR [ebx+0x0],ebx
 b9b:	00 00                	add    BYTE PTR [eax],al
 b9d:	02                   	.byte 0x2
 b9e:	91                   	xchg   ecx,eax
 b9f:	64 00 00             	add    BYTE PTR fs:[eax],al

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 06                	adc    al,BYTE PTR [esi]
   f:	10 17                	adc    BYTE PTR [edi],dl
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 16                	add    dl,BYTE PTR [esi]
  15:	00 03                	add    BYTE PTR [ebx],al
  17:	0e                   	push   cs
  18:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  1c:	39 0b                	cmp    DWORD PTR [ebx],ecx
  1e:	49                   	dec    ecx
  1f:	13 00                	adc    eax,DWORD PTR [eax]
  21:	00 03                	add    BYTE PTR [ebx],al
  23:	24 00                	and    al,0x0
  25:	0b 0b                	or     ecx,DWORD PTR [ebx]
  27:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  2a:	0e                   	push   cs
  2b:	00 00                	add    BYTE PTR [eax],al
  2d:	04 24                	add    al,0x24
  2f:	00 0b                	add    BYTE PTR [ebx],cl
  31:	0b 3e                	or     edi,DWORD PTR [esi]
  33:	0b 03                	or     eax,DWORD PTR [ebx]
  35:	08 00                	or     BYTE PTR [eax],al
  37:	00 05 26 00 49 13    	add    BYTE PTR ds:0x13490026,al
  3d:	00 00                	add    BYTE PTR [eax],al
  3f:	06                   	push   es
  40:	0f 00 0b             	str    WORD PTR [ebx]
  43:	0b 00                	or     eax,DWORD PTR [eax]
  45:	00 07                	add    BYTE PTR [edi],al
  47:	0f 00 0b             	str    WORD PTR [ebx]
  4a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  4d:	00 00                	add    BYTE PTR [eax],al
  4f:	08 13                	or     BYTE PTR [ebx],dl
  51:	01 03                	add    DWORD PTR [ebx],eax
  53:	0e                   	push   cs
  54:	0b 0b                	or     ecx,DWORD PTR [ebx]
  56:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  58:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  5a:	39 0b                	cmp    DWORD PTR [ebx],ecx
  5c:	01 13                	add    DWORD PTR [ebx],edx
  5e:	00 00                	add    BYTE PTR [eax],al
  60:	09 0d 00 03 0e 3a    	or     DWORD PTR ds:0x3a0e0300,ecx
  66:	0b 3b                	or     edi,DWORD PTR [ebx]
  68:	0b 39                	or     edi,DWORD PTR [ecx]
  6a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  6d:	38 0b                	cmp    BYTE PTR [ebx],cl
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR ds:0x3a0e0300
  77:	0b 3b                	or     edi,DWORD PTR [ebx]
  79:	05 39 0b 49 13       	add    eax,0x13490b39
  7e:	38 0b                	cmp    BYTE PTR [ebx],cl
  80:	00 00                	add    BYTE PTR [eax],al
  82:	0b 16                	or     edx,DWORD PTR [esi]
  84:	00 03                	add    BYTE PTR [ebx],al
  86:	0e                   	push   cs
  87:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  89:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  8b:	39 0b                	cmp    DWORD PTR [ebx],ecx
  8d:	00 00                	add    BYTE PTR [eax],al
  8f:	0c 01                	or     al,0x1
  91:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
  94:	01 13                	add    DWORD PTR [ebx],edx
  96:	00 00                	add    BYTE PTR [eax],al
  98:	0d 21 00 49 13       	or     eax,0x13490021
  9d:	2f                   	das    
  9e:	0b 00                	or     eax,DWORD PTR [eax]
  a0:	00 0e                	add    BYTE PTR [esi],cl
  a2:	13 00                	adc    eax,DWORD PTR [eax]
  a4:	03 0e                	add    ecx,DWORD PTR [esi]
  a6:	3c 19                	cmp    al,0x19
  a8:	00 00                	add    BYTE PTR [eax],al
  aa:	0f 34                	sysenter 
  ac:	00 03                	add    BYTE PTR [ebx],al
  ae:	0e                   	push   cs
  af:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  b1:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR ds:0x13490b39
  b7:	3f                   	aas    
  b8:	19 3c 19             	sbb    DWORD PTR [ecx+ebx*1],edi
  bb:	00 00                	add    BYTE PTR [eax],al
  bd:	10 34 00             	adc    BYTE PTR [eax+eax*1],dh
  c0:	03 0e                	add    ecx,DWORD PTR [esi]
  c2:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  c4:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  c6:	39 0b                	cmp    DWORD PTR [ebx],ecx
  c8:	49                   	dec    ecx
  c9:	13 3f                	adc    edi,DWORD PTR [edi]
  cb:	19 3c 19             	sbb    DWORD PTR [ecx+ebx*1],edi
  ce:	00 00                	add    BYTE PTR [eax],al
  d0:	11 26                	adc    DWORD PTR [esi],esp
  d2:	00 00                	add    BYTE PTR [eax],al
  d4:	00 12                	add    BYTE PTR [edx],dl
  d6:	34 00                	xor    al,0x0
  d8:	03 0e                	add    ecx,DWORD PTR [esi]
  da:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  dc:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  de:	39 0b                	cmp    DWORD PTR [ebx],ecx
  e0:	49                   	dec    ecx
  e1:	13 3f                	adc    edi,DWORD PTR [edi]
  e3:	19 02                	sbb    DWORD PTR [edx],eax
  e5:	18 00                	sbb    BYTE PTR [eax],al
  e7:	00 13                	add    BYTE PTR [ebx],dl
  e9:	34 00                	xor    al,0x0
  eb:	03 08                	add    ecx,DWORD PTR [eax]
  ed:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  ef:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  f1:	39 0b                	cmp    DWORD PTR [ebx],ecx
  f3:	49                   	dec    ecx
  f4:	13 3f                	adc    edi,DWORD PTR [edi]
  f6:	19 02                	sbb    DWORD PTR [edx],eax
  f8:	18 00                	sbb    BYTE PTR [eax],al
  fa:	00 14 13             	add    BYTE PTR [ebx+edx*1],dl
  fd:	01 03                	add    DWORD PTR [ebx],eax
  ff:	08 0b                	or     BYTE PTR [ebx],cl
 101:	0b 3a                	or     edi,DWORD PTR [edx]
 103:	0b 3b                	or     edi,DWORD PTR [ebx]
 105:	0b 39                	or     edi,DWORD PTR [ecx]
 107:	0b 01                	or     eax,DWORD PTR [ecx]
 109:	13 00                	adc    eax,DWORD PTR [eax]
 10b:	00 15 0d 00 03 08    	add    BYTE PTR ds:0x803000d,dl
 111:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 113:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 115:	39 0b                	cmp    DWORD PTR [ebx],ecx
 117:	49                   	dec    ecx
 118:	13 38                	adc    edi,DWORD PTR [eax]
 11a:	0b 00                	or     eax,DWORD PTR [eax]
 11c:	00 16                	add    BYTE PTR [esi],dl
 11e:	13 01                	adc    eax,DWORD PTR [ecx]
 120:	03 0e                	add    ecx,DWORD PTR [esi]
 122:	0b 05 3a 0b 3b 0b    	or     eax,DWORD PTR ds:0xb3b0b3a
 128:	39 0b                	cmp    DWORD PTR [ebx],ecx
 12a:	01 13                	add    DWORD PTR [ebx],edx
 12c:	00 00                	add    BYTE PTR [eax],al
 12e:	17                   	pop    ss
 12f:	0d 00 03 08 3a       	or     eax,0x3a080300
 134:	0b 3b                	or     edi,DWORD PTR [ebx]
 136:	0b 39                	or     edi,DWORD PTR [ecx]
 138:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 13b:	38 05 00 00 18 2e    	cmp    BYTE PTR ds:0x2e180000,al
 141:	01 3f                	add    DWORD PTR [edi],edi
 143:	19 03                	sbb    DWORD PTR [ebx],eax
 145:	0e                   	push   cs
 146:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 148:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR ds:0x19270b39
 14e:	49                   	dec    ecx
 14f:	13 11                	adc    edx,DWORD PTR [ecx]
 151:	01 12                	add    DWORD PTR [edx],edx
 153:	06                   	push   es
 154:	40                   	inc    eax
 155:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 15b:	00 00                	add    BYTE PTR [eax],al
 15d:	19 05 00 03 0e 3a    	sbb    DWORD PTR ds:0x3a0e0300,eax
 163:	0b 3b                	or     edi,DWORD PTR [ebx]
 165:	05 39 0b 49 13       	add    eax,0x13490b39
 16a:	02 18                	add    bl,BYTE PTR [eax]
 16c:	00 00                	add    BYTE PTR [eax],al
 16e:	1a 34 00             	sbb    dh,BYTE PTR [eax+eax*1]
 171:	03 0e                	add    ecx,DWORD PTR [esi]
 173:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 175:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR ds:0x13490b39
 17b:	02 18                	add    bl,BYTE PTR [eax]
 17d:	00 00                	add    BYTE PTR [eax],al
 17f:	1b 2e                	sbb    ebp,DWORD PTR [esi]
 181:	01 3f                	add    DWORD PTR [edi],edi
 183:	19 03                	sbb    DWORD PTR [ebx],eax
 185:	0e                   	push   cs
 186:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 188:	3b 05 39 0b 27 19    	cmp    eax,DWORD PTR ds:0x19270b39
 18e:	11 01                	adc    DWORD PTR [ecx],eax
 190:	12 06                	adc    al,BYTE PTR [esi]
 192:	40                   	inc    eax
 193:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 199:	00 00                	add    BYTE PTR [eax],al
 19b:	1c 05                	sbb    al,0x5
 19d:	00 03                	add    BYTE PTR [ebx],al
 19f:	08 3a                	or     BYTE PTR [edx],bh
 1a1:	0b 3b                	or     edi,DWORD PTR [ebx]
 1a3:	05 39 0b 49 13       	add    eax,0x13490b39
 1a8:	02 18                	add    bl,BYTE PTR [eax]
 1aa:	00 00                	add    BYTE PTR [eax],al
 1ac:	1d 34 00 03 08       	sbb    eax,0x8030034
 1b1:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 1b3:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR ds:0x13490b39
 1b9:	02 18                	add    bl,BYTE PTR [eax]
 1bb:	00 00                	add    BYTE PTR [eax],al
 1bd:	1e                   	push   ds
 1be:	0b 01                	or     eax,DWORD PTR [ecx]
 1c0:	11 01                	adc    DWORD PTR [ecx],eax
 1c2:	12 06                	adc    al,BYTE PTR [esi]
 1c4:	01 13                	add    DWORD PTR [ebx],edx
 1c6:	00 00                	add    BYTE PTR [eax],al
 1c8:	1f                   	pop    ds
 1c9:	0b 01                	or     eax,DWORD PTR [ecx]
 1cb:	11 01                	adc    DWORD PTR [ecx],eax
 1cd:	12 06                	adc    al,BYTE PTR [esi]
 1cf:	00 00                	add    BYTE PTR [eax],al
 1d1:	20 21                	and    BYTE PTR [ecx],ah
 1d3:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
 1d6:	2f                   	das    
 1d7:	05 00 00 21 2e       	add    eax,0x2e210000
 1dc:	01 3f                	add    DWORD PTR [edi],edi
 1de:	19 03                	sbb    DWORD PTR [ebx],eax
 1e0:	0e                   	push   cs
 1e1:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 1e3:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 1e5:	39 0b                	cmp    DWORD PTR [ebx],ecx
 1e7:	27                   	daa    
 1e8:	19 11                	sbb    DWORD PTR [ecx],edx
 1ea:	01 12                	add    DWORD PTR [edx],edx
 1ec:	06                   	push   es
 1ed:	40                   	inc    eax
 1ee:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 1f4:	00 00                	add    BYTE PTR [eax],al
 1f6:	22 05 00 03 08 3a    	and    al,BYTE PTR ds:0x3a080300
 1fc:	0b 3b                	or     edi,DWORD PTR [ebx]
 1fe:	0b 39                	or     edi,DWORD PTR [ecx]
 200:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 203:	02 18                	add    bl,BYTE PTR [eax]
 205:	00 00                	add    BYTE PTR [eax],al
 207:	23 34 00             	and    esi,DWORD PTR [eax+eax*1]
 20a:	03 0e                	add    ecx,DWORD PTR [esi]
 20c:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 20e:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 210:	39 0b                	cmp    DWORD PTR [ebx],ecx
 212:	49                   	dec    ecx
 213:	13 02                	adc    eax,DWORD PTR [edx]
 215:	18 00                	sbb    BYTE PTR [eax],al
 217:	00 24 34             	add    BYTE PTR [esp+esi*1],ah
 21a:	00 03                	add    BYTE PTR [ebx],al
 21c:	08 3a                	or     BYTE PTR [edx],bh
 21e:	0b 3b                	or     edi,DWORD PTR [ebx]
 220:	0b 39                	or     edi,DWORD PTR [ecx]
 222:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
 225:	02 18                	add    bl,BYTE PTR [eax]
 227:	00 00                	add    BYTE PTR [eax],al
 229:	25 2e 01 3f 19       	and    eax,0x193f012e
 22e:	03 0e                	add    ecx,DWORD PTR [esi]
 230:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 232:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 234:	39 0b                	cmp    DWORD PTR [ebx],ecx
 236:	49                   	dec    ecx
 237:	13 3c 19             	adc    edi,DWORD PTR [ecx+ebx*1]
 23a:	00 00                	add    BYTE PTR [eax],al
 23c:	26 18 00             	sbb    BYTE PTR es:[eax],al
 23f:	00 00                	add    BYTE PTR [eax],al
 241:	27                   	daa    
 242:	2e 01 3f             	add    DWORD PTR cs:[edi],edi
 245:	19 03                	sbb    DWORD PTR [ebx],eax
 247:	08 3a                	or     BYTE PTR [edx],bh
 249:	0b 3b                	or     edi,DWORD PTR [ebx]
 24b:	0b 39                	or     edi,DWORD PTR [ecx]
 24d:	0b 27                	or     esp,DWORD PTR [edi]
 24f:	19 11                	sbb    DWORD PTR [ecx],edx
 251:	01 12                	add    DWORD PTR [edx],edx
 253:	06                   	push   es
 254:	40                   	inc    eax
 255:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 25b:	00 00                	add    BYTE PTR [eax],al
 25d:	28 2e                	sub    BYTE PTR [esi],ch
 25f:	01 3f                	add    DWORD PTR [edi],edi
 261:	19 03                	sbb    DWORD PTR [ebx],eax
 263:	0e                   	push   cs
 264:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 266:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 268:	39 0b                	cmp    DWORD PTR [ebx],ecx
 26a:	27                   	daa    
 26b:	19 49 13             	sbb    DWORD PTR [ecx+0x13],ecx
 26e:	11 01                	adc    DWORD PTR [ecx],eax
 270:	12 06                	adc    al,BYTE PTR [esi]
 272:	40                   	inc    eax
 273:	18 96 42 19 01 13    	sbb    BYTE PTR [esi+0x13011942],dl
 279:	00 00                	add    BYTE PTR [eax],al
 27b:	29 2e                	sub    DWORD PTR [esi],ebp
 27d:	01 3f                	add    DWORD PTR [edi],edi
 27f:	19 03                	sbb    DWORD PTR [ebx],eax
 281:	0e                   	push   cs
 282:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 284:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 286:	39 0b                	cmp    DWORD PTR [ebx],ecx
 288:	27                   	daa    
 289:	19 49 13             	sbb    DWORD PTR [ecx+0x13],ecx
 28c:	11 01                	adc    DWORD PTR [ecx],eax
 28e:	12 06                	adc    al,BYTE PTR [esi]
 290:	40                   	inc    eax
 291:	18 97 42 19 01 13    	sbb    BYTE PTR [edi+0x13011942],dl
 297:	00 00                	add    BYTE PTR [eax],al
 299:	2a 2e                	sub    ch,BYTE PTR [esi]
 29b:	01 3f                	add    DWORD PTR [edi],edi
 29d:	19 03                	sbb    DWORD PTR [ebx],eax
 29f:	0e                   	push   cs
 2a0:	3a 0b                	cmp    cl,BYTE PTR [ebx]
 2a2:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 2a4:	39 0b                	cmp    DWORD PTR [ebx],ecx
 2a6:	27                   	daa    
 2a7:	19 49 13             	sbb    DWORD PTR [ecx+0x13],ecx
 2aa:	11 01                	adc    DWORD PTR [ecx],eax
 2ac:	12 06                	adc    al,BYTE PTR [esi]
 2ae:	40                   	inc    eax
 2af:	18 96 42 19 00 00    	sbb    BYTE PTR [esi+0x1942],dl
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	8f 07                	pop    DWORD PTR [edi]
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	e1 00                	loope  8 <_init-0xff8>
   8:	00 00                	add    BYTE PTR [eax],al
   a:	01 01                	add    DWORD PTR [ecx],eax
   c:	fb                   	sti    
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	2f                   	das    
  1c:	75 73                	jne    91 <_init-0xf6f>
  1e:	72 2f                	jb     4f <_init-0xfb1>
  20:	6c                   	ins    BYTE PTR es:[edi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0xf9e>
  2a:	36 5f                	ss pop edi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[edi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0xf98>
  39:	38 2f                	cmp    BYTE PTR [edi],ch
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [edi],ch
  44:	75 73                	jne    b9 <_init-0xf47>
  46:	72 2f                	jb     77 <_init-0xf89>
  48:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  4f:	2f                   	das    
  50:	69 33 38 36 2d 6c    	imul   esi,DWORD PTR [ebx],0x6c2d3638
  56:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  5d:	75 2f                	jne    8e <_init-0xf72>
  5f:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  62:	73 00                	jae    64 <_init-0xf9c>
  64:	2f                   	das    
  65:	75 73                	jne    da <_init-0xf26>
  67:	72 2f                	jb     98 <_init-0xf68>
  69:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  70:	2f                   	das    
  71:	69 33 38 36 2d 6c    	imul   esi,DWORD PTR [ebx],0x6c2d3638
  77:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  7e:	75 2f                	jne    af <_init-0xf51>
  80:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  83:	73 2f                	jae    b4 <_init-0xf4c>
  85:	74 79                	je     100 <_init-0xf00>
  87:	70 65                	jo     ee <_init-0xf12>
  89:	73 00                	jae    8b <_init-0xf75>
  8b:	2f                   	das    
  8c:	75 73                	jne    101 <_init-0xeff>
  8e:	72 2f                	jb     bf <_init-0xf41>
  90:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  97:	00 00                	add    BYTE PTR [eax],al
  99:	73 70                	jae    10b <_init-0xef5>
  9b:	6c                   	ins    BYTE PTR es:[edi],dx
  9c:	6f                   	outs   dx,DWORD PTR ds:[esi]
  9d:	69 74 77 61 72 7a 2e 	imul   esi,DWORD PTR [edi+esi*2+0x61],0x632e7a72
  a4:	63 
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	00 00                	add    BYTE PTR [eax],al
  a9:	73 74                	jae    11f <_init-0xee1>
  ab:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
  b2:	01 
  b3:	00 00                	add    BYTE PTR [eax],al
  b5:	74 79                	je     130 <_init-0xed0>
  b7:	70 65                	jo     11e <_init-0xee2>
  b9:	73 2e                	jae    e9 <_init-0xf17>
  bb:	68 00 02 00 00       	push   0x200
  c0:	6c                   	ins    BYTE PTR es:[edi],dx
  c1:	69 62 69 6f 2e 68 00 	imul   esp,DWORD PTR [edx+0x69],0x682e6f
  c8:	02 00                	add    al,BYTE PTR [eax]
  ca:	00 46 49             	add    BYTE PTR [esi+0x49],al
  cd:	4c                   	dec    esp
  ce:	45                   	inc    ebp
  cf:	2e 68 00 03 00 00    	cs push 0x300
  d5:	73 74                	jae    14b <_init-0xeb5>
  d7:	64 69 6f 2e 68 00 04 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x40068
  de:	00 
  df:	00 74 69 6d          	add    BYTE PTR [ecx+ebp*2+0x6d],dh
  e3:	65 2e 68 00 04 00 00 	gs cs push 0x400
  ea:	00 05 1e 00 05 02    	add    BYTE PTR ds:0x205001e,al
  f0:	99                   	cdq    
  f1:	12 00                	adc    al,BYTE PTR [eax]
  f3:	00 03                	add    BYTE PTR [ebx],al
  f5:	33 01                	xor    eax,DWORD PTR [ecx]
  f7:	05 09 08 21 05       	add    eax,0x5210809
  fc:	25 91 05 09 66       	and    eax,0x66090591
 101:	05 12 00 02 04       	add    eax,0x4020012
 106:	01 af 05 10 00 02    	add    DWORD PTR [edi+0x2001005],ebp
 10c:	04 01                	add    al,0x1
 10e:	58                   	pop    eax
 10f:	05 05 00 02 04       	add    eax,0x4020005
 114:	01 75 05             	add    DWORD PTR [ebp+0x5],esi
 117:	0c 83                	or     al,0x83
 119:	67 05 01 3d 05 28    	addr16 add eax,0x28053d01
 11f:	68 05 18 02 2a       	push   0x2a021805
 124:	13 05 10 82 05 1f    	adc    eax,DWORD PTR ds:0x1f058210
 12a:	3c 05                	cmp    al,0x5
 12c:	0c 82                	or     al,0x82
 12e:	05 10 3d 05 14       	add    eax,0x14053d10
 133:	3c 05                	cmp    al,0x5
 135:	1b 3c 05 14 82 05 10 	sbb    edi,DWORD PTR [eax*1+0x10058214]
 13c:	2e 05 01 83 05 2b    	cs add eax,0x2b058301
 142:	68 05 10 f3 67       	push   0x67f31005
 147:	05 0c 67 05 13       	add    eax,0x1305670c
 14c:	58                   	pop    eax
 14d:	05 11 58 05 01       	add    eax,0x1055811
 152:	4b                   	dec    ebx
 153:	05 16 30 05 12       	add    eax,0x12053016
 158:	08 22                	or     BYTE PTR [edx],ah
 15a:	05 0a 58 05 0b       	add    eax,0xb05580a
 15f:	3d 05 12 00 02       	cmp    eax,0x2001205
 164:	04 03                	add    al,0x3
 166:	20 05 10 00 02 04    	and    BYTE PTR ds:0x4020010,al
 16c:	03 58 05             	add    ebx,DWORD PTR [eax+0x5]
 16f:	0b 00                	or     eax,DWORD PTR [eax]
 171:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 174:	3c 05                	cmp    al,0x5
 176:	1d 00 02 04 01       	sbb    eax,0x1040200
 17b:	66 05 2a 00          	add    ax,0x2a
 17f:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 182:	66 05 0c 67          	add    ax,0x670c
 186:	05 01 4b 05 21       	add    eax,0x21054b01
 18b:	68 05 05 08 4d       	push   0x4d080505
 190:	08 ad 05 0b 08 4b    	or     BYTE PTR [ebp+0x4b080b05],ch
 196:	05 12 00 02 04       	add    eax,0x4020012
 19b:	03 20                	add    esp,DWORD PTR [eax]
 19d:	05 10 00 02 04       	add    eax,0x4020010
 1a2:	03 58 05             	add    ebx,DWORD PTR [eax+0x5]
 1a5:	0b 00                	or     eax,DWORD PTR [eax]
 1a7:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 1aa:	3c 05                	cmp    al,0x5
 1ac:	1d 00 02 04 01       	sbb    eax,0x1040200
 1b1:	66 05 2a 00          	add    ax,0x2a
 1b5:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 1b8:	66 05 01 67          	add    ax,0x6701
 1bc:	05 13 68 05 05       	add    eax,0x5056813
 1c1:	08 23                	or     BYTE PTR [ebx],ah
 1c3:	05 0b 08 59 05       	add    eax,0x559080b
 1c8:	12 00                	adc    al,BYTE PTR [eax]
 1ca:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 1cd:	20 05 10 00 02 04    	and    BYTE PTR ds:0x4020010,al
 1d3:	03 58 05             	add    ebx,DWORD PTR [eax+0x5]
 1d6:	0b 00                	or     eax,DWORD PTR [eax]
 1d8:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 1db:	3c 05                	cmp    al,0x5
 1dd:	1d 00 02 04 01       	sbb    eax,0x1040200
 1e2:	66 05 2a 00          	add    ax,0x2a
 1e6:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 1e9:	66 05 0c 67          	add    ax,0x670c
 1ed:	05 01 3d 05 18       	add    eax,0x18053d01
 1f2:	5a                   	pop    edx
 1f3:	05 05 08 23 05       	add    eax,0x5230805
 1f8:	0b 08                	or     ecx,DWORD PTR [eax]
 1fa:	59                   	pop    ecx
 1fb:	05 12 00 02 04       	add    eax,0x4020012
 200:	03 20                	add    esp,DWORD PTR [eax]
 202:	05 10 00 02 04       	add    eax,0x4020010
 207:	03 58 05             	add    ebx,DWORD PTR [eax+0x5]
 20a:	0b 00                	or     eax,DWORD PTR [eax]
 20c:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 20f:	3c 05                	cmp    al,0x5
 211:	1d 00 02 04 01       	sbb    eax,0x1040200
 216:	66 05 2a 00          	add    ax,0x2a
 21a:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 21d:	66 05 0c 67          	add    ax,0x670c
 221:	05 01 3d 05 15       	add    eax,0x15053d01
 226:	5a                   	pop    edx
 227:	05 12 08 22 05       	add    eax,0x5220812
 22c:	0a 58 05             	or     bl,BYTE PTR [eax+0x5]
 22f:	0b 3d 05 12 00 02    	or     edi,DWORD PTR ds:0x2001205
 235:	04 03                	add    al,0x3
 237:	20 05 10 00 02 04    	and    BYTE PTR ds:0x4020010,al
 23d:	03 58 05             	add    ebx,DWORD PTR [eax+0x5]
 240:	0b 00                	or     eax,DWORD PTR [eax]
 242:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 245:	3c 05                	cmp    al,0x5
 247:	1d 00 02 04 01       	sbb    eax,0x1040200
 24c:	66 05 2a 00          	add    ax,0x2a
 250:	02 04 02             	add    al,BYTE PTR [edx+eax*1]
 253:	66 05 12 67          	add    ax,0x6712
 257:	05 01 75 05 12       	add    eax,0x12057501
 25c:	68 05 0d 08 23       	push   0x23080d05
 261:	05 12 08 ad 05       	add    eax,0x5ad0812
 266:	09 74 05 19          	or     DWORD PTR [ebp+eax*1+0x19],esi
 26a:	2f                   	das    
 26b:	05 10 9e 05 13       	add    eax,0x13059e10
 270:	59                   	pop    ecx
 271:	05 11 75 05 29       	add    eax,0x29057511
 276:	00 02                	add    BYTE PTR [edx],al
 278:	04 02                	add    al,0x2
 27a:	2b 05 1b 00 02 04    	sub    eax,DWORD PTR ds:0x402001b
 280:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 283:	09 00                	or     DWORD PTR [eax],eax
 285:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 288:	3c 05                	cmp    al,0x5
 28a:	0c 5e                	or     al,0x5e
 28c:	05 0b 03 79 66       	add    eax,0x6679030b
 291:	05 0d 36 05 0c       	add    eax,0xc05360d
 296:	23 05 01 3d 05 10    	and    eax,DWORD PTR ds:0x10053d01
 29c:	5e                   	pop    esi
 29d:	05 08 08 59 05       	add    eax,0x5590808
 2a2:	0d 08 3d 05 06       	or     eax,0x6053d08
 2a7:	08 ad 05 05 67 08    	or     BYTE PTR [ebp+0x8670505],ch
 2ad:	21 05 03 30 08 83    	and    DWORD PTR ds:0x83083003,eax
 2b3:	08 21                	or     BYTE PTR [ecx],ah
 2b5:	d7                   	xlat   BYTE PTR ds:[ebx]
 2b6:	05 01 9f 05 14       	add    eax,0x14059f01
 2bb:	76 05                	jbe    2c2 <_init-0xd3e>
 2bd:	0e                   	push   cs
 2be:	08 3d 05 05 74 05    	or     BYTE PTR ds:0x5740505,bh
 2c4:	12 59 05             	adc    bl,BYTE PTR [ecx+0x5]
 2c7:	09 74 05 1d          	or     DWORD PTR [ebp+eax*1+0x1d],esi
 2cb:	00 02                	add    BYTE PTR [edx],al
 2cd:	04 03                	add    al,0x3
 2cf:	59                   	pop    ecx
 2d0:	05 1c 00 02 04       	add    eax,0x402001c
 2d5:	03 02                	add    eax,DWORD PTR [edx]
 2d7:	25 13 05 1f 00       	and    eax,0x1f0513
 2dc:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 2df:	74 05                	je     2e6 <_init-0xd1a>
 2e1:	14 00                	adc    al,0x0
 2e3:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 2e6:	ac                   	lods   al,BYTE PTR ds:[esi]
 2e7:	05 1c 00 02 04       	add    eax,0x402001c
 2ec:	03 3d 05 1e 00 02    	add    edi,DWORD PTR ds:0x2001e05
 2f2:	04 03                	add    al,0x3
 2f4:	74 05                	je     2fb <_init-0xd05>
 2f6:	21 00                	and    DWORD PTR [eax],eax
 2f8:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 2fb:	4a                   	dec    edx
 2fc:	05 14 00 02 04       	add    eax,0x4020014
 301:	03 ac 05 21 00 02 04 	add    ebp,DWORD PTR [ebp+eax*1+0x4020021]
 308:	03 3d 05 11 00 02    	add    edi,DWORD PTR ds:0x2001105
 30e:	04 03                	add    al,0x3
 310:	ba 05 1e 00 02       	mov    edx,0x2001e05
 315:	04 03                	add    al,0x3
 317:	3d 05 24 00 02       	cmp    eax,0x2002405
 31c:	04 03                	add    al,0x3
 31e:	66 05 22 00          	add    ax,0x22
 322:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 325:	08 3c 05 39 00 02 04 	or     BYTE PTR [eax*1+0x4020039],bh
 32c:	03 08                	add    ecx,DWORD PTR [eax]
 32e:	83 05 22 00 02 04 03 	add    DWORD PTR ds:0x4020022,0x3
 335:	74 05                	je     33c <_init-0xcc4>
 337:	1c 00                	sbb    al,0x0
 339:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 33c:	08 82 05 22 00 02    	or     BYTE PTR [edx+0x2002205],al
 342:	04 03                	add    al,0x3
 344:	66 05 20 00          	add    ax,0x20
 348:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 34b:	f2 05 2b 00 02 04    	repnz add eax,0x402002b
 351:	03 03                	add    eax,DWORD PTR [ebx]
 353:	7a 08                	jp     35d <_init-0xca3>
 355:	4a                   	dec    edx
 356:	05 1b 00 02 04       	add    eax,0x402001b
 35b:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 35e:	09 00                	or     DWORD PTR [eax],eax
 360:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 363:	3c 05                	cmp    al,0x5
 365:	25 00 02 04 02       	and    eax,0x2040200
 36a:	8f 05 17 00 02 04    	pop    DWORD PTR ds:0x4020017
 370:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 373:	05 00 02 04 01       	add    eax,0x1040200
 378:	3c 05                	cmp    al,0x5
 37a:	01 03                	add    DWORD PTR [ebx],eax
 37c:	0a 90 05 15 92 05    	or     dl,BYTE PTR [eax+0x5921505]
 382:	0b 08                	or     ecx,DWORD PTR [eax]
 384:	22 05 05 c8 05 12    	and    al,BYTE PTR ds:0x1205c805
 38a:	bb 05 15 bb 05       	mov    ebx,0x5bb1505
 38f:	16                   	push   ss
 390:	c9                   	leave  
 391:	05 15 e5 05 13       	add    eax,0x1305e515
 396:	f3 05 0e c9 05 05    	repz add eax,0x505c90e
 39c:	74 05                	je     3a3 <_init-0xc5d>
 39e:	19 00                	sbb    DWORD PTR [eax],eax
 3a0:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 3a3:	2f                   	das    
 3a4:	05 25 00 02 04       	add    eax,0x4020025
 3a9:	03 08                	add    ecx,DWORD PTR [eax]
 3ab:	3b 05 17 00 02 04    	cmp    eax,DWORD PTR ds:0x4020017
 3b1:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 3b4:	05 00 02 04 01       	add    eax,0x1040200
 3b9:	3c 05                	cmp    al,0x5
 3bb:	09 5c 75 75          	or     DWORD PTR [ebp+esi*2+0x75],ebx
 3bf:	05 0e 75 05 05       	add    eax,0x505750e
 3c4:	74 05                	je     3cb <_init-0xc35>
 3c6:	0b 00                	or     eax,DWORD PTR [eax]
 3c8:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 3cb:	2f                   	das    
 3cc:	00 02                	add    BYTE PTR [edx],al
 3ce:	04 03                	add    al,0x3
 3d0:	67 00 02             	add    BYTE PTR [bp+si],al
 3d3:	04 03                	add    al,0x3
 3d5:	67 05 10 00 02 04    	addr16 add eax,0x4020010
 3db:	03 67 05             	add    esp,DWORD PTR [edi+0x5]
 3de:	25 00 02 04 03       	and    eax,0x3040200
 3e3:	c4 05 17 00 02 04    	les    eax,FWORD PTR ds:0x4020017
 3e9:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 3ec:	05 00 02 04 01       	add    eax,0x1040200
 3f1:	3c 5f                	cmp    al,0x5f
 3f3:	08 21                	or     BYTE PTR [ecx],ah
 3f5:	08 21                	or     BYTE PTR [ecx],ah
 3f7:	08 21                	or     BYTE PTR [ecx],ah
 3f9:	08 21                	or     BYTE PTR [ecx],ah
 3fb:	08 d7                	or     bh,dl
 3fd:	08 21                	or     BYTE PTR [ecx],ah
 3ff:	08 21                	or     BYTE PTR [ecx],ah
 401:	08 21                	or     BYTE PTR [ecx],ah
 403:	08 21                	or     BYTE PTR [ecx],ah
 405:	08 21                	or     BYTE PTR [ecx],ah
 407:	08 91 05 07 00 02    	or     BYTE PTR [ecx+0x2000705],dl
 40d:	04 01                	add    al,0x1
 40f:	cb                   	retf   
 410:	05 0e 00 02 04       	add    eax,0x402000e
 415:	01 59 05             	add    DWORD PTR [ecx+0x5],ebx
 418:	05 00 02 04 01       	add    eax,0x1040200
 41d:	58                   	pop    eax
 41e:	05 01 4b 05 23       	add    eax,0x23054b01
 423:	68 05 05 08 21       	push   0x21080505
 428:	08 21                	or     BYTE PTR [ecx],ah
 42a:	08 83 08 21 08 ad    	or     BYTE PTR [ebx-0x52f7def8],al
 430:	05 26 08 d7 05       	add    eax,0x5d70826
 435:	05 58 05 0e 08       	add    eax,0x80e0558
 43a:	91                   	xchg   ecx,eax
 43b:	05 05 74 05 09       	add    eax,0x9057405
 440:	00 02                	add    BYTE PTR [edx],al
 442:	04 03                	add    al,0x3
 444:	2f                   	das    
 445:	05 25 00 02 04       	add    eax,0x4020025
 44a:	03 02                	add    eax,DWORD PTR [edx]
 44c:	2b 11                	sub    edx,DWORD PTR [ecx]
 44e:	05 17 00 02 04       	add    eax,0x4020017
 453:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 456:	05 00 02 04 01       	add    eax,0x1040200
 45b:	3c 5b                	cmp    al,0x5b
 45d:	c9                   	leave  
 45e:	02 24 13             	add    ah,BYTE PTR [ebx+edx*1]
 461:	05 0e 08 21 05       	add    eax,0x521080e
 466:	05 74 05 19 00       	add    eax,0x190574
 46b:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 46e:	31 05 09 00 02 04    	xor    DWORD PTR ds:0x4020009,eax
 474:	03 56 05             	add    edx,DWORD PTR [esi+0x5]
 477:	19 00                	sbb    DWORD PTR [eax],eax
 479:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 47c:	08 83 05 09 00 02    	or     BYTE PTR [ebx+0x2000905],al
 482:	04 03                	add    al,0x3
 484:	57                   	push   edi
 485:	05 25 00 02 04       	add    eax,0x4020025
 48a:	03 02                	add    eax,DWORD PTR [edx]
 48c:	3a 11                	cmp    dl,BYTE PTR [ecx]
 48e:	05 17 00 02 04       	add    eax,0x4020017
 493:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 496:	05 00 02 04 01       	add    eax,0x1040200
 49b:	3c 5d                	cmp    al,0x5d
 49d:	c9                   	leave  
 49e:	08 21                	or     BYTE PTR [ecx],ah
 4a0:	08 21                	or     BYTE PTR [ecx],ah
 4a2:	08 21                	or     BYTE PTR [ecx],ah
 4a4:	08 21                	or     BYTE PTR [ecx],ah
 4a6:	08 21                	or     BYTE PTR [ecx],ah
 4a8:	08 21                	or     BYTE PTR [ecx],ah
 4aa:	08 21                	or     BYTE PTR [ecx],ah
 4ac:	05 01 08 21 05       	add    eax,0x5210801
 4b1:	23 68 05             	and    ebp,DWORD PTR [eax+0x5]
 4b4:	05 08 21 05 0e       	add    eax,0xe052108
 4b9:	08 21                	or     BYTE PTR [ecx],ah
 4bb:	05 05 74 05 09       	add    eax,0x9057405
 4c0:	00 02                	add    BYTE PTR [edx],al
 4c2:	04 03                	add    al,0x3
 4c4:	2f                   	das    
 4c5:	05 25 00 02 04       	add    eax,0x4020025
 4ca:	03 02                	add    eax,DWORD PTR [edx]
 4cc:	24 11                	and    al,0x11
 4ce:	05 17 00 02 04       	add    eax,0x4020017
 4d3:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 4d6:	05 00 02 04 01       	add    eax,0x1040200
 4db:	3c 05                	cmp    al,0x5
 4dd:	09 5b 05             	or     DWORD PTR [ebx+0x5],ebx
 4e0:	0b 75 05             	or     esi,DWORD PTR [ebp+0x5]
 4e3:	09 2f                	or     DWORD PTR [edi],ebp
 4e5:	05 0f 08 21 05       	add    eax,0x521080f
 4ea:	0d 58 05 0b 64       	or     eax,0x640b0558
 4ef:	05 1b 00 02 04       	add    eax,0x402001b
 4f4:	01 66 05             	add    DWORD PTR [esi+0x5],esp
 4f7:	14 00                	adc    al,0x0
 4f9:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 4fc:	3c 05                	cmp    al,0x5
 4fe:	11 5c 05 08          	adc    DWORD PTR [ebp+eax*1+0x8],ebx
 502:	58                   	pop    eax
 503:	05 19 00 02 04       	add    eax,0x4020019
 508:	01 58 05             	add    DWORD PTR [eax+0x5],ebx
 50b:	1f                   	pop    ds
 50c:	00 02                	add    BYTE PTR [edx],al
 50e:	04 01                	add    al,0x1
 510:	66 05 0c 91          	add    ax,0x910c
 514:	05 01 83 05 20       	add    eax,0x20058301
 519:	68 05 05 08 21       	push   0x21080505
 51e:	05 0e 08 21 05       	add    eax,0x521080e
 523:	05 74 05 09 00       	add    eax,0x90574
 528:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 52b:	2f                   	das    
 52c:	05 25 00 02 04       	add    eax,0x4020025
 531:	03 02                	add    eax,DWORD PTR [edx]
 533:	24 11                	and    al,0x11
 535:	05 17 00 02 04       	add    eax,0x4020017
 53a:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 53d:	05 00 02 04 01       	add    eax,0x1040200
 542:	3c 05                	cmp    al,0x5
 544:	09 5b 05             	or     DWORD PTR [ebx+0x5],ebx
 547:	0b 75 05             	or     esi,DWORD PTR [ebp+0x5]
 54a:	09 2f                	or     DWORD PTR [edi],ebp
 54c:	05 12 08 21 05       	add    eax,0x5210812
 551:	10 58 05             	adc    BYTE PTR [eax+0x5],bl
 554:	0b 64 05 21          	or     esp,DWORD PTR [ebp+eax*1+0x21]
 558:	00 02                	add    BYTE PTR [edx],al
 55a:	04 01                	add    al,0x1
 55c:	66 05 17 00          	add    ax,0x17
 560:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 563:	3c 05                	cmp    al,0x5
 565:	1c 5c                	sbb    al,0x5c
 567:	05 0c 58 05 17       	add    eax,0x1705580c
 56c:	08 ad 05 09 58 05    	or     BYTE PTR [ebp+0x5580905],ch
 572:	10 08                	adc    BYTE PTR [eax],cl
 574:	75 05                	jne    57b <_init-0xa85>
 576:	1a 66 05             	sbb    ah,BYTE PTR [esi+0x5]
 579:	09 58 08             	or     DWORD PTR [eax+0x8],ebx
 57c:	67 c9                	addr16 leave 
 57e:	05 0b 75 05 09       	add    eax,0x905750b
 583:	2f                   	das    
 584:	05 0f 08 4b 05       	add    eax,0x54b080f
 589:	0b 80 05 14 00 02    	or     eax,DWORD PTR [eax+0x2001405]
 58f:	04 01                	add    al,0x1
 591:	66 05 21 86          	add    ax,0x8621
 595:	05 12 58 05 10       	add    eax,0x10055812
 59a:	d7                   	xlat   BYTE PTR ds:[ebx]
 59b:	05 17 66 05 10       	add    eax,0x10056617
 5a0:	82 05 14 d7 05 16 08 	add    BYTE PTR ds:0x1605d714,0x8
 5a7:	e5 05                	in     eax,0x5
 5a9:	0e                   	push   cs
 5aa:	08 67 05             	or     BYTE PTR [edi+0x5],ah
 5ad:	05 74 05 1c 00       	add    eax,0x1c0574
 5b2:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 5b5:	2f                   	das    
 5b6:	05 1f 00 02 04       	add    eax,0x402001f
 5bb:	03 02                	add    eax,DWORD PTR [edx]
 5bd:	28 11                	sub    BYTE PTR [ecx],dl
 5bf:	05 05 00 02 04       	add    eax,0x4020005
 5c4:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 5c7:	01 85 05 21 68 05    	add    DWORD PTR [ebp+0x5682105],eax
 5cd:	05 08 21 05 0e       	add    eax,0xe052108
 5d2:	08 21                	or     BYTE PTR [ecx],ah
 5d4:	05 05 74 05 09       	add    eax,0x9057405
 5d9:	00 02                	add    BYTE PTR [edx],al
 5db:	04 03                	add    al,0x3
 5dd:	2f                   	das    
 5de:	05 25 00 02 04       	add    eax,0x4020025
 5e3:	03 02                	add    eax,DWORD PTR [edx]
 5e5:	24 11                	and    al,0x11
 5e7:	05 17 00 02 04       	add    eax,0x4020017
 5ec:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 5ef:	05 00 02 04 01       	add    eax,0x1040200
 5f4:	3c 05                	cmp    al,0x5
 5f6:	09 5b 05             	or     DWORD PTR [ebx+0x5],ebx
 5f9:	0b 75 05             	or     esi,DWORD PTR [ebp+0x5]
 5fc:	09 2f                	or     DWORD PTR [edi],ebp
 5fe:	05 12 08 21 05       	add    eax,0x5210812
 603:	10 58 05             	adc    BYTE PTR [eax+0x5],bl
 606:	0b 64 05 21          	or     esp,DWORD PTR [ebp+eax*1+0x21]
 60a:	00 02                	add    BYTE PTR [edx],al
 60c:	04 01                	add    al,0x1
 60e:	66 05 17 00          	add    ax,0x17
 612:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 615:	3c 05                	cmp    al,0x5
 617:	09 5c 05 0b          	or     DWORD PTR [ebp+eax*1+0xb],ebx
 61b:	75 05                	jne    622 <_init-0x9de>
 61d:	09 2f                	or     DWORD PTR [edi],ebp
 61f:	05 0f 08 e5 05       	add    eax,0x5e5080f
 624:	0b 80 05 23 00 02    	or     eax,DWORD PTR [eax+0x2002305]
 62a:	04 01                	add    al,0x1
 62c:	66 05 14 00          	add    ax,0x14
 630:	02 04 01             	add    al,BYTE PTR [ecx+eax*1]
 633:	c8 05 21 5c          	enter  0x2105,0x5c
 637:	05 12 58 05 10       	add    eax,0x10055812
 63c:	d7                   	xlat   BYTE PTR ds:[ebx]
 63d:	05 17 66 05 23       	add    eax,0x23056617
 642:	3c 05                	cmp    al,0x5
 644:	17                   	pop    ss
 645:	c8 05 10 2e          	enter  0x1005,0x2e
 649:	05 14 d7 05 16       	add    eax,0x1605d714
 64e:	08 d7                	or     bh,dl
 650:	05 0e 08 75 05       	add    eax,0x575080e
 655:	05 74 05 1c 00       	add    eax,0x1c0574
 65a:	02 04 03             	add    al,BYTE PTR [ebx+eax*1]
 65d:	2f                   	das    
 65e:	05 1f 00 02 04       	add    eax,0x402001f
 663:	03 02                	add    eax,DWORD PTR [edx]
 665:	28 11                	sub    BYTE PTR [ecx],dl
 667:	05 05 00 02 04       	add    eax,0x4020005
 66c:	01 4a 05             	add    DWORD PTR [edx+0x5],ecx
 66f:	01 85 05 23 68 05    	add    DWORD PTR [ebp+0x5682305],eax
 675:	0c 08                	or     al,0x8
 677:	4b                   	dec    ebx
 678:	05 0b 59 05 06       	add    eax,0x605590b
 67d:	2f                   	das    
 67e:	05 0f 08 d7 05       	add    eax,0x5d7080f
 683:	0b 80 05 1f 00 02    	or     eax,DWORD PTR [eax+0x2001f05]
 689:	04 01                	add    al,0x1
 68b:	ac                   	lods   al,BYTE PTR ds:[esi]
 68c:	05 15 00 02 04       	add    eax,0x4020015
 691:	01 66 05             	add    DWORD PTR [esi+0x5],esp
 694:	05 94 c9 05 11       	add    eax,0x1105c994
 699:	08 22                	or     BYTE PTR [edx],ah
 69b:	05 0d 83 05 0e       	add    eax,0xe05830d
 6a0:	67 05 05 74 05 17    	addr16 add eax,0x17057405
 6a6:	00 02                	add    BYTE PTR [edx],al
 6a8:	04 03                	add    al,0x3
 6aa:	2f                   	das    
 6ab:	05 16 00 02 04       	add    eax,0x4020016
 6b0:	03 e4                	add    esp,esp
 6b2:	05 11 00 02 04       	add    eax,0x4020011
 6b7:	03 74 05 1d          	add    esi,DWORD PTR [ebp+eax*1+0x1d]
 6bb:	00 02                	add    BYTE PTR [edx],al
 6bd:	04 03                	add    al,0x3
 6bf:	73 05                	jae    6c6 <_init-0x93a>
 6c1:	05 00 02 04 01       	add    eax,0x1040200
 6c6:	4a                   	dec    edx
 6c7:	69 05 0e 08 67 05 05 	imul   eax,DWORD PTR ds:0x567080e,0x9057405
 6ce:	74 05 09 
 6d1:	00 02                	add    BYTE PTR [edx],al
 6d3:	04 03                	add    al,0x3
 6d5:	2f                   	das    
 6d6:	05 1d 00 02 04       	add    eax,0x402001d
 6db:	03 08                	add    ecx,DWORD PTR [eax]
 6dd:	f1                   	icebp  
 6de:	05 05 00 02 04       	add    eax,0x4020005
 6e3:	01 4a 69             	add    DWORD PTR [edx+0x69],ecx
 6e6:	05 09 08 21 05       	add    eax,0x5210809
 6eb:	0b 75 05             	or     esi,DWORD PTR [ebp+0x5]
 6ee:	12 2f                	adc    ch,BYTE PTR [edi]
 6f0:	05 10 58 05 0b       	add    eax,0xb055810
 6f5:	65 05 17 00 02 04    	gs add eax,0x4020017
 6fb:	01 66 05             	add    DWORD PTR [esi+0x5],esp
 6fe:	05 69 05 0d c9       	add    eax,0xc90d0569
 703:	05 08 74 05 09       	add    eax,0x9057408
 708:	59                   	pop    ecx
 709:	05 11 08 22 05       	add    eax,0x5220811
 70e:	02 66 05             	add    ah,BYTE PTR [esi+0x5]
 711:	09 08                	or     DWORD PTR [eax],ecx
 713:	75 08                	jne    71d <_init-0x8e3>
 715:	21 05 14 08 75 05    	and    DWORD PTR ds:0x5750814,eax
 71b:	09 08                	or     DWORD PTR [eax],ecx
 71d:	d8 05 14 08 75 05    	fadd   DWORD PTR ds:0x5750814
 723:	05 08 bc 08 21       	add    eax,0x2108bc08
 728:	05 01 59 05 15       	add    eax,0x15055901
 72d:	68 05 05 08 21       	push   0x21080505
 732:	05 13 08 21 05       	add    eax,0x5210813
 737:	05 83 c9 05 1a       	add    eax,0x1a05c983
 73c:	08 c9                	or     cl,cl
 73e:	05 0d a0 08 21       	add    eax,0x2108a00d
 743:	30 08                	xor    BYTE PTR [eax],cl
 745:	21 30                	and    DWORD PTR [eax],esi
 747:	08 21                	or     BYTE PTR [ecx],ah
 749:	30 08                	xor    BYTE PTR [eax],cl
 74b:	21 30                	and    DWORD PTR [eax],esi
 74d:	08 21                	or     BYTE PTR [ecx],ah
 74f:	08 91 05 05 22 05    	or     BYTE PTR [ecx+0x5220505],dl
 755:	11 ca                	adc    edx,ecx
 757:	05 08 90 05 09       	add    eax,0x9059008
 75c:	91                   	xchg   ecx,eax
 75d:	08 21                	or     BYTE PTR [ecx],ah
 75f:	05 15 08 21 05       	add    eax,0x5210815
 764:	0c 66                	or     al,0x66
 766:	05 15 66 05 0c       	add    eax,0xc056615
 76b:	3c 05                	cmp    al,0x5
 76d:	0d 67 08 21 08       	or     eax,0x8210867
 772:	3e 08 21             	or     BYTE PTR ds:[ecx],ah
 775:	05 10 08 22 05       	add    eax,0x5220810
 77a:	0c 77                	or     al,0x77
 77c:	05 01 59 05 22       	add    eax,0x22055901
 781:	5e                   	pop    esi
 782:	05 05 08 83 08       	add    eax,0x8830805
 787:	75 05                	jne    78e <_init-0x872>
 789:	0c 59                	or     al,0x59
 78b:	05 01 59 02 0a       	add    eax,0xa025901
 790:	00 01                	add    BYTE PTR [ecx],al
 792:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f                   	pop    edi
   1:	5f                   	pop    edi
   2:	6f                   	outs   dx,DWORD PTR ds:[esi]
   3:	66 66 5f             	data16 pop di
   6:	74 00                	je     8 <_init-0xff8>
   8:	5f                   	pop    edi
   9:	49                   	dec    ecx
   a:	4f                   	dec    edi
   b:	5f                   	pop    edi
   c:	72 65                	jb     73 <_init-0xf8d>
   e:	61                   	popa   
   f:	64 5f                	fs pop edi
  11:	70 74                	jo     87 <_init-0xf79>
  13:	72 00                	jb     15 <_init-0xfeb>
  15:	5f                   	pop    edi
  16:	63 68 61             	arpl   WORD PTR [eax+0x61],bp
  19:	69 6e 00 73 70 6c 6f 	imul   ebp,DWORD PTR [esi+0x0],0x6f6c7073
  20:	69 74 77 61 72 7a 2e 	imul   esi,DWORD PTR [edi+esi*2+0x61],0x632e7a72
  27:	63 
  28:	00 73 69             	add    BYTE PTR [ebx+0x69],dh
  2b:	7a 65                	jp     92 <_init-0xf6e>
  2d:	5f                   	pop    edi
  2e:	74 00                	je     30 <_init-0xfd0>
  30:	67 61                	addr16 popa 
  32:	6d                   	ins    DWORD PTR es:[edi],dx
  33:	65 5f                	gs pop edi
  35:	6c                   	ins    BYTE PTR es:[edi],dx
  36:	6f                   	outs   dx,DWORD PTR ds:[esi]
  37:	6f                   	outs   dx,DWORD PTR ds:[esi]
  38:	70 00                	jo     3a <_init-0xfc6>
  3a:	5f                   	pop    edi
  3b:	73 68                	jae    a5 <_init-0xf5b>
  3d:	6f                   	outs   dx,DWORD PTR ds:[esi]
  3e:	72 74                	jb     b4 <_init-0xf4c>
  40:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  43:	00 69 6e             	add    BYTE PTR [ecx+0x6e],ch
  46:	74 5f                	je     a7 <_init-0xf59>
  48:	63 6d 70             	arpl   WORD PTR [ebp+0x70],bp
  4b:	00 74 75 72          	add    BYTE PTR [ebp+esi*2+0x72],dh
  4f:	6e                   	outs   dx,BYTE PTR ds:[esi]
  50:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  53:	4f                   	dec    edi
  54:	5f                   	pop    edi
  55:	32 5f 31             	xor    bl,BYTE PTR [edi+0x31]
  58:	5f                   	pop    edi
  59:	73 74                	jae    cf <_init-0xf31>
  5b:	64 65 72 72          	fs gs jb d1 <_init-0xf2f>
  5f:	5f                   	pop    edi
  60:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  63:	4f                   	dec    edi
  64:	5f                   	pop    edi
  65:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  68:	5f                   	pop    edi
  69:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
  6c:	65 00 6c 6f 6e       	add    BYTE PTR gs:[edi+ebp*2+0x6e],ch
  71:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  75:	6e                   	outs   dx,BYTE PTR ds:[esi]
  76:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
  7a:	73 69                	jae    e5 <_init-0xf1b>
  7c:	67 6e                	outs   dx,BYTE PTR ds:[si]
  7e:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
  83:	74 00                	je     85 <_init-0xf7b>
  85:	5f                   	pop    edi
  86:	5f                   	pop    edi
  87:	74 69                	je     f2 <_init-0xf0e>
  89:	6d                   	ins    DWORD PTR es:[edi],dx
  8a:	65 7a 6f             	gs jp  fc <_init-0xf04>
  8d:	6e                   	outs   dx,BYTE PTR ds:[esi]
  8e:	65 00 6c 6f 6e       	add    BYTE PTR gs:[edi+ebp*2+0x6e],ch
  93:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
  97:	6e                   	outs   dx,BYTE PTR ds:[esi]
  98:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
  9c:	74 00                	je     9e <_init-0xf62>
  9e:	5f                   	pop    edi
  9f:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [ebp+eiz*2+0x6e],0x6f
  a6:	5f                   	pop    edi
  a7:	49                   	dec    ecx
  a8:	4f                   	dec    edi
  a9:	5f                   	pop    edi
  aa:	72 65                	jb     111 <_init-0xeef>
  ac:	61                   	popa   
  ad:	64 5f                	fs pop edi
  af:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  b1:	64 00 5f 66          	add    BYTE PTR fs:[edi+0x66],bl
  b5:	6c                   	ins    BYTE PTR es:[edi],dx
  b6:	61                   	popa   
  b7:	67 73 00             	addr16 jae ba <_init-0xf46>
  ba:	64 6f                	outs   dx,DWORD PTR fs:[esi]
  bc:	5f                   	pop    edi
  bd:	67 61                	addr16 popa 
  bf:	6d                   	ins    DWORD PTR es:[edi],dx
  c0:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  c4:	72 75                	jb     13b <_init-0xec5>
  c6:	6e                   	outs   dx,BYTE PTR ds:[esi]
  c7:	5f                   	pop    edi
  c8:	67 61                	addr16 popa 
  ca:	6d                   	ins    DWORD PTR es:[edi],dx
  cb:	65 00 5f 49          	add    BYTE PTR gs:[edi+0x49],bl
  cf:	4f                   	dec    edi
  d0:	5f                   	pop    edi
  d1:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  d4:	5f                   	pop    edi
  d5:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  d7:	64 00 47 4e          	add    BYTE PTR fs:[edi+0x4e],al
  db:	55                   	push   ebp
  dc:	20 43 39             	and    BYTE PTR [ebx+0x39],al
  df:	39 20                	cmp    DWORD PTR [eax],esp
  e1:	38 2e                	cmp    BYTE PTR [esi],ch
  e3:	31 2e                	xor    DWORD PTR [esi],ebp
  e5:	30 20                	xor    BYTE PTR [eax],ah
  e7:	2d 6d 33 32 20       	sub    eax,0x2032336d
  ec:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
  f1:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
  f7:	72 69                	jb     162 <_init-0xe9e>
  f9:	63 20                	arpl   WORD PTR [eax],sp
  fb:	2d 6d 61 72 63       	sub    eax,0x6372616d
 100:	68 3d 69 36 38       	push   0x3836693d
 105:	36 20 2d 67 67 64 62 	and    BYTE PTR ss:0x62646767,ch
 10c:	20 2d 4f 30 20 2d    	and    BYTE PTR ds:0x2d20304f,ch
 112:	73 74                	jae    188 <_init-0xe78>
 114:	64 3d 63 39 39 20    	fs cmp eax,0x20393963
 11a:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
 11f:	73 74                	jae    195 <_init-0xe6b>
 121:	61                   	popa   
 122:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 125:	70 72                	jo     199 <_init-0xe67>
 127:	6f                   	outs   dx,DWORD PTR ds:[esi]
 128:	74 65                	je     18f <_init-0xe71>
 12a:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
 12e:	00 72 65             	add    BYTE PTR [edx+0x65],dh
 131:	74 76                	je     1a9 <_init-0xe57>
 133:	61                   	popa   
 134:	6c                   	ins    BYTE PTR es:[edi],dx
 135:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 138:	71 75                	jno    1af <_init-0xe51>
 13a:	61                   	popa   
 13b:	64 5f                	fs pop edi
 13d:	74 00                	je     13f <_init-0xec1>
 13f:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 141:	75 62                	jne    1a5 <_init-0xe5b>
 143:	6c                   	ins    BYTE PTR es:[edi],dx
 144:	65 00 5f 6f          	add    BYTE PTR gs:[edi+0x6f],bl
 148:	6c                   	ins    BYTE PTR es:[edi],dx
 149:	64 5f                	fs pop edi
 14b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 14c:	66 66 73 65          	data16 data16 jae 1b5 <_init-0xe4b>
 150:	74 00                	je     152 <_init-0xeae>
 152:	6d                   	ins    DWORD PTR es:[edi],dx
 153:	61                   	popa   
 154:	72 6b                	jb     1c1 <_init-0xe3f>
 156:	65 74 00             	gs je  159 <_init-0xea7>
 159:	67 65 74 5f          	addr16 gs je 1bc <_init-0xe44>
 15d:	66 6c                	data16 ins BYTE PTR es:[edi],dx
 15f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 160:	61                   	popa   
 161:	74 00                	je     163 <_init-0xe9d>
 163:	72 65                	jb     1ca <_init-0xe36>
 165:	73 74                	jae    1db <_init-0xe25>
 167:	6f                   	outs   dx,DWORD PTR ds:[esi]
 168:	63 6b 00             	arpl   WORD PTR [ebx+0x0],bp
 16b:	61                   	popa   
 16c:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 170:	6e                   	outs   dx,BYTE PTR ds:[esi]
 171:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 174:	4f                   	dec    edi
 175:	5f                   	pop    edi
 176:	6d                   	ins    DWORD PTR es:[edi],dx
 177:	61                   	popa   
 178:	72 6b                	jb     1e5 <_init-0xe1b>
 17a:	65 72 00             	gs jb  17d <_init-0xe83>
 17d:	73 74                	jae    1f3 <_init-0xe0d>
 17f:	64 69 6e 00 67 5f 70 	imul   ebp,DWORD PTR fs:[esi+0x0],0x6c705f67
 186:	6c 
 187:	61                   	popa   
 188:	79 65                	jns    1ef <_init-0xe11>
 18a:	72 00                	jb     18c <_init-0xe74>
 18c:	67 5f                	addr16 pop edi
 18e:	6c                   	ins    BYTE PTR es:[edi],dx
 18f:	6f                   	outs   dx,DWORD PTR ds:[esi]
 190:	63 73 00             	arpl   WORD PTR [ebx+0x0],si
 193:	5f                   	pop    edi
 194:	49                   	dec    ecx
 195:	4f                   	dec    edi
 196:	5f                   	pop    edi
 197:	46                   	inc    esi
 198:	49                   	dec    ecx
 199:	4c                   	dec    esp
 19a:	45                   	inc    ebp
 19b:	5f                   	pop    edi
 19c:	70 6c                	jo     20a <_init-0xdf6>
 19e:	75 73                	jne    213 <_init-0xded>
 1a0:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 1a3:	4f                   	dec    edi
 1a4:	5f                   	pop    edi
 1a5:	77 72                	ja     219 <_init-0xde7>
 1a7:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x727470
 1ae:	00 
 1af:	5f                   	pop    edi
 1b0:	73 62                	jae    214 <_init-0xdec>
 1b2:	75 66                	jne    21a <_init-0xde6>
 1b4:	00 67 65             	add    BYTE PTR [edi+0x65],ah
 1b7:	74 5f                	je     218 <_init-0xde8>
 1b9:	69 6e 70 75 74 00 73 	imul   ebp,DWORD PTR [esi+0x70],0x73007475
 1c0:	68 6f 72 74 20       	push   0x2074726f
 1c5:	75 6e                	jne    235 <_init-0xdcb>
 1c7:	73 69                	jae    232 <_init-0xdce>
 1c9:	67 6e                	outs   dx,BYTE PTR ds:[si]
 1cb:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
 1d0:	74 00                	je     1d2 <_init-0xe2e>
 1d2:	5f                   	pop    edi
 1d3:	49                   	dec    ecx
 1d4:	4f                   	dec    edi
 1d5:	5f                   	pop    edi
 1d6:	73 61                	jae    239 <_init-0xdc7>
 1d8:	76 65                	jbe    23f <_init-0xdc1>
 1da:	5f                   	pop    edi
 1db:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 1de:	65 00 64 6f 5f       	add    BYTE PTR gs:[edi+ebp*2+0x5f],ah
 1e3:	73 65                	jae    24a <_init-0xdb6>
 1e5:	6c                   	ins    BYTE PTR es:[edi],dx
 1e6:	6c                   	ins    BYTE PTR es:[edi],dx
 1e7:	00 5f 6c             	add    BYTE PTR [edi+0x6c],bl
 1ea:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1eb:	63 6b 00             	arpl   WORD PTR [ebx+0x0],bp
 1ee:	5f                   	pop    edi
 1ef:	66 6c                	data16 ins BYTE PTR es:[edi],dx
 1f1:	61                   	popa   
 1f2:	67 73 32             	addr16 jae 227 <_init-0xdd9>
 1f5:	00 5f 6d             	add    BYTE PTR [edi+0x6d],bl
 1f8:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1f9:	64 65 00 73 74       	fs add BYTE PTR gs:[ebx+0x74],dh
 1fe:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 200:	75 74                	jne    276 <_init-0xd8a>
 202:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 205:	4f                   	dec    edi
 206:	5f                   	pop    edi
 207:	32 5f 31             	xor    bl,BYTE PTR [edi+0x31]
 20a:	5f                   	pop    edi
 20b:	73 74                	jae    281 <_init-0xd7f>
 20d:	64 69 6e 5f 00 64 6f 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x5f6f6400
 214:	5f 
 215:	74 72                	je     289 <_init-0xd77>
 217:	61                   	popa   
 218:	76 65                	jbe    27f <_init-0xd81>
 21a:	6c                   	ins    BYTE PTR es:[edi],dx
 21b:	00 6d 61             	add    BYTE PTR [ebp+0x61],ch
 21e:	78 71                	js     291 <_init-0xd6f>
 220:	74 79                	je     29b <_init-0xd65>
 222:	00 68 65             	add    BYTE PTR [eax+0x65],ch
 225:	61                   	popa   
 226:	6c                   	ins    BYTE PTR es:[edi],dx
 227:	74 68                	je     291 <_init-0xd6f>
 229:	00 6e 6f             	add    BYTE PTR [esi+0x6f],ch
 22c:	6e                   	outs   dx,BYTE PTR ds:[esi]
 22d:	66 69 62 00 66 72    	imul   sp,WORD PTR [edx+0x0],0x7266
 233:	61                   	popa   
 234:	6e                   	outs   dx,BYTE PTR ds:[esi]
 235:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 237:	6d                   	ins    DWORD PTR es:[edi],dx
 238:	00 64 69 76          	add    BYTE PTR [ecx+ebp*2+0x76],ah
 23c:	69 73 6f 72 00 5f 49 	imul   esi,DWORD PTR [ebx+0x6f],0x495f0072
 243:	4f                   	dec    edi
 244:	5f                   	pop    edi
 245:	77 72                	ja     2b9 <_init-0xd47>
 247:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x646e65
 24e:	00 
 24f:	70 72                	jo     2c3 <_init-0xd3d>
 251:	69 63 65 00 69 74 65 	imul   esp,DWORD PTR [ebx+0x65],0x65746900
 258:	6d                   	ins    DWORD PTR es:[edi],dx
 259:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 25c:	6f                   	outs   dx,DWORD PTR ds:[esi]
 25d:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
 262:	74 00                	je     264 <_init-0xd9c>
 264:	5f                   	pop    edi
 265:	49                   	dec    ecx
 266:	4f                   	dec    edi
 267:	5f                   	pop    edi
 268:	6c                   	ins    BYTE PTR es:[edi],dx
 269:	6f                   	outs   dx,DWORD PTR ds:[esi]
 26a:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
 26d:	74 00                	je     26f <_init-0xd91>
 26f:	5f                   	pop    edi
 270:	49                   	dec    ecx
 271:	4f                   	dec    edi
 272:	5f                   	pop    edi
 273:	46                   	inc    esi
 274:	49                   	dec    ecx
 275:	4c                   	dec    esp
 276:	45                   	inc    ebp
 277:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 27a:	64 61                	fs popa 
 27c:	79 6c                	jns    2ea <_init-0xd16>
 27e:	69 67 68 74 00 72 61 	imul   esp,DWORD PTR [edi+0x68],0x61720074
 285:	6e                   	outs   dx,BYTE PTR ds:[esi]
 286:	67 65 00 5f 70       	add    BYTE PTR gs:[bx+0x70],bl
 28b:	6f                   	outs   dx,DWORD PTR ds:[esi]
 28c:	73 00                	jae    28e <_init-0xd72>
 28e:	77 72                	ja     302 <_init-0xcfe>
 290:	6f                   	outs   dx,DWORD PTR ds:[esi]
 291:	6e                   	outs   dx,BYTE PTR ds:[esi]
 292:	67 00 5f 6d          	add    BYTE PTR [bx+0x6d],bl
 296:	61                   	popa   
 297:	72 6b                	jb     304 <_init-0xcfc>
 299:	65 72 73             	gs jb  30f <_init-0xcf1>
 29c:	00 75 6e             	add    BYTE PTR [ebp+0x6e],dh
 29f:	73 69                	jae    30a <_init-0xcf6>
 2a1:	67 6e                	outs   dx,BYTE PTR ds:[si]
 2a3:	65 64 20 63 68       	gs and BYTE PTR fs:[ebx+0x68],ah
 2a8:	61                   	popa   
 2a9:	72 00                	jb     2ab <_init-0xd55>
 2ab:	73 68                	jae    315 <_init-0xceb>
 2ad:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2ae:	72 74                	jb     324 <_init-0xcdc>
 2b0:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
 2b3:	74 00                	je     2b5 <_init-0xd4b>
 2b5:	5f                   	pop    edi
 2b6:	76 74                	jbe    32c <_init-0xcd4>
 2b8:	61                   	popa   
 2b9:	62 6c 65 5f          	bound  ebp,QWORD PTR [ebp+eiz*2+0x5f]
 2bd:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2be:	66 66 73 65          	data16 data16 jae 327 <_init-0xcd9>
 2c2:	74 00                	je     2c4 <_init-0xd3c>
 2c4:	5f                   	pop    edi
 2c5:	49                   	dec    ecx
 2c6:	4f                   	dec    edi
 2c7:	5f                   	pop    edi
 2c8:	32 5f 31             	xor    bl,BYTE PTR [edi+0x31]
 2cb:	5f                   	pop    edi
 2cc:	73 74                	jae    342 <_init-0xcbe>
 2ce:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 2d0:	75 74                	jne    346 <_init-0xcba>
 2d2:	5f                   	pop    edi
 2d3:	00 62 69             	add    BYTE PTR [edx+0x69],ah
 2d6:	74 63                	je     33b <_init-0xcc5>
 2d8:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2d9:	69 6e 00 67 65 74 5f 	imul   ebp,DWORD PTR [esi+0x0],0x5f746567
 2e0:	73 74                	jae    356 <_init-0xcaa>
 2e2:	72 00                	jb     2e4 <_init-0xd1c>
 2e4:	6e                   	outs   dx,BYTE PTR ds:[esi]
 2e5:	75 6d                	jne    354 <_init-0xcac>
 2e7:	73 00                	jae    2e9 <_init-0xd17>
 2e9:	67 65 74 5f          	addr16 gs je 34c <_init-0xcb4>
 2ed:	69 6e 74 00 5f 6e 65 	imul   ebp,DWORD PTR [esi+0x74],0x656e5f00
 2f4:	78 74                	js     36a <_init-0xc96>
 2f6:	00 2f                	add    BYTE PTR [edi],ch
 2f8:	68 6f 6d 65 2f       	push   0x2f656d6f
 2fd:	67 6f                	outs   dx,DWORD PTR ds:[si]
 2ff:	6f                   	outs   dx,DWORD PTR ds:[esi]
 300:	67 6f                	outs   dx,DWORD PTR ds:[si]
 302:	6c                   	ins    BYTE PTR es:[edi],dx
 303:	2f                   	das    
 304:	73 65                	jae    36b <_init-0xc95>
 306:	63 75 72             	arpl   WORD PTR [ebp+0x72],si
 309:	69 74 79 2f 39 34 34 	imul   esi,DWORD PTR [ecx+edi*2+0x2f],0x37343439
 310:	37 
 311:	2f                   	das    
 312:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
 315:	70 36                	jo     34d <_init-0xcb3>
 317:	34 34                	xor    al,0x34
 319:	37                   	aaa    
 31a:	2f                   	das    
 31b:	77 61                	ja     37e <_init-0xc82>
 31d:	72 67                	jb     386 <_init-0xc7a>
 31f:	61                   	popa   
 320:	6d                   	ins    DWORD PTR es:[edi],dx
 321:	65 73 2f             	gs jae 353 <_init-0xcad>
 324:	32 2f                	xor    ch,BYTE PTR [edi]
 326:	66 6f                	outs   dx,WORD PTR ds:[esi]
 328:	72 6d                	jb     397 <_init-0xc69>
 32a:	61                   	popa   
 32b:	74 2d                	je     35a <_init-0xca6>
 32d:	73 74                	jae    3a3 <_init-0xc5d>
 32f:	72 69                	jb     39a <_init-0xc66>
 331:	6e                   	outs   dx,BYTE PTR ds:[esi]
 332:	67 00 5f 63          	add    BYTE PTR [bx+0x63],bl
 336:	75 72                	jne    3aa <_init-0xc56>
 338:	5f                   	pop    edi
 339:	63 6f 6c             	arpl   WORD PTR [edi+0x6c],bp
 33c:	75 6d                	jne    3ab <_init-0xc55>
 33e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 33f:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 342:	4f                   	dec    edi
 343:	5f                   	pop    edi
 344:	72 65                	jb     3ab <_init-0xc55>
 346:	61                   	popa   
 347:	64 5f                	fs pop edi
 349:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 34c:	65 00 5f 49          	add    BYTE PTR gs:[edi+0x49],bl
 350:	4f                   	dec    edi
 351:	5f                   	pop    edi
 352:	73 61                	jae    3b5 <_init-0xc4b>
 354:	76 65                	jbe    3bb <_init-0xc45>
 356:	5f                   	pop    edi
 357:	65 6e                	outs   dx,BYTE PTR gs:[esi]
 359:	64 00 67 65          	add    BYTE PTR fs:[edi+0x65],ah
 35d:	74 5f                	je     3be <_init-0xc42>
 35f:	64 69 67 69 74 00 5f 	imul   esp,DWORD PTR fs:[edi+0x69],0x5f5f0074
 366:	5f 
 367:	70 61                	jo     3ca <_init-0xc36>
 369:	64 31 00             	xor    DWORD PTR fs:[eax],eax
 36c:	5f                   	pop    edi
 36d:	5f                   	pop    edi
 36e:	70 61                	jo     3d1 <_init-0xc2f>
 370:	64 32 00             	xor    al,BYTE PTR fs:[eax]
 373:	5f                   	pop    edi
 374:	5f                   	pop    edi
 375:	70 61                	jo     3d8 <_init-0xc28>
 377:	64 33 00             	xor    eax,DWORD PTR fs:[eax]
 37a:	5f                   	pop    edi
 37b:	5f                   	pop    edi
 37c:	70 61                	jo     3df <_init-0xc21>
 37e:	64 34 00             	fs xor al,0x0
 381:	5f                   	pop    edi
 382:	5f                   	pop    edi
 383:	70 61                	jo     3e6 <_init-0xc1a>
 385:	64 35 00 5f 75 6e    	fs xor eax,0x6e755f00
 38b:	75 73                	jne    400 <_init-0xc00>
 38d:	65 64 32 00          	gs xor al,BYTE PTR fs:[eax]
 391:	73 74                	jae    407 <_init-0xbf9>
 393:	64 65 72 72          	fs gs jb 409 <_init-0xbf7>
 397:	00 61 72             	add    BYTE PTR [ecx+0x72],ah
 39a:	67 76 00             	addr16 jbe 39d <_init-0xc63>
 39d:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 39f:	5f                   	pop    edi
 3a0:	62 75 79             	bound  esi,QWORD PTR [ebp+0x79]
 3a3:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 3a6:	4f                   	dec    edi
 3a7:	5f                   	pop    edi
 3a8:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
 3ab:	6b 75 70 5f          	imul   esi,DWORD PTR [ebp+0x70],0x5f
 3af:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 3b2:	65 00 63 68          	add    BYTE PTR gs:[ebx+0x68],ah
 3b6:	6f                   	outs   dx,DWORD PTR ds:[esi]
 3b7:	69 63 65 00 61 72 67 	imul   esp,DWORD PTR [ebx+0x65],0x67726100
 3be:	63 00                	arpl   WORD PTR [eax],ax
 3c0:	5f                   	pop    edi
 3c1:	5f                   	pop    edi
 3c2:	74 7a                	je     43e <_init-0xbc2>
 3c4:	6e                   	outs   dx,BYTE PTR ds:[esi]
 3c5:	61                   	popa   
 3c6:	6d                   	ins    DWORD PTR es:[edi],dx
 3c7:	65 00 6d 61          	add    BYTE PTR gs:[ebp+0x61],ch
 3cb:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [esi+0x0],0x5f4f495f
 3d2:	77 72                	ja     446 <_init-0xbba>
 3d4:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x65736162
 3db:	65 
 3dc:	00 64 6f 5f          	add    BYTE PTR [edi+ebp*2+0x5f],ah
 3e0:	73 74                	jae    456 <_init-0xbaa>
 3e2:	61                   	popa   
 3e3:	74 75                	je     45a <_init-0xba6>
 3e5:	73 00                	jae    3e7 <_init-0xc19>
